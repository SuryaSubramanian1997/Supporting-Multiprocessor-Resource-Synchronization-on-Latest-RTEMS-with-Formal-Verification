diff -Naur original/cpukit/headers.am modified/cpukit/headers.am
--- original/cpukit/headers.am	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/headers.am	2022-11-11 16:52:30.000000000 +0100
@@ -357,6 +357,18 @@
 include_rtems_score_HEADERS += include/rtems/score/mppkt.h
 include_rtems_score_HEADERS += include/rtems/score/mrsp.h
 include_rtems_score_HEADERS += include/rtems/score/mrspimpl.h
+include_rtems_score_HEADERS += include/rtems/score/dpcp.h
+include_rtems_score_HEADERS += include/rtems/score/dpcpimpl.h
+include_rtems_score_HEADERS += include/rtems/score/mpcp.h
+include_rtems_score_HEADERS += include/rtems/score/mpcpimpl.h
+include_rtems_score_HEADERS += include/rtems/score/fmlps.h
+include_rtems_score_HEADERS += include/rtems/score/fmlpsimpl.h
+include_rtems_score_HEADERS += include/rtems/score/fmlpl.h
+include_rtems_score_HEADERS += include/rtems/score/fmlplimpl.h
+include_rtems_score_HEADERS += include/rtems/score/hdga.h
+include_rtems_score_HEADERS += include/rtems/score/hdgaimpl.h
+include_rtems_score_HEADERS += include/rtems/score/dflpl.h
+include_rtems_score_HEADERS += include/rtems/score/dflplimpl.h
 include_rtems_score_HEADERS += include/rtems/score/muteximpl.h
 include_rtems_score_HEADERS += include/rtems/score/object.h
 include_rtems_score_HEADERS += include/rtems/score/objectdata.h
diff -Naur original/cpukit/include/rtems/rtems/attr.h modified/cpukit/include/rtems/rtems/attr.h
--- original/cpukit/include/rtems/rtems/attr.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/rtems/attr.h	2022-11-11 16:52:30.000000000 +0100
@@ -150,6 +150,92 @@
  */
 #define RTEMS_MULTIPROCESSOR_RESOURCE_SHARING 0x00000100
 
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will use the Distributed Priority Ceiling Protocol.
+ *
+ *  @note The semaphore instance must be a binary semaphore.
+ */
+#define RTEMS_DISTRIBUTED_PRIORITY_CEILING 0x00004000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will NOT use the Distributed Priority Ceiling Protocol.
+ */
+#define RTEMS_NO_DISTRIBUTED_PRIORITY_CEILING 0x00000000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will NOT use the Flexible Multiprocessor Locking Protocol (short).
+ */
+#define RTEMS_NO_FLEXIBLE_MULTIPROCESSOR_LOCKING_SHORT 0x00000000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will use the Flexible Multiprocessor Locking Protocol (short).
+ *
+ *  @note The semaphore instance must be a binary semaphore.
+ */
+#define RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_SHORT 0x00000200
+
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will NOT use the Flexible Multiprocessor Locking Protocol (long).
+ */
+#define RTEMS_NO_FLEXIBLE_MULTIPROCESSOR_LOCKING_LONG 0x00000000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will use the Flexible Multiprocessor Locking Protocol (long).
+ *
+ *  @note The semaphore instance must be a binary semaphore.
+ */
+#define RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_LONG 0x00000400
+
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will NOT use the Distributed Flexible Locking Long.
+ */
+#define RTEMS_NO_DISTRIBUTED_FLEXIBLE_LOCKING_LONG 0x00000000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will use the Distributed Flexible Locking Long.
+ *
+ *  @note The semaphore instance must be a binary semaphore.
+ */
+#define RTEMS_DISTRIBUTED_FLEXIBLE_LOCKING_LONG 0x00000800
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will NOT use the Multiprocessor Priority Ceiling Protocol.
+ */
+#define RTEMS_NO_MULTIPROCESSOR_PRIORITY_CEILING 0x00000000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will use the Multiprocessor Priority Ceiling Protocol.
+ *
+ *  @note The semaphore instance must be a binary semaphore.
+ */
+#define RTEMS_MULTIPROCESSOR_PRIORITY_CEILING 0x00002000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will NOT use the Hyperperiod Dependency Graph Approach.
+ */
+#define RTEMS_NO_HYPERPERIOD_DEPENDENCY_GRAPH_APPROACH 0x00000000
+
+/**
+ *  This attribute constant indicates that the Classic API Semaphore instance
+ *  created will use the Hyperperiod Dependency Graph Approach.
+ *
+ *  @note The semaphore instance must be a binary semaphore.
+ */
+#define RTEMS_HYPERPERIOD_DEPENDENCY_GRAPH_APPROACH 0x00001000
+
 /******************** RTEMS Barrier Specific Attributes ********************/
 
 /**
diff -Naur original/cpukit/include/rtems/rtems/semdata.h modified/cpukit/include/rtems/rtems/semdata.h
--- original/cpukit/include/rtems/rtems/semdata.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/rtems/semdata.h	2022-11-11 16:52:30.000000000 +0100
@@ -21,8 +21,14 @@
 #include <rtems/rtems/sem.h>
 #include <rtems/score/coremutex.h>
 #include <rtems/score/coresem.h>
+#include <rtems/score/mpcp.h>
 #include <rtems/score/mrsp.h>
+#include <rtems/score/dpcp.h>
 #include <rtems/score/object.h>
+#include <rtems/score/fmlps.h>
+#include <rtems/score/fmlpl.h>
+#include <rtems/score/hdga.h>
+#include <rtems/score/dflpl.h>
 
 #ifdef __cplusplus
 extern "C" {
@@ -78,6 +84,12 @@
 
 #if defined(RTEMS_SMP)
     MRSP_Control MRSP;
+    DPCP_Control DPCP;
+    MPCP_Control MPCP;
+    FMLPS_Control FMLPS;
+    FMLPL_Control FMLPL;
+    HDGA_Control HDGA;
+    DFLPL_Control DFLPL;
 #endif
   } Core_control;
 }   Semaphore_Control;
diff -Naur original/cpukit/include/rtems/rtems/sem.h modified/cpukit/include/rtems/rtems/sem.h
--- original/cpukit/include/rtems/rtems/sem.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/rtems/sem.h	2022-11-11 16:52:30.000000000 +0100
@@ -120,6 +120,46 @@
 );
 
 /**
+ * @brief RTEMS Semaphore Set Processor
+ *
+ * Sets the synchronization processor for the DFLPL and DPCP semaphores. It
+ * attempts to obtain a unit from the semaphore associated with ID.
+ *
+ *
+ * @param[in] id is the semaphore id
+ * @param[in] cpu is the number of the processor in the system
+ *
+ * @retval This method returns RTEMS_SUCCESSFUL if there was not an
+ *         error. Otherwise, a status code is returned indicating the
+ *         source of the error.
+ */
+rtems_status_code rtems_semaphore_set_processor(
+  rtems_id id,
+  int      cpu
+);
+
+/**
+ * @brief RTEMS Semaphore Set Ticket
+ *
+ * Sets ticket order for the hdga semaphore.
+ *
+ *
+ * @param[in] id is the semaphore id
+ * @param[in] id is the thread id
+ * @param[in] cpu is the number of the processor in the system
+ *
+ * @retval This method returns RTEMS_SUCCESSFUL if there was not an
+ *         error. Otherwise, a status code is returned indicating the
+ *         source of the error.
+ */
+rtems_status_code rtems_semaphore_ticket(
+  rtems_id id,
+  rtems_id tid,
+  int 	   position
+);
+
+
+/**
  *  @brief RTEMS Semaphore Release
  *
  *  This routine implements the rtems_semaphore_release directive.  It
diff -Naur original/cpukit/include/rtems/rtems/semimpl.h modified/cpukit/include/rtems/rtems/semimpl.h
--- original/cpukit/include/rtems/rtems/semimpl.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/rtems/semimpl.h	2023-02-10 16:52:18.302302000 +0100
@@ -21,6 +21,12 @@
 #include <rtems/score/coremuteximpl.h>
 #include <rtems/score/coresemimpl.h>
 #include <rtems/score/mrspimpl.h>
+#include <rtems/score/dpcpimpl.h>
+#include <rtems/score/mpcpimpl.h>
+#include <rtems/score/fmlpsimpl.h>
+#include <rtems/score/fmlplimpl.h>
+#include <rtems/score/hdgaimpl.h>
+#include <rtems/score/dflplimpl.h>
 
 #ifdef __cplusplus
 extern "C" {
@@ -47,7 +53,13 @@
   SEMAPHORE_VARIANT_COUNTING
 #if defined(RTEMS_SMP)
   ,
-  SEMAPHORE_VARIANT_MRSP
+  SEMAPHORE_VARIANT_MRSP,
+  SEMAPHORE_VARIANT_DPCP,
+  SEMAPHORE_VARIANT_MPCP,
+  SEMAPHORE_VARIANT_FMLPS,
+  SEMAPHORE_VARIANT_FMLPL,
+  SEMAPHORE_VARIANT_HDGA,
+  SEMAPHORE_VARIANT_DFLPL
 #endif
 } Semaphore_Variant;
 
@@ -69,6 +81,7 @@
   uintptr_t          flags
 )
 {
+	//printf("Flags given for setting : %d\n",flags);
   _Assert( _Chain_Is_node_off_chain( &the_semaphore->Object.Node ) );
   the_semaphore->Object.Node.previous = (Chain_Node *) flags;
 }
@@ -77,7 +90,10 @@
   uintptr_t flags
 )
 {
-  return (Semaphore_Discipline) ( flags & 0x7 );
+	//printf("flags obtained from get flags for getting variant : %d\n",flags);
+	//return (Semaphore_Discipline) ( (flags-8) & 0xF );
+	//printf("Get variant returns either : %d or : %d\n",(Semaphore_Discipline) ( flags & 0xF ), (Semaphore_Discipline) ( flags & 0x7 ));
+  return (flags >15)? (Semaphore_Discipline) ( flags & 0xF ) : (Semaphore_Discipline) ( flags & 0x7 );
 }
 
 RTEMS_INLINE_ROUTINE uintptr_t _Semaphore_Set_variant(
@@ -85,14 +101,16 @@
   Semaphore_Variant variant
 )
 {
+	//printf("Setting Variant FLAGS:%d VARIANT: %d\n",flags,variant);
   return flags | variant;
 }
 
+
 RTEMS_INLINE_ROUTINE Semaphore_Discipline _Semaphore_Get_discipline(
   uintptr_t flags
 )
 {
-  return (Semaphore_Discipline) ( ( flags >> 3 ) & 0x1 );
+  return (flags >15) ? (Semaphore_Discipline) ( ( flags >> 4 ) & 0x1 ) : (Semaphore_Discipline) ( ( flags >> 3 ) & 0x1 );
 }
 
 RTEMS_INLINE_ROUTINE uintptr_t _Semaphore_Set_discipline(
@@ -100,7 +118,9 @@
   Semaphore_Discipline discipline
 )
 {
-  return flags | ( discipline << 3 );
+	//printf("Setting Discipline FLAGS : %d DISC : %d\n",flags,discipline);
+	//printf("Setting Discipline RETURNS EITHER : %d OR : %d\n",flags | ( discipline << 4 ) , flags | ( discipline << 3 ));
+  return (flags >7) ? flags | ( discipline << 4 ) : flags | ( discipline << 3 );
 }
 
 #if defined(RTEMS_MULTIPROCESSING)
diff -Naur original/cpukit/include/rtems/score/dflpl.h modified/cpukit/include/rtems/score/dflpl.h
--- original/cpukit/include/rtems/score/dflpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/dflpl.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,48 @@
+/*
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_DFLPL_H
+#define _RTEMS_SCORE_DFLPL_H
+
+#include <rtems/score/cpuopts.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/threadq.h>
+#include <rtems/score/percpu.h>
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @brief DFLPL control block.
+ */
+typedef struct {
+  // our thread queue
+  Thread_queue_Control Wait_queue;
+
+  // the priority node, which is assigned to the priority owner
+  Priority_Node root_node;
+
+  // our array for keeping the priorities of all tasks
+  Priority_Control *priority_array;
+
+  // current first free position
+  int first_free_slot;
+
+  //Pointer to the synchronization cpu control structure
+  Per_CPU_Control *pu;
+} DFLPL_Control;
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_DFLPL_H */
diff -Naur original/cpukit/include/rtems/score/dflplimpl.h modified/cpukit/include/rtems/score/dflplimpl.h
--- original/cpukit/include/rtems/score/dflplimpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/dflplimpl.h	2023-02-12 13:52:02.231914000 +0100
@@ -0,0 +1,614 @@
+
+
+
+#ifndef _RTEMS_SCORE_DFLPLIMPL_H
+#define _RTEMS_SCORE_DFLPLIMPL_H
+
+#include "dflpl.h"
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/assert.h>
+#include <rtems/score/status.h>
+#include <rtems/score/threadqimpl.h>
+#include <rtems/score/watchdogimpl.h>
+#include <rtems/score/wkspace.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @addtogroup ScoreDFLPL
+ *
+ * @{
+ */
+
+#define DFLPL_TQ_OPERATIONS &_Thread_queue_Operations_FIFO
+
+/**
+ * @brief Migrates Thread to an synchronization processor.
+ *
+ * @param executing The executing Thread
+ * @param dflpl the semaphore control block
+ * @param migration_priority the priority of the task in the foreign scheduler instance
+ */
+RTEMS_INLINE_ROUTINE void _DFLPL_Migrate(
+    Thread_Control *executing,
+    DFLPL_Control  *dflpl,
+    Priority_Node  *migration_priority
+)
+{
+
+  _Scheduler_Migrate_To(executing, dflpl->pu, migration_priority);
+}
+
+/**
+ * @brief Migrates Thread back to the application processor.
+ *
+ * @param executing The executing Thread
+ * @param dflpl the semaphore control block
+ */
+RTEMS_INLINE_ROUTINE void _DFLPL_Migrate_Back(
+  Thread_Control *executing,
+  DFLPL_Control  *dflpl
+)
+{
+  _Scheduler_Migrate_Back( executing, dflpl->pu );
+
+}
+
+/**
+ * @brief Acquires the lock for the queue_context
+ *
+ * @param dflpl The DFLPL control for the operation.
+ * @param queue_contest the queue_context of the semphore
+ */
+RTEMS_INLINE_ROUTINE void _DFLPL_Acquire_critical(
+  DFLPL_Control        *dflpl,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Acquire_critical( &dflpl->Wait_queue, queue_context );
+}
+
+
+/**
+ * @brief Releases the lock for the queue_context
+ *
+ * @param dflpl The DFLPL control for the operation.
+ * @param queue_contest the queue_context of the semphore
+ */
+RTEMS_INLINE_ROUTINE void _DFLPL_Release(
+  DFLPL_Control        *dflpl,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Release( &dflpl->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Sets the synchronization CPU of the DFLPL Control
+ *
+ * @param dpcp The semaphore control block-
+ * @param cpu The synchronization processor it changes to.
+ * @param queue_context struct to secure sempahore access
+ */
+
+RTEMS_INLINE_ROUTINE void _DFLPL_Set_CPU(
+  DFLPL_Control        *dflpl,
+  Per_CPU_Control      *cpu,
+  Thread_queue_Context *queue_context
+)
+{
+  _DFLPL_Acquire_critical(dflpl, queue_context);
+  dflpl->pu = cpu;
+  _DFLPL_Release(dflpl, queue_context);
+
+}
+/**
+ * @brief Gets the current owner of the semaphore
+ * @param dflpl The DFLPL control for the operation.
+ *
+ * @return The current owner otherwise NULL
+ */
+RTEMS_INLINE_ROUTINE Thread_Control *_DFLPL_Get_owner(
+  const DFLPL_Control *dflpl
+)
+{
+  return dflpl->Wait_queue.Queue.owner;
+}
+
+/**
+ * @brief Sets the current owner of the semaphore in the semaphore data structure
+ *
+ * @param dflpl The DFLPL control for the operation.
+ * @param executing The new owner
+ */
+RTEMS_INLINE_ROUTINE void _DFLPL_Set_owner(
+  DFLPL_Control  *dflpl,
+  Thread_Control *owner
+)
+{
+  dflpl->Wait_queue.Queue.owner = owner;
+}
+
+/**
+ * @brief Gets the priority of the executing task in its home scheduler instance
+ *
+ * @param executing The new owner
+ */
+RTEMS_INLINE_ROUTINE Priority_Control _DFLPL_Get_priority(
+  const Thread_Control *the_thread
+)
+{
+  const Scheduler_Node    *scheduler_node;
+  const Scheduler_Control *scheduler;
+  Priority_Control         core_priority;
+
+  scheduler = _Thread_Scheduler_get_home( the_thread );
+  scheduler_node = _Thread_Scheduler_get_home_node( the_thread );
+
+  core_priority = _Priority_Get_priority( &scheduler_node->Wait.Priority );
+  return _RTEMS_Priority_From_core( scheduler, core_priority );
+}
+
+/**
+ * @brief Changes the priority of the owner of the semaphore in a different scheduler instance
+ *
+ * @param executing The owner
+ * @param new_prio the new priority of the owning task
+ * @param dflpl the smepahore control structure
+ * @param queue_context the queue_context of the semaphore
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Change_Owner_Priority(
+  Thread_Control       *executing,
+  Priority_Control      new_prio,
+  DFLPL_Control        *dflpl,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_Control  *owner;
+  ISR_lock_Context lock_context;
+  Priority_Node   *priority_node;
+
+  priority_node = &(dflpl->root_node);
+  owner = _DFLPL_Get_owner(dflpl);
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( owner, &lock_context );
+  _Priority_Node_initialize(priority_node, SCHEDULER_PRIORITY_MAP(new_prio));
+  _Scheduler_Change_migration_priority(owner, dflpl->pu, priority_node);
+  _Thread_Wait_release_default_critical( owner, &lock_context );
+  return RTEMS_SUCCESSFUL;
+}
+
+
+/**
+ * @brief Gets the minimum priority of the priority array of the dflpl semaphore
+ *
+ * @param dflpl The DFLPL control for the operation.
+ *
+ */
+RTEMS_INLINE_ROUTINE Priority_Control _DFLPL_Get_Min_Priority(
+  DFLPL_Control *dflpl
+)
+{
+  int		   i;
+  int 		   fs;
+  Priority_Control min_prio;
+
+  min_prio = PRIORITY_DEFAULT_MAXIMUM;
+  fs = dflpl->first_free_slot;
+
+  if(fs >0)
+  {
+	  /*@
+	      loop invariant 0<=i<=fs;
+	      loop assigns i, min_prio;
+	      loop variant fs-i;
+	     */
+	  for ( i = 0; i < fs; i++ ) {
+	      if ( dflpl->priority_array[i] < min_prio ) {
+	        min_prio = dflpl->priority_array[i];
+	       }
+	    }
+	  //@ assert i == fs;
+  }
+  return min_prio;
+}
+
+/**
+ * @brief Inserts priority into the priority array of the DFLP-L control.
+ *
+ * @param dflp The DFLP-L control, to get the priority array.
+ * @param executing The currently executing thread.
+ *
+ * @retval 0 The operation succeeded.
+ * @retval 1 No free spot available.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Insert(
+  DFLPL_Control  *dflpl,
+  Thread_Control *executing
+)
+{
+  //negative slot number
+  if ( dflpl->first_free_slot < 0 ) {
+    return 1;
+  }
+
+   //slot number over maximum
+  if ( dflpl->first_free_slot > 15 ) {
+    return 1;
+  }
+
+  //slot already in use
+  if ( dflpl->priority_array[dflpl->first_free_slot] != 0 ) {
+    return 1;
+  }
+
+  //adding the priority of the waiting thread
+  dflpl->priority_array[dflpl->first_free_slot] = _DFLPL_Get_priority( executing );
+  if ( dflpl->first_free_slot==15 ) {
+  }
+  dflpl->first_free_slot++;
+  return 0;
+}
+
+/**
+ * @brief Removes priority from the priority array
+ *
+ * @param dflpl The DFLP-L control for the operation.
+ *
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_remove(
+  DFLPL_Control *dflpl
+)
+{
+  if ( dflpl->first_free_slot < 0 ) {
+    return 1;
+  }
+
+  if ( dflpl->first_free_slot > 15 ) {
+    return 1;
+  }
+
+  if ( dflpl->priority_array[dflpl->first_free_slot] != 0 ) {
+    return 1;
+  }
+  int i, fs;
+  Priority_Control head; //not in use
+  head = dflpl->priority_array[0]; //not in use
+  fs = dflpl->first_free_slot;
+  /*@
+    loop invariant 0<=i<=fs;
+    loop assigns i, dflpl->priority_array[0 .. fs];
+    loop variant fs-i;
+   */
+  for ( i = 0; i < fs; i++ ) {
+      dflpl->priority_array[i] = dflpl->priority_array[i+1];
+  }
+  // assert i == fs;
+  dflpl->first_free_slot--;
+  fs = dflpl->first_free_slot;
+  dflpl->priority_array[fs] = 0;
+  return 0;
+}
+
+/**
+ * @brief Adds thread to priority array, triggers priority changes to owner thread.
+ *
+ * @param dflpl DFLP-L to get the array form.
+ * @param executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_add(
+  DFLPL_Control        *dflpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Priority_Control min, newmin;
+  min = _DFLPL_Get_Min_Priority( dflpl );
+  _DFLPL_Insert( dflpl, executing );
+
+  newmin = _DFLPL_Get_Min_Priority( dflpl );
+  if ( newmin < min ) {
+    _DFLPL_Change_Owner_Priority( executing, newmin, dflpl, queue_context );
+  }
+  return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Gets the minimum priority of the priority array of the DFLP-L semaphore
+ *
+ * @param dflpl The DFLP-L control for the operation.
+ * @param executing The executing task
+ * @param queue_context struct to secure sempahore access
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ *
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Claim_ownership(
+  DFLPL_Control        *dflpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Per_CPU_Control *cpu_self;
+  ISR_lock_Context lock_context;
+  Priority_Node   *priority_node;
+
+  cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _DFLPL_Set_owner( dflpl, executing );
+  priority_node = &(dflpl->root_node);
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( executing, &lock_context );
+  _Priority_Node_initialize(priority_node, _DFLPL_Get_priority(executing));
+  _DFLPL_Migrate(executing, dflpl, priority_node);
+
+  _Thread_Wait_release_default_critical( executing, &lock_context );
+  _DFLPL_Release( dflpl, queue_context );
+  _Thread_Dispatch_enable( cpu_self );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Initializes a DFLPL control. The sychronization processor is set to CPU#1
+ *	by default.
+ *
+ * @param[out] dflpl The DFLPL control that is initialized.
+ * @param scheduler The scheduler for the operation.
+ * @param ceiling_priority
+ * @param executing The currently executing thread.  Ignored in this method.
+ * @param initially_locked Indicates whether the DFLPL control shall be initally
+ *      locked. If it is initially locked, this method returns STATUS_INVALID_NUMBER.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_INVALID_NUMBER The DFLPL control is initially locked.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Initialize(
+  DFLPL_Control           *dflpl,
+  const Scheduler_Control *scheduler,
+  Priority_Control         ceiling_priority,
+  Thread_Control          *executing,
+  bool                     initially_locked
+)
+{
+  int i;
+
+  if ( initially_locked ) {
+      return STATUS_INVALID_NUMBER;
+  }
+
+  dflpl->pu = _Per_CPU_Get_by_index(1);
+  _Thread_queue_Object_initialize( &dflpl->Wait_queue );
+
+  dflpl->priority_array = _Workspace_Allocate(
+      sizeof( *dflpl->priority_array ) * 16 );
+  /*@
+     loop invariant 0<=i<=16;
+     loop assigns i, dflpl->priority_array[0 .. 16];
+     loop invariant \forall int j; 0 <= j < i ==> dflpl->priority_array[j] == 0;
+     loop variant 16-i;
+    */
+  for ( i = 0; i < 16; i++ ) {
+    dflpl->priority_array[i] = 0;
+  }//@ assert i == 16;
+  dflpl->first_free_slot = 0;
+
+  Priority_Node *priority_node;
+  priority_node = &( dflpl->root_node );
+
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Waits for the ownership of the DFLP-L control.
+ *
+ * @param[in, out] dflpl The DFLP-L control to get the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context the thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the
+ *      currently executing thread exceeds the ceiling priority.
+ * @retval STATUS_DEADLOCK A deadlock occured.
+ * @retval STATUS_TIMEOUT A timeout occured.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Wait_for_ownership(
+  DFLPL_Control        *dflpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Per_CPU_Control *cpu_self;
+  ISR_lock_Context lock_context;
+  Priority_Node   *priority_node;
+  Priority_Control new_high_prio;
+
+  cpu_self = _Thread_Dispatch_disable_critical( &queue_context->Lock_context.Lock_context );
+  _DFLPL_add( dflpl, executing, queue_context );
+
+  _Thread_queue_Context_set_thread_state(
+    queue_context,
+    STATES_WAITING_FOR_MUTEX
+  );
+  _Thread_queue_Context_set_enqueue_do_nothing_extra( queue_context );
+  _Thread_queue_Context_set_deadlock_callout(
+    queue_context,
+    _Thread_queue_Deadlock_status
+  );
+  _Thread_queue_Enqueue2(
+    &dflpl->Wait_queue.Queue,
+    DFLPL_TQ_OPERATIONS,
+    executing,
+    queue_context,
+    cpu_self
+  );
+
+  _DFLPL_Acquire_critical( dflpl, queue_context );
+  if(0 < dflpl->first_free_slot && dflpl->first_free_slot < 15)
+  {
+	  _DFLPL_remove( dflpl );
+  }
+ // new_high_prio = _DFLPL_Get_Min_Priority( dflpl ); Not used
+  priority_node = &( dflpl->root_node );
+  _DFLPL_Release( dflpl, queue_context );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Seizes the semaphore. Triggers the subroutines wait for semaphore and claim
+ *
+ * @param dflpl The DFLPL control for the operation.
+ * @param executing The executing task
+ * @param queue_context struct to secure sempahore access
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_UNAVAVILABLE Seizing not possible.
+ *
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Seize(
+  DFLPL_Control        *dflpl,
+  Thread_Control       *executing,
+  bool                  wait,
+  Thread_queue_Context *queue_context
+)
+{
+  Status_Control  status;
+  Thread_Control *owner;
+
+  _DFLPL_Acquire_critical( dflpl, queue_context );
+
+  owner = _DFLPL_Get_owner( dflpl );
+
+  if ( owner == NULL ) {
+    status = _DFLPL_Claim_ownership( dflpl, executing, queue_context );
+  } else if ( owner == executing ) {
+    _DFLPL_Release( dflpl, queue_context );
+    status = STATUS_UNAVAILABLE;
+  } else if ( wait ) {
+    status = _DFLPL_Wait_for_ownership( dflpl, executing, queue_context );
+  } else {
+    _DFLPL_Release( dflpl, queue_context );
+    status = STATUS_UNAVAILABLE;
+  }
+
+  return status;
+}
+
+/**
+ * @brief Surrenders the DFLP-L control.
+ *
+ * @param[in, out] dflpl The DFLP-L control to surrender the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_NOT_OWNER The executing thread does not own the DFLP-L control.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Surrender(
+  DFLPL_Control        *dflpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_queue_Heads *heads;
+  ISR_lock_Context    lock_context;
+  Priority_Node      *priority_node;
+  Per_CPU_Control    *cpu_self;
+
+  cpu_self = _Thread_Dispatch_disable_critical( &queue_context->Lock_context.Lock_context );
+  priority_node =    &( dflpl->root_node );
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+
+  if ( _DFLPL_Get_owner( dflpl ) != executing ) {
+    _ISR_lock_ISR_enable( &queue_context->Lock_context.Lock_context );
+    return STATUS_NOT_OWNER;
+  }
+
+  _DFLPL_Acquire_critical( dflpl, queue_context );
+  _DFLPL_Set_owner( dflpl, NULL );
+  heads = dflpl->Wait_queue.Queue.heads;
+
+  if ( heads == NULL ) {
+    _DFLPL_Release( dflpl, queue_context );
+    _Thread_queue_Context_clear_priority_updates( queue_context );
+    _Thread_Wait_acquire_default_critical( executing, &lock_context );
+    _DFLPL_Migrate_Back( executing, dflpl );
+    _Thread_Wait_release_default_critical( executing, &lock_context );
+    _Thread_Dispatch_enable( cpu_self );
+    return RTEMS_SUCCESSFUL;
+  }
+
+  _Priority_Node_initialize(
+    priority_node,
+    SCHEDULER_PRIORITY_MAP( _DFLPL_Get_Min_Priority( dflpl ) )
+  );
+
+  _Thread_queue_Surrender_and_Migrate(
+    &dflpl->Wait_queue.Queue,
+    heads,
+    executing,
+    queue_context,
+    DFLPL_TQ_OPERATIONS,
+    dflpl->pu,
+    priority_node
+  );
+
+  _Thread_Wait_acquire_default_critical( executing, &lock_context );
+  _DFLPL_Migrate_Back( executing, dflpl );
+  _Thread_Wait_release_default_critical( executing, &lock_context );
+  _Thread_Dispatch_enable( cpu_self );
+
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Checks if the DFLP-L control can be destroyed.
+ *
+ * @param dflpl The DFLP-L control for the operation.
+ *
+ * @retval STATUS_SUCCESSFUL The DFLP-L is currently not used
+ *      and can be destroyed.
+ * @retval STATUS_RESOURCE_IN_USE The DFLP-L control is in use,
+ *      it cannot be destroyed.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DFLPL_Can_destroy(
+  DFLPL_Control *dflpl
+)
+{
+  if ( _DFLPL_Get_owner( dflpl ) != NULL ) {
+    return STATUS_RESOURCE_IN_USE;
+  }
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Destroys the DFLP-L control
+ *
+ * @param[in, out] The dflpl that is about to be destroyed.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _DFLPL_Destroy(
+  DFLPL_Control        *dflpl,
+  Thread_queue_Context *queue_context
+)
+{
+  _DFLPL_Release( dflpl, queue_context );
+  _Thread_queue_Destroy( &dflpl->Wait_queue );
+}
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_DFLPLIMPL_H */
diff -Naur original/cpukit/include/rtems/score/dpcp.h modified/cpukit/include/rtems/score/dpcp.h
--- original/cpukit/include/rtems/score/dpcp.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/dpcp.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) 2018 Jan Pham.  All rights reserved.
+ *
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_DPCP
+#define _RTEMS_SCORE_DPCP
+
+#include <rtems/score/cpuopts.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/threadq.h>
+#include <rtems/score/percpu.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @brief DPCP control block.
+ */
+typedef struct {
+  /**
+   * @brief The thread queue to manage ownership and waiting threads.
+   */
+  Thread_queue_Control Wait_queue;
+
+  /**
+  * @brief User-defined sychronization cpu, where the thread migrates to
+  */
+  Per_CPU_Control *cpu;
+
+
+  /**
+   * @brief The ceiling priority used by the owner thread.
+   */
+  Priority_Node Ceiling_priority;
+
+
+} DPCP_Control;
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_DPCP */
diff -Naur original/cpukit/include/rtems/score/dpcpimpl.h modified/cpukit/include/rtems/score/dpcpimpl.h
--- original/cpukit/include/rtems/score/dpcpimpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/dpcpimpl.h	2023-02-12 13:49:07.000314000 +0100
@@ -0,0 +1,430 @@
+#ifndef _RTEMS_SCORE_DPCPIMPL_H
+#define _RTEMS_SCORE_DPCPIMPL_H
+
+#include <rtems/score/dpcp.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/assert.h>
+#include <rtems/score/status.h>
+#include <rtems/score/threadqimpl.h>
+#include <rtems/score/watchdogimpl.h>
+#include <rtems/score/wkspace.h>
+#include <rtems/score/scheduler.h>
+#include <rtems/score/schedulerimpl.h>
+#include <rtems/score/coremuteximpl.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @addtogroup ScoreDPCP
+ *
+ * @{
+ */
+#define DPCP_TQ_OPERATIONS &_Thread_queue_Operations_priority
+
+/**
+ * @brief Migrates Thread to an synchronization processor.
+ *
+ * @param executing The executing Thread.
+ * @param dpcp The semaphore control block.
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Migrate(
+  Thread_Control *executing,
+  DPCP_Control   *dpcp
+)
+{
+  _Scheduler_Migrate_To( executing, dpcp->cpu, &( dpcp->Ceiling_priority ) );
+}
+
+/**
+ * @brief Migrates the task back to the application processor.
+ *
+ * @param executing The executing Thread.
+ * @param dpcp The semaphore control block.
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Migrate_Back(
+  Thread_Control *executing,
+  DPCP_Control   *dpcp
+)
+{
+  _Scheduler_Migrate_Back( executing,dpcp->cpu );
+}
+
+/**
+ * @brief Acquires critical according to DPCP.
+ *
+ * @param dpcp The DPCP control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Acquire_critical(
+  DPCP_Control         *dpcp,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Acquire_critical( &dpcp->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Releases according to DPCP.
+ *
+ * @param dpcp The DPCP control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Release(
+  DPCP_Control         *dpcp,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Release( &dpcp->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Gets owner of the DPCP control.
+ *
+ * @param dpcp The DPCP control to get the owner from.
+ *
+ * @return The owner of the dpcp control.
+ */
+RTEMS_INLINE_ROUTINE Thread_Control *_DPCP_Get_owner(
+  const DPCP_Control *dpcp
+)
+{
+  return dpcp->Wait_queue.Queue.owner;
+}
+
+/**
+ * @brief Sets owner of the DPCP control.
+ *
+ * @param[out] dpcp The DPCP control to set the owner of.
+ * @param owner The desired new owner for @a dpcp.
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Set_owner(
+  DPCP_Control   *dpcp,
+  Thread_Control *owner
+)
+{
+  dpcp->Wait_queue.Queue.owner = owner;
+}
+
+/**
+ * @brief Gets ceiling priority of the DPCP control.
+ *
+ * @param dpcp The dpcp to get the priority from.
+ *
+ * @return The priority of the DPCP control.
+ */
+RTEMS_INLINE_ROUTINE Priority_Control _DPCP_Get_priority(
+  const DPCP_Control *dpcp
+)
+{
+  return dpcp->Ceiling_priority.priority;
+}
+
+
+/**
+ * @brief Sets the ceiling priority of the DPCP control
+ *
+ * @param[out] dpcp The DPCP control to set the priority of.
+ * @param priority_ceiling The new priority for the DPCP Control
+ * @param queue_context The Thread queue context
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Set_priority(
+  DPCP_Control         *dpcp,
+  Priority_Control      priority_ceiling,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_Control *owner;
+  owner = _DPCP_Get_owner( dpcp );
+  if ( owner != NULL ) {
+   //Do nothing, thread executing right now
+  } else {
+    dpcp->Ceiling_priority.priority = priority_ceiling;
+  }
+}
+
+/**
+ * @brief Gets the synchronization CPU of the DPCP Control, where the task migrates to.
+ *
+ * @retval The Per_CPU_Control control block
+ */
+RTEMS_INLINE_ROUTINE Per_CPU_Control *_DPCP_Get_CPU(
+  DPCP_Control *dpcp
+)
+{
+  return dpcp->cpu;
+}
+
+/**
+ * @brief Sets the synchronization CPU of the DPCP Control.
+ *
+ * @param dpcp The semaphore control block
+ * @param cpu The synchronization processor it changes to.
+ * @param queue_context struct to secure sempahore access
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Set_CPU(
+  DPCP_Control         *dpcp,
+  Per_CPU_Control      *cpu,
+  Thread_queue_Context *queue_context
+)
+{
+  _DPCP_Acquire_critical( dpcp, queue_context );
+  dpcp->cpu = cpu;
+  _DPCP_Release( dpcp, queue_context );
+}
+
+/**
+ * @brief Claims ownership of the DPCP control.
+ *
+ * @param dpcp The DPCP control to claim the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DPCP_Claim_ownership(
+  DPCP_Control         *dpcp,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  ISR_lock_Context  lock_context;
+  Scheduler_Node   *scheduler_node;
+  Per_CPU_Control  *cpu_self;
+
+  _Thread_Wait_acquire_default_critical( executing, &lock_context );
+  scheduler_node = _Thread_Scheduler_get_home_node( executing );
+
+  if ( _Priority_Get_priority( &scheduler_node->Wait.Priority ) <
+      dpcp->Ceiling_priority.priority ) {
+      _Thread_Wait_release_default_critical( executing, &lock_context );
+      _DPCP_Release( dpcp, queue_context );
+      return STATUS_MUTEX_CEILING_VIOLATED;
+  }
+
+  _DPCP_Set_owner( dpcp, executing );
+  cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _DPCP_Release( dpcp, queue_context );
+  _DPCP_Migrate( executing, dpcp );
+  _Thread_Wait_release_default_critical( executing, &lock_context );
+  _Thread_Dispatch_enable( cpu_self );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Initializes a DPCP control.
+ *
+ * @param[out] dpcp The DPCP control that is initialized.
+ * @param scheduler The scheduler for the operation.
+ * @param ceiling_priority
+ * @param executing The currently executing thread.  Ignored in this method.
+ * @param initially_locked Indicates whether the DPCP control shall be initally
+ *      locked. If it is initially locked, this method returns STATUS_INVALID_NUMBER.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_INVALID_NUMBER The DPCP control is initially locked.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DPCP_Initialize(
+  DPCP_Control            *dpcp,
+  const Scheduler_Control *scheduler,
+  Priority_Control         ceiling_priority,
+  Thread_Control          *executing,
+  bool                     initially_locked
+)
+{
+  if ( initially_locked ) {
+    return STATUS_INVALID_NUMBER;
+  }
+
+  dpcp->cpu = _Per_CPU_Get_by_index( 1 );
+  _Priority_Node_initialize( &dpcp->Ceiling_priority, ceiling_priority );
+  _Thread_queue_Object_initialize( &dpcp->Wait_queue );
+  return STATUS_SUCCESSFUL;
+}
+/**
+ * @brief Waits for the ownership of the DPCP control.
+ *
+ * @param dpcp The DPCP control to get the ownership of.
+ * @param executing The currently executing thread.
+ * @param queue_context the thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_DEADLOCK A deadlock occured.
+ * @retval STATUS_TIMEOUT A timeout occured.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DPCP_Wait_for_ownership(
+  DPCP_Control         *dpcp,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Context_set_thread_state(
+    queue_context,
+    STATES_WAITING_FOR_MUTEX
+  );
+  _Thread_queue_Context_set_deadlock_callout(
+    queue_context,
+    _Thread_queue_Deadlock_status
+  );
+  _Thread_queue_Enqueue(
+    &dpcp->Wait_queue.Queue,
+    DPCP_TQ_OPERATIONS,
+    executing,
+    queue_context
+  );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Seizes the DPCP control.
+ *
+ * @param[in, out] dpcp The DPCP control to seize the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param wait Indicates whether the calling thread is willing to wait.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ * @retval STATUS_UNAVAILABLE The executing thread is already the owner of
+ *      the DPCP control.  Seizing it is not possible.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DPCP_Seize(
+  DPCP_Control         *dpcp,
+  Thread_Control       *executing,
+  bool                  wait,
+  Thread_queue_Context *queue_context
+)
+{
+  Status_Control  status;
+  Thread_Control *owner;
+
+  _DPCP_Acquire_critical( dpcp, queue_context );
+
+  owner = _DPCP_Get_owner( dpcp );
+
+  if ( owner == NULL ) {
+    status = _DPCP_Claim_ownership( dpcp, executing, queue_context );
+  } else if ( owner == executing ) {
+    _DPCP_Release( dpcp, queue_context );
+    status = STATUS_UNAVAILABLE;
+  } else if ( wait ) {
+    status = _DPCP_Wait_for_ownership( dpcp, executing, queue_context );
+  } else {
+    _DPCP_Release( dpcp, queue_context );
+    status = STATUS_UNAVAILABLE;
+  }
+
+  return status;
+}
+
+/**
+ * @brief Surrenders the DPCP control.
+ *
+ * @param[in, out] dpcp The DPCP control to surrender the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_NOT_OWNER The executing thread does not own the DPCP control.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DPCP_Surrender(
+  DPCP_Control         *dpcp,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  ISR_lock_Context  lock_context;
+  Per_CPU_Control  *cpu_self;
+  Thread_Control   *new_owner;
+
+  _DPCP_Acquire_critical( dpcp, queue_context );
+  cpu_self = _Thread_Dispatch_disable_critical( &queue_context->Lock_context.Lock_context );
+  if (_DPCP_Get_owner( dpcp ) != executing) {
+    _DPCP_Release( dpcp , queue_context );
+    _Thread_Dispatch_enable( cpu_self );
+    return STATUS_NOT_OWNER;
+  }
+
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  new_owner = _Thread_queue_First_locked(
+                &dpcp->Wait_queue,
+	        DPCP_TQ_OPERATIONS
+	      );
+  _DPCP_Set_owner( dpcp, new_owner );
+
+  if ( new_owner != NULL ) {
+  #if defined(RTEMS_MULTIPROCESSING)
+    if ( _Objects_Is_local_id( new_owner->Object.id ) )
+  #endif
+    {
+    }
+    _Thread_queue_Extract_critical(
+      &dpcp->Wait_queue.Queue,
+      CORE_MUTEX_TQ_OPERATIONS,
+      new_owner,
+      queue_context
+    );
+    _Thread_Wait_acquire_default_critical( new_owner, &lock_context );
+    _DPCP_Migrate(new_owner, dpcp);
+    _Thread_Wait_release_default_critical( new_owner, &lock_context );
+  } else {
+    _DPCP_Release( dpcp, queue_context );
+  }
+
+  _Thread_Wait_acquire_default_critical( executing, &lock_context );
+  _DPCP_Migrate_Back( executing, dpcp );
+  _Thread_Wait_release_default_critical( executing, &lock_context );
+  _Thread_Dispatch_enable( cpu_self );
+
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Checks if the DPCP control can be destroyed.
+ *
+ * @param dpcp The DPCP control for the operation.
+ *
+ * @retval STATUS_SUCCESSFUL The DPCP is currently not used
+ *      and can be destroyed.
+ * @retval STATUS_RESOURCE_IN_USE The DPCP control is in use,
+ *      it cannot be destroyed.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _DPCP_Can_destroy(
+  DPCP_Control *dpcp
+)
+{
+  if ( _DPCP_Get_owner( dpcp ) != NULL ) {
+    return STATUS_RESOURCE_IN_USE;
+  }
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Destroys the DPCP control
+ *
+ * @param[in, out] The dpcp that is about to be destroyed.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _DPCP_Destroy(
+  DPCP_Control         *dpcp,
+  Thread_queue_Context *queue_context
+)
+{
+  _DPCP_Release( dpcp, queue_context );
+  _Thread_queue_Destroy( &dpcp->Wait_queue );
+}
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_DPCPIMPL_H */
diff -Naur original/cpukit/include/rtems/score/fmlpl.h modified/cpukit/include/rtems/score/fmlpl.h
--- original/cpukit/include/rtems/score/fmlpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/fmlpl.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,61 @@
+/*
+ * Copyright (c) 2014, 2016 embedded brains GmbH.  All rights reserved.
+ *
+ *  embedded brains GmbH
+ *  Dornierstr. 4
+ *  82178 Puchheim
+ *  Germany
+ *  <rtems@embedded-brains.de>
+ *
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_FMLPL_H
+#define _RTEMS_SCORE_FMLPL_H
+
+#include <rtems/score/cpuopts.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/threadq.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @defgroup ScoreFMLPL Multiprocessor Resource Sharing Protocol Handler (This guy didn't even edit his LOL)
+ *
+ * @ingroup Score
+ *
+ *
+ * @{
+ */
+
+typedef struct {
+
+  // our thread queue
+  Thread_queue_Control Wait_queue;
+
+  // the priority node, which is assigned to the priority owner
+  Priority_Node root_node;
+
+  // our array for keeping the priorities of all tasks
+  Priority_Control *priority_array;
+
+  // current first free position
+  int first_free_slot;
+
+} FMLPL_Control;
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_FMLPL_H */
diff -Naur original/cpukit/include/rtems/score/fmlplimpl.h modified/cpukit/include/rtems/score/fmlplimpl.h
--- original/cpukit/include/rtems/score/fmlplimpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/fmlplimpl.h	2023-02-12 13:54:04.359648000 +0100
@@ -0,0 +1,609 @@
+/*
+ * Copyright (c) 2014, 2016 embedded brains GmbH.  All rights reserved.
+ *
+ *  embedded brains GmbH
+ *  Dornierstr. 4
+ *  82178 Puchheim
+ *  Germany
+ *  <rtems@embedded-brains.de>
+ *
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_FMLPLIMPL_H
+#define _RTEMS_SCORE_FMLPLIMPL_H
+
+#include <rtems/score/fmlpl.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/assert.h>
+#include <rtems/score/status.h>
+#include <rtems/score/threadqimpl.h>
+#include <rtems/rtems/tasksimpl.h>
+#include <rtems/score/watchdogimpl.h>
+#include <rtems/score/wkspace.h>
+#include <rtems/score/rbtree.h>
+#include <rtems/bspIo.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @addtogroup ScoreFMLPL
+ *
+ * @{
+ */
+#define FMLPL_TQ_OPERATIONS &_Thread_queue_Operations_FIFO
+
+/**
+ * @brief Acquires critical according to FMLP-L.
+ *
+ * @param fmlpl The FMLP-L control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPL_Acquire_critical(
+  FMLPL_Control        *fmlpl,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Acquire_critical( &fmlpl->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Releases according to FMLP-L.
+ *
+ * @param fmlpl The FMLP-L control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPL_Release(
+  FMLPL_Control        *fmlpl,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Release( &fmlpl->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Gets owner of the FMLP-L control.
+ *
+ * @param fmlpl The FMLP-L control to get the owner from.
+ *
+ * @return The owner of the FMLP-L control.
+ */
+RTEMS_INLINE_ROUTINE Thread_Control *_FMLPL_Get_owner(
+  const FMLPL_Control *fmlpl
+)
+{
+  return fmlpl->Wait_queue.Queue.owner;
+}
+
+/**
+ * @brief Sets owner of the FMLP-L control.
+ *
+ * @param[out] fmlpl The FMLP-L control to set the owner of.
+ * @param owner The desired new owner for @a fmlpl.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPL_Set_owner(
+  FMLPL_Control  *fmlpl,
+  Thread_Control *owner
+)
+{
+  fmlpl->Wait_queue.Queue.owner = owner;
+}
+
+/**
+ * @brief Gets priority of the FMLP-L control.
+ *
+ * @param fmlpl The fmlpl control to get the priority from.
+ * @param scheduler The corresponding scheduler.
+ *
+ * @return The priority of the FMLP-L control.
+ */
+RTEMS_INLINE_ROUTINE Priority_Control _FMLPL_Get_priority(
+  const Thread_Control *the_thread
+)
+{
+  const Scheduler_Node    *scheduler_node;
+  const Scheduler_Control *scheduler;
+  Priority_Control         core_priority;
+
+  scheduler = _Thread_Scheduler_get_home( the_thread );
+  scheduler_node = _Thread_Scheduler_get_home_node( the_thread );
+
+  core_priority = _Priority_Get_priority( &scheduler_node->Wait.Priority );
+  return _RTEMS_Priority_From_core( scheduler, core_priority );
+}
+
+/**
+ * @brief Changes the priority of the owner.
+ *
+ * @param new_prio THe new priority of the owner.
+ * @param fmlpl The FMLP-L control for the operation.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Change_Owner_Priority(
+  Priority_Control      new_prio,
+  FMLPL_Control        *fmlpl,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_Control  *owner;
+  ISR_lock_Context lock_context;
+  Priority_Node   *priority_node;
+
+  priority_node = &( fmlpl->root_node );
+  owner = _FMLPL_Get_owner( fmlpl );
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( owner, &lock_context );
+  _Thread_Priority_remove( owner, priority_node, queue_context );
+  _Priority_Node_initialize( priority_node, SCHEDULER_PRIORITY_MAP( new_prio ) );
+  _Thread_Priority_add( owner, priority_node, queue_context );
+  _Thread_Wait_release_default_critical( owner, &lock_context );
+  return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Gets the minimum priority from priority array of the FMLP-L control block.
+ *
+ * @param fmlpl The FMLP-L control to get the array.
+ *
+ * @retval Minimum priority from the array
+ */
+RTEMS_INLINE_ROUTINE Priority_Control _FMLPL_Get_Min_Priority(
+  FMLPL_Control *fmlpl
+)
+{
+  int		   i;
+  int 		   fs;
+  Priority_Control min_prio;
+
+  min_prio = PRIORITY_DEFAULT_MAXIMUM;
+  fs = fmlpl->first_free_slot;
+
+  if(fs>0)
+  {
+	  /*@
+	     loop invariant 0 <= i<= fs;
+	     loop assigns i, min_prio;
+	     loop variant fs- i;
+	    */
+	  for ( i = 0; i < fs; i++ ) {
+	      if ( fmlpl->priority_array[i] < min_prio ) {
+	        min_prio = fmlpl->priority_array[i];
+	        }
+	      }
+	  //@ assert i==fs;
+  }
+
+
+  return min_prio;
+}
+
+/*RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Print_Queue(
+  FMLPL_Control *fmlpl
+)
+{
+  int i;
+
+  for ( i = 0; i < 16; i++ ) {
+    if ( fmlpl->priority_array[i] == 0 ) {
+    } else {
+
+    }
+  }
+
+  for( i = 0; i < fmlpl->first_free_slot; i++ ) {
+  }
+
+  for( i = 0; i < fmlpl->first_free_slot; i++ ) {
+  }
+
+  for( i = 0; i < fmlpl->first_free_slot; i++ ) {
+  }
+}*/
+
+/**
+ * @brief Inserts priority into the priority array of the FMLP-L control.
+ *
+ * @param fmlpl The FMLP-L control, to get the priority array.
+ * @param executing The currently executing thread.
+ *
+ * @retval 0 The operation succeeded.
+ * @retval 1 No free spot available.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Insert(
+  FMLPL_Control  *fmlpl,
+  Thread_Control *executing
+)
+{
+  if( fmlpl->first_free_slot < 0 ) {
+    return 1;
+  }
+
+  if( fmlpl->first_free_slot > 15 ) {
+    return 1;
+  }
+
+  if( fmlpl->priority_array[fmlpl->first_free_slot] != 0 ) {
+    return 1;
+  }
+  fmlpl->priority_array[fmlpl->first_free_slot] = _FMLPL_Get_priority( executing );
+  if(fmlpl->first_free_slot==15) {
+  }
+
+  fmlpl->first_free_slot++;
+  return 0;
+}
+
+/**
+ * @brief Removes priority from the priority array in the FMLP-L control.
+ *
+ * @param fmlpl The FMLP-L control to get the array.
+ *
+ * @retval 0 The operation succeeded.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_remove(
+  FMLPL_Control *fmlpl
+)
+{
+  int              i;
+  int              fs;
+  Priority_Control head;
+
+  if( fmlpl->first_free_slot < 0 ) {
+    return 1;
+  }
+
+  if( fmlpl->first_free_slot > 15 ) {
+    return 1;
+  }
+
+  if( fmlpl->priority_array[fmlpl->first_free_slot] != 0 ) {
+    return 1;
+  }
+
+  head = fmlpl->priority_array[0];
+  fs = fmlpl->first_free_slot;
+  if(fs>0)
+  {
+	  /*@
+	        loop invariant 0 <= i<= fs;
+	        loop assigns i,fmlpl->priority_array[0 .. fs];
+	        loop variant fs- i;
+	       */
+	    for( i = 0; i < fs; i++ ) {
+	      fmlpl->priority_array[i] = fmlpl->priority_array[i+1];
+	    }
+	    //@ assert i==fs;
+  }
+
+  fmlpl->first_free_slot--;
+  fs = fmlpl->first_free_slot;
+  fmlpl->priority_array[fs] = 0;
+  return 0;
+}
+
+/**
+ * @brief Adds thread to priority array, triggers priority changes to owner thread.
+ *
+ * @param fmlpl FMLP-L to get the array form.
+ * @param executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_add(
+  FMLPL_Control        *fmlpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Priority_Control min;
+  Priority_Control newmin;
+
+  min = _FMLPL_Get_Min_Priority( fmlpl );
+  _FMLPL_Insert( fmlpl, executing );
+
+  newmin = _FMLPL_Get_Min_Priority( fmlpl );
+  if ( newmin < min ) {
+    _FMLPL_Change_Owner_Priority( newmin, fmlpl, queue_context );
+  }
+  return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Claims ownership of the FMLP-L control.
+ *
+ * @param fmlpl The FMLP-L control to claim the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Claim_ownership(
+  FMLPL_Control        *fmlpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+
+  ISR_lock_Context  lock_context;
+  Priority_Node    *priority_node;
+
+  _FMLPL_Set_owner( fmlpl, executing );
+  priority_node = &( fmlpl->root_node );
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( executing, &lock_context );
+  _Priority_Node_initialize(
+    priority_node,
+    SCHEDULER_PRIORITY_MAP( _FMLPL_Get_Min_Priority( fmlpl ))
+  );
+  _Thread_Wait_release_default_critical( executing, &lock_context );
+
+  _FMLPL_Release( fmlpl, queue_context );
+
+  return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Initializes a FMLP-L control.
+ *
+ * @param[out] fmlpl The FMLP-L control that is initialized.
+ * @param scheduler The scheduler for the operation.
+ * @param ceiling_priority
+ * @param executing The currently executing thread.  Ignored in this method.
+ * @param initially_locked Indicates whether the FMLP-L control shall be initially
+ *      locked. If it is initially locked, this method returns STATUS_INVALID_NUMBER.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_INVALID_NUMBER The FMLP-L control is initially locked.
+ * @retval STATUS_NO_MEMORY There is not enough memory to allocate.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Initialize(
+  FMLPL_Control           *fmlpl,
+  const Scheduler_Control *scheduler,
+  Priority_Control         ceiling_priority,
+  Thread_Control          *executing,
+  bool                     initially_locked
+)
+{
+  Priority_Node *priority_node;
+  int            i;
+
+  if ( initially_locked ) {
+    return STATUS_INVALID_NUMBER;
+  }
+  _Thread_queue_Object_initialize( &fmlpl->Wait_queue );
+
+  fmlpl->priority_array = _Workspace_Allocate(
+      sizeof( *fmlpl->priority_array ) * 16
+  );
+  /*@
+        loop invariant 0 <= i<= 16;
+        loop assigns i,fmlpl->priority_array[0 .. 16];
+        loop variant 16 - i;
+       */
+  for ( i = 0; i < 16; i++ ) {
+    fmlpl->priority_array[i] = 0;
+  }
+  //@ assert i==16;
+  fmlpl->first_free_slot = 0;
+  priority_node = &( fmlpl->root_node );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Waits for the ownership of the FMLP-L control.
+ *
+ * @param[in, out] fmlpl The FMLP-L control to get the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context the thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the
+ *      currently executing thread exceeds the ceiling priority.
+ * @retval STATUS_DEADLOCK A deadlock occured.
+ * @retval STATUS_TIMEOUT A timeout occured.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Wait_for_ownership(
+  FMLPL_Control        *fmlpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  _FMLPL_add(fmlpl, executing, queue_context);
+
+  _Thread_queue_Context_set_thread_state(
+    queue_context,
+    STATES_WAITING_FOR_MUTEX
+  );
+  _Thread_queue_Context_set_enqueue_do_nothing_extra( queue_context );
+  _Thread_queue_Context_set_deadlock_callout(
+    queue_context,
+    _Thread_queue_Deadlock_status
+  );
+  _Thread_queue_Enqueue(
+    &fmlpl->Wait_queue.Queue,
+    FMLPL_TQ_OPERATIONS,
+    executing,
+    queue_context
+  );
+  _FMLPL_Acquire_critical( fmlpl, queue_context );
+  Priority_Control new_high_prio;
+  if(fmlpl->first_free_slot >0 && fmlpl->first_free_slot < 15)
+  {
+	  _FMLPL_remove( fmlpl );
+  }
+
+  new_high_prio = _FMLPL_Get_Min_Priority( fmlpl );
+  ISR_lock_Context         lock_context;
+  Priority_Node            *priority_node;
+
+  priority_node = &( fmlpl->root_node );
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( executing, &lock_context );
+  _Priority_Node_initialize(
+    priority_node,
+    SCHEDULER_PRIORITY_MAP( new_high_prio )
+  );
+  _Thread_Priority_add( executing, priority_node, queue_context );
+  _Thread_Wait_release_default_critical( executing, &lock_context );
+  _FMLPL_Release( fmlpl, queue_context );
+
+  return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Seizes the FMLP-L control.
+ *
+ * @param[in, out] fmlpl The FMLP-L control to seize the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param wait Indicates whether the calling thread is willing to wait.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ * @retval STATUS_UNAVAILABLE The executing thread is already the owner of
+ *      the FMLP-L control.  Seizing it is not possible.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Seize(
+  FMLPL_Control        *fmlpl,
+  Thread_Control       *executing,
+  bool                  wait,
+  Thread_queue_Context *queue_context
+)
+{
+  Status_Control  status;
+  Thread_Control *owner;
+
+  _FMLPL_Acquire_critical( fmlpl, queue_context );
+
+  owner = _FMLPL_Get_owner( fmlpl );
+
+  if ( owner == NULL ) {
+    status = _FMLPL_Claim_ownership( fmlpl, executing, queue_context );
+  } else if ( owner == executing ) {
+    _FMLPL_Release( fmlpl, queue_context );
+    status = STATUS_UNAVAILABLE;
+  } else if ( wait ) {
+    status = _FMLPL_Wait_for_ownership( fmlpl, executing, queue_context );
+  } else {
+    _FMLPL_Release( fmlpl, queue_context );
+    status = STATUS_UNAVAILABLE;
+  }
+
+  return status;
+}
+
+/**
+ * @brief Surrenders the FMLP-L control.
+ *
+ * @param[in, out] fmlpl The FMLP-L control to surrender the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_NOT_OWNER The executing thread does not own the FMLP-L control.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Surrender(
+  FMLPL_Control        *fmlpl,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_queue_Heads *heads;
+  ISR_lock_Context    lock_context;
+  Priority_Node      *priority_node;
+  Per_CPU_Control    *cpu_self;
+
+  priority_node = &(fmlpl->root_node);
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( executing, &lock_context );
+  _Thread_Priority_remove( executing, priority_node, queue_context );
+  _Thread_Wait_release_default_critical( executing, &lock_context );
+
+  if ( _FMLPL_Get_owner( fmlpl ) != executing ) {
+    _ISR_lock_ISR_enable( &queue_context->Lock_context.Lock_context );
+    return STATUS_NOT_OWNER;
+  }
+
+  _FMLPL_Acquire_critical( fmlpl, queue_context );
+  _FMLPL_Set_owner( fmlpl, NULL );
+  heads = fmlpl->Wait_queue.Queue.heads;
+
+  if ( heads == NULL ) {
+    cpu_self = _Thread_Dispatch_disable_critical(
+      &queue_context->Lock_context.Lock_context
+    );
+    _FMLPL_Release( fmlpl, queue_context );
+    _Thread_queue_Context_clear_priority_updates(queue_context);
+    _Thread_Priority_update(queue_context);
+    _Thread_Dispatch_enable( cpu_self );
+    return RTEMS_SUCCESSFUL;
+  }
+
+  _Thread_queue_Surrender(
+    &fmlpl->Wait_queue.Queue,
+    heads,
+    executing,
+    queue_context,
+    FMLPL_TQ_OPERATIONS
+  );
+
+  return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Checks if the FMLP-L control can be destroyed.
+ *
+ * @param fmlpl The FMLP-L control for the operation.
+ *
+ * @retval STATUS_SUCCESSFUL The FMLP-L is currently not used
+ *      and can be destroyed.
+ * @retval STATUS_RESOURCE_IN_USE The FMLP-L control is in use,
+ *      it cannot be destroyed.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPL_Can_destroy(
+  FMLPL_Control *fmlpl
+)
+{
+  if ( _FMLPL_Get_owner( fmlpl ) != NULL ) {
+    return STATUS_RESOURCE_IN_USE;
+  }
+
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Destroys the FMLP-L control
+ *
+ * @param[in, out] The fmlpl that is about to be destroyed.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPL_Destroy(
+  FMLPL_Control        *fmlpl,
+  Thread_queue_Context *queue_context
+)
+{
+  _FMLPL_Release( fmlpl, queue_context );
+  _Thread_queue_Destroy( &fmlpl->Wait_queue );
+}
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_FMLPLIMPL_H */
diff -Naur original/cpukit/include/rtems/score/fmlps.h modified/cpukit/include/rtems/score/fmlps.h
--- original/cpukit/include/rtems/score/fmlps.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/fmlps.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,50 @@
+/*
+ * Copyright (c) 2018 Malte Muench.  All rights reserved.
+ *
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_FMLPS_H
+#define _RTEMS_SCORE_FMLPS_H
+
+#include <rtems/score/cpuopts.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/threadq.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @brief FMLPS control block.
+ */
+typedef struct {
+  /**
+   * @brief The thread queue to manage ownership and waiting threads.
+   */
+  Thread_queue_Control Wait_queue;
+
+  /**
+   * @brief The ceiling priority used by the owner thread.
+   */
+  Priority_Node Ceiling_priority;
+
+  /**
+   * @brief One ceiling priority per scheduler instance.
+   */
+  Priority_Control *ceiling_priorities;
+} FMLPS_Control;
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_FMLPS_H */
diff -Naur original/cpukit/include/rtems/score/fmlpsimpl.h modified/cpukit/include/rtems/score/fmlpsimpl.h
--- original/cpukit/include/rtems/score/fmlpsimpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/fmlpsimpl.h	2023-02-12 13:58:34.531069000 +0100
@@ -0,0 +1,526 @@
+/*
+ * Copyright (c) 2018 Malte Muench.  All rights reserved.
+ *
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_FMLPSIMPL_H
+#define _RTEMS_SCORE_FMLPSIMPL_H
+
+
+#include <rtems/score/fmlps.h>
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/assert.h>
+#include <rtems/score/status.h>
+#include <rtems/score/threadqimpl.h>
+#include <rtems/score/watchdogimpl.h>
+#include <rtems/score/wkspace.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @addtogroup ScoreFMLPS
+ *
+ * @{
+ */
+
+#define FMLPS_TQ_OPERATIONS &_Thread_queue_Operations_FIFO
+
+/**
+ * @brief Acquires critical according to FMLP-S.
+ *
+ * @param fmlps The FMLP-L control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPS_Acquire_critical(
+  FMLPS_Control        *fmlps,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Acquire_critical( &fmlps->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Releases according to FMLP-S.
+ *
+ * @param fmlps The FMLP-S control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPS_Release(
+  FMLPS_Control        *fmlps,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Release( &fmlps->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Gets owner of the FMLP-S control.
+ *
+ * @param fmlps The FMLP-S control to get the owner from.
+ *
+ * @return The owner of the FMLP-S control.
+ */
+RTEMS_INLINE_ROUTINE Thread_Control *_FMLPS_Get_owner(
+  const FMLPS_Control *fmlps
+)
+{
+  return fmlps->Wait_queue.Queue.owner;
+}
+
+/**
+ * @brief Sets owner of the FMLP-S control.
+ *
+ * @param[out] fmlps The FMLP-S control to set the owner of.
+ * @param owner The desired new owner for fmlps
+ */
+RTEMS_INLINE_ROUTINE void _FMLPS_Set_owner(
+  FMLPS_Control  *fmlps,
+  Thread_Control *owner
+)
+{
+  fmlps->Wait_queue.Queue.owner = owner;
+}
+
+/**
+ * @brief Gets priority of the FMLP-S control.
+ *
+ * @param fmlps The fmlps to get the priority from.
+ * @param scheduler The corresponding scheduler.
+ *
+ * @return The priority of the FMLP-S control.
+ */
+RTEMS_INLINE_ROUTINE Priority_Control _FMLPS_Get_priority(
+  const FMLPS_Control     *fmlps,
+  const Scheduler_Control *scheduler
+)
+{
+  uint32_t scheduler_index;
+
+  scheduler_index = _Scheduler_Get_index( scheduler );
+  return fmlps->ceiling_priorities[ scheduler_index ];
+}
+
+/**
+ * @brief Sets priority of the FMLP-S control
+ *
+ * @param[out] fmlps The FMLP-S control to set the priority of.
+ * @param scheduler The corresponding scheduler.
+ * @param new_priority The new priority for the FMLP-S control
+ */
+RTEMS_INLINE_ROUTINE void _FMLPS_Set_priority(
+  FMLPS_Control           *fmlps,
+  const Scheduler_Control *scheduler,
+  Priority_Control         new_priority
+)
+{
+  // do nothing, the priority is always 1
+}
+
+/**
+ * @brief Adds the priority to the given thread.
+ *
+ * @param fmlps The FMLP-S control for the operation.
+ * @param[in, out] thread The thread to add the priority node to.
+ * @param[out] priority_node The priority node to initialize and add to
+ *      the thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the thread
+ *      exceeds the ceiling priority.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPS_Raise_priority(
+  FMLPS_Control        *fmlps,
+  Thread_Control       *thread,
+  Priority_Node        *priority_node,
+  Thread_queue_Context *queue_context
+)
+{
+  Status_Control           status;
+  ISR_lock_Context         lock_context;
+  const Scheduler_Control *scheduler;
+  Priority_Control         ceiling_priority;
+  Scheduler_Node          *scheduler_node;
+
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( thread, &lock_context );
+
+  scheduler = _Thread_Scheduler_get_home( thread );
+  scheduler_node = _Thread_Scheduler_get_home_node( thread );
+  ceiling_priority = _FMLPS_Get_priority( fmlps, scheduler );
+
+  if (
+    ceiling_priority
+      <= _Priority_Get_priority( &scheduler_node->Wait.Priority )
+  ) {
+    _Priority_Node_initialize( priority_node, ceiling_priority );
+    _Thread_Priority_add( thread, priority_node, queue_context );
+    status = STATUS_SUCCESSFUL;
+  } else {
+    status = STATUS_MUTEX_CEILING_VIOLATED;
+  }
+
+  _Thread_Wait_release_default_critical( thread, &lock_context );
+  return status;
+}
+
+/**
+ * @brief Removes the priority from the given thread.
+ *
+ * @param[in, out] The thread to remove the priority from.
+ * @param priority_node The priority node to remove from the thread
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPS_Remove_priority(
+  Thread_Control       *thread,
+  Priority_Node        *priority_node,
+  Thread_queue_Context *queue_context
+)
+{
+  ISR_lock_Context lock_context;
+
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_acquire_default_critical( thread, &lock_context );
+  _Thread_Priority_remove( thread, priority_node, queue_context );
+  _Thread_Wait_release_default_critical( thread, &lock_context );
+}
+
+/**
+ * @brief Replaces the given priority node with the ceiling priority of
+ *      the FMLP-S control.
+ *
+ * @param fmlps The fmlps control for the operation.
+ * @param[out] thread The thread to replace the priorities.
+ * @param ceiling_priority The node to be replaced.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPS_Replace_priority(
+  FMLPS_Control  *fmlps,
+  Thread_Control *thread,
+  Priority_Node  *ceiling_priority
+)
+{
+  ISR_lock_Context lock_context;
+
+  _Thread_Wait_acquire_default( thread, &lock_context );
+  _Thread_Priority_replace( 
+    thread,
+    ceiling_priority,
+    &fmlps->Ceiling_priority
+  );
+  _Thread_Wait_release_default( thread, &lock_context );
+}
+
+/**
+ * @brief Claims ownership of the FMLP-S control.
+ *
+ * @param fmlps The FMLP-S control to claim the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPS_Claim_ownership(
+  FMLPS_Control        *fmlps,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Status_Control   status;
+  Per_CPU_Control *cpu_self;
+
+  status = _FMLPS_Raise_priority(
+    fmlps,
+    executing,
+    &fmlps->Ceiling_priority,
+    queue_context
+  );
+
+  if ( status != STATUS_SUCCESSFUL ) {
+    _FMLPS_Release( fmlps, queue_context );
+    return status;
+  }
+
+  _FMLPS_Set_owner( fmlps, executing );
+  cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _FMLPS_Release( fmlps, queue_context );
+  _Thread_Priority_and_sticky_update( executing, 1 );
+  _Thread_Dispatch_enable( cpu_self );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Initializes a FMLP-S control.
+ *
+ * @param[out] fmlps The FMLP-S control that is initialized.
+ * @param scheduler The scheduler for the operation.
+ * @param ceiling_priority
+ * @param executing The currently executing thread.  Ignored in this method.
+ * @param initially_locked Indicates whether the FMLP-S control shall be initally
+ *      locked. If it is initially locked, this method returns STATUS_INVALID_NUMBER.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_INVALID_NUMBER The FMLP-S control is initially locked.
+ * @retval STATUS_NO_MEMORY There is not enough memory to allocate.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPS_Initialize(
+  FMLPS_Control           *fmlps,
+  const Scheduler_Control *scheduler,
+  Priority_Control         ceiling_priority,
+  Thread_Control          *executing,
+  bool                     initially_locked
+)
+{
+  uint32_t scheduler_count = _Scheduler_Count;
+  uint32_t i;
+  // this priority should emulate the "non-preemptability" of FMLP-S
+  ceiling_priority = 1;
+
+  if ( initially_locked ) {
+    return STATUS_INVALID_NUMBER;
+  }
+
+  fmlps->ceiling_priorities = _Workspace_Allocate(
+    sizeof( *fmlps->ceiling_priorities ) * scheduler_count
+  );
+  if ( fmlps->ceiling_priorities == NULL ) {
+    return STATUS_NO_MEMORY;
+  }
+  /*@
+    loop invariant 0<=scheduler_count;
+    loop invariant 0<=i<=scheduler_count;
+    loop assigns i, fmlps->ceiling_priorities[0 .. scheduler_count];
+    loop variant scheduler_count-i;
+   */
+  for ( i = 0 ; i < scheduler_count ; ++i ) {
+    const Scheduler_Control *scheduler_of_index;
+
+    scheduler_of_index = &_Scheduler_Table[ i ];
+
+    if ( scheduler != scheduler_of_index ) {
+      fmlps->ceiling_priorities[ i ] =
+        _Scheduler_Map_priority( scheduler_of_index, 0 );
+    } else {
+      fmlps->ceiling_priorities[ i ] = ceiling_priority;
+    }
+  }//@ assert i == scheduler_count;
+
+  _Thread_queue_Object_initialize( &fmlps->Wait_queue );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Waits for the ownership of the FMLP-S control.
+ *
+ * @param[in, out] fmlps The FMLP-S control to get the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context the thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the
+ *      currently executing thread exceeds the ceiling priority.
+ * @retval STATUS_DEADLOCK A deadlock occured.
+ * @retval STATUS_TIMEOUT A timeout occured.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPS_Wait_for_ownership(
+  FMLPS_Control        *fmlps,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Status_Control status;
+  Priority_Node  ceiling_priority;
+
+  status = _FMLPS_Raise_priority(
+    fmlps,
+    executing,
+    &ceiling_priority,
+    queue_context
+  );
+
+  if ( status != STATUS_SUCCESSFUL ) {
+    _FMLPS_Release( fmlps, queue_context );
+    return status;
+  }
+
+  _Thread_queue_Context_set_deadlock_callout(
+    queue_context,
+    _Thread_queue_Deadlock_status
+  );
+  status = _Thread_queue_Enqueue_sticky(
+    &fmlps->Wait_queue.Queue,
+    FMLPS_TQ_OPERATIONS,
+    executing,
+    queue_context
+  );
+
+  if ( status == STATUS_SUCCESSFUL ) {
+    _FMLPS_Replace_priority( fmlps, executing, &ceiling_priority );
+  } else {
+    Thread_queue_Context  queue_context;
+    Per_CPU_Control      *cpu_self;
+    int                   sticky_level_change;
+
+    if ( status != STATUS_DEADLOCK ) {
+      sticky_level_change = -1;
+    } else {
+      sticky_level_change = 0;
+    }
+
+    _ISR_lock_ISR_disable( &queue_context.Lock_context.Lock_context );
+    _FMLPS_Remove_priority( executing, &ceiling_priority, &queue_context );
+    cpu_self = _Thread_Dispatch_disable_critical(
+      &queue_context.Lock_context.Lock_context
+    );
+    _ISR_lock_ISR_enable( &queue_context.Lock_context.Lock_context );
+    _Thread_Priority_and_sticky_update( executing, sticky_level_change );
+    _Thread_Dispatch_enable( cpu_self );
+  }
+
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Seizes the FMLP-S control.
+ *
+ * @param[in, out] fmlps The FMLP-S control to seize the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param wait Indicates whether the calling thread is willing to wait.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ * @retval STATUS_UNAVAILABLE The executing thread is already the owner of
+ *      the FMLP-S control.  Seizing it is not possible.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPS_Seize(
+  FMLPS_Control        *fmlps,
+  Thread_Control       *executing,
+  bool                  wait,
+  Thread_queue_Context *queue_context
+)
+{
+  Status_Control  status;
+  Thread_Control *owner;
+
+  _FMLPS_Acquire_critical( fmlps, queue_context );
+  owner = _FMLPS_Get_owner( fmlps );
+
+  if ( owner == NULL ) {
+    status = _FMLPS_Claim_ownership( fmlps, executing, queue_context );
+  } else if ( owner == executing ) {
+    _FMLPS_Release( fmlps, queue_context );
+    status = STATUS_UNAVAILABLE;
+  } else if ( wait ) {
+    status = _FMLPS_Wait_for_ownership( fmlps, executing, queue_context );
+  } else {
+    _FMLPS_Release( fmlps, queue_context );
+    status = STATUS_UNAVAILABLE;
+  }
+
+  return status;
+}
+
+/**
+ * @brief Surrenders the FMLP-S control.
+ *
+ * @param[in, out] fmlps The FMLP-S control to surrender the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_NOT_OWNER The executing thread does not own the FMLP-S control.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPS_Surrender(
+  FMLPS_Control        *fmlps,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_queue_Heads *heads;
+  if ( _FMLPS_Get_owner( fmlps ) != executing ) {
+    _ISR_lock_ISR_enable( &queue_context->Lock_context.Lock_context );
+    return STATUS_NOT_OWNER;
+  }
+
+  _FMLPS_Acquire_critical( fmlps, queue_context );
+
+  _FMLPS_Set_owner( fmlps, NULL );
+  _FMLPS_Remove_priority( executing, &fmlps->Ceiling_priority, queue_context );
+
+  heads = fmlps->Wait_queue.Queue.heads;
+
+  if ( heads == NULL ) {
+    Per_CPU_Control *cpu_self;
+
+    cpu_self = _Thread_Dispatch_disable_critical(
+      &queue_context->Lock_context.Lock_context
+    );
+    _FMLPS_Release( fmlps, queue_context );
+    _Thread_Priority_and_sticky_update( executing, -1 );
+    _Thread_Dispatch_enable( cpu_self );
+    return RTEMS_SUCCESSFUL;
+  }
+
+  _Thread_queue_Surrender_sticky(
+    &fmlps->Wait_queue.Queue,
+    heads,
+    executing,
+    queue_context,
+    FMLPS_TQ_OPERATIONS
+  );
+  return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Checks if the FMLP-S control can be destroyed.
+ *
+ * @param fmlps The FMLP-S control for the operation.
+ *
+ * @retval STATUS_SUCCESSFUL The FMLP-S is currently not used
+ *      and can be destroyed.
+ * @retval STATUS_RESOURCE_IN_USE The FMLP-S control is in use,
+ *      it cannot be destroyed.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _FMLPS_Can_destroy( FMLPS_Control *fmlps )
+{
+  if ( _FMLPS_Get_owner( fmlps ) != NULL ) {
+    return STATUS_RESOURCE_IN_USE;
+  }
+
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Destroys the FMLP-S control
+ *
+ * @param[in, out] The fmlps that is about to be destroyed.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _FMLPS_Destroy(
+  FMLPS_Control        *fmlps,
+  Thread_queue_Context *queue_context
+)
+{
+  _FMLPS_Release( fmlps, queue_context );
+  _Thread_queue_Destroy( &fmlps->Wait_queue );
+  _Workspace_Free( fmlps->ceiling_priorities );
+}
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_FMLPSIMPL_H */
diff -Naur original/cpukit/include/rtems/score/hdga.h modified/cpukit/include/rtems/score/hdga.h
--- original/cpukit/include/rtems/score/hdga.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/hdga.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,55 @@
+/*
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_HDGA_H
+#define _RTEMS_SCORE_HDGA_H
+
+#include <rtems/score/cpuopts.h>
+#include <rtems/score/ticket.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/threadq.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @brief HDGA control block.
+ */
+typedef struct {
+  /**
+   * @brief The thread queue to manage ownership and waiting threads.
+   */
+  Thread_queue_Control Wait_queue;
+
+  /**
+   *ticket array, where we store our tickets and the order
+   */
+  Ticket_Control *ticket_order;
+
+  /**
+   * size of ticket_order
+   */
+  int order_size;
+
+  /**
+   * current_position of array
+   */
+  int current_position;
+
+} HDGA_Control;
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_HDGA_H */
diff -Naur original/cpukit/include/rtems/score/hdgaimpl.h modified/cpukit/include/rtems/score/hdgaimpl.h
--- original/cpukit/include/rtems/score/hdgaimpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/hdgaimpl.h	2023-02-12 13:57:10.439248000 +0100
@@ -0,0 +1,402 @@
+#ifndef _RTEMS_SCORE_HDGAIMPL_H
+#define _RTEMS_SCORE_HDGAIMPL_H
+
+#include <rtems/score/hdga.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/assert.h>
+#include <rtems/score/status.h>
+#include <rtems/score/threadqimpl.h>
+#include <rtems/score/watchdogimpl.h>
+#include <rtems/score/wkspace.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @addtogroup ScoreHDGA
+ *
+ * @{
+ */
+#define HDGA_TQ_OPERATIONS &_Thread_queue_Operations_TICKET
+
+/**
+ * @brief Locks the queue of the semaphore control block
+ *
+ * @param hdga the semaphore control block
+ * @param queue_context queue for locking
+ *
+ */
+RTEMS_INLINE_ROUTINE void _HDGA_Acquire_critical(
+  HDGA_Control         *hdga,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Acquire_critical( &hdga->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Gets the ticket number of the currently executing task
+ *
+ * @param executing the currently executing task
+ * @return The ticket number of the task
+ *
+ */
+RTEMS_INLINE_ROUTINE Ticket_Control _HDGA_Get_Ticket_number(
+  Thread_Control *executing
+)
+{
+  return executing->ticket.ticket;
+}
+
+/**
+ * @brief Increments the current position in the queue by incrementing the
+ * 	pointer current_position
+ *
+ * @param hdga the semaphore control block
+ *
+ */
+RTEMS_INLINE_ROUTINE void _HDGA_Increment_Current_Position(
+  HDGA_Control *hdga
+)
+{
+  hdga->current_position = ++hdga->current_position;
+  int current_pos = hdga->current_position;
+
+  if ( current_pos == hdga->order_size ) {
+    hdga->current_position = 0;
+  }
+}
+
+/**
+ * @brief Checks if the ticket number of a task is valid by comparing the current ticket
+ * 	number in the queue and the ticket number of the task
+ *
+ * @param hdga the semaphore control block
+ * @param executing The executing task
+ */
+RTEMS_INLINE_ROUTINE bool _HDGA_Has_Valid_ticket(
+  HDGA_Control   *hdga,
+  Thread_Control *executing
+)
+{
+  return executing->ticket.ticket
+    == hdga->ticket_order[hdga->current_position];
+}
+
+/**
+ * @brief Releases the queue of the semaphore control block
+ *
+ * @param hdga the semaphore control block
+ * @param queue_context queue for locking
+ *
+ */
+RTEMS_INLINE_ROUTINE void _HDGA_Release(
+  HDGA_Control         *hdga,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Release( &hdga->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Gets the owner of the semaphore control block
+ *
+ * @param hdga the semaphore control block
+ *
+ * @return The owner of the semaphore control block
+ */
+RTEMS_INLINE_ROUTINE Thread_Control *_HDGA_Get_owner(
+  const HDGA_Control *hdga
+)
+{
+  return hdga->Wait_queue.Queue.owner;
+}
+
+/**
+ * @brief Sets the owner of the semaphore control block
+ *
+ * @param hdga the semaphore control block
+ * @param executing The owner of the semaphore control block
+ *
+ */
+RTEMS_INLINE_ROUTINE void _HDGA_Set_owner(
+  HDGA_Control   *hdga,
+  Thread_Control *owner
+)
+{
+  hdga->Wait_queue.Queue.owner = owner;
+}
+
+/**
+ * @brief Claims ownership of the HDGA semaphore
+ *
+ * @param hdga the semaphore control block
+ * @param executing The owner of the semaphore control block
+ * @param queue_context queue for locking
+ */
+RTEMS_INLINE_ROUTINE Status_Control _HDGA_Claim_ownership(
+  HDGA_Control         *hdga,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  _HDGA_Set_owner( hdga, executing );
+  _HDGA_Release( hdga, queue_context );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Initializes a HDGA control.
+ *
+ * @param[out] hdga The HDGA control that is initialized.
+ * @param scheduler The scheduler for the operation.
+ * @param queue_size the size of our ticket array
+ * @param executing The currently executing thread.  Ignored in this method.
+ * @param initially_locked Indicates whether the HDGA control shall be initially
+ *      locked. If it is initially locked, this method returns STATUS_INVALID_NUMBER.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_INVALID_NUMBER The HDGA control is initially locked.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _HDGA_Initialize(
+  HDGA_Control            *hdga,
+  const Scheduler_Control *scheduler,
+  Priority_Control         queue_size,
+  Thread_Control          *executing,
+  bool                     initially_locked
+)
+{
+  hdga->order_size = queue_size;
+  hdga->current_position = 0;
+
+  if ( initially_locked ) {
+    return STATUS_INVALID_NUMBER;
+  }
+
+  hdga->ticket_order = _Workspace_Allocate(
+    sizeof( *hdga->ticket_order ) * hdga->order_size
+  );
+
+  if ( hdga->ticket_order == NULL ) {
+    return STATUS_NO_MEMORY;
+  }
+
+  _Thread_queue_Object_initialize( &hdga->Wait_queue );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Waits for the ownership of the HDGA control.
+ *
+ *
+ * @param hdga The HDGA control to get the ownership of.
+ * @param executing The currently executing thread.
+ * @param queue_context the thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_DEADLOCK A deadlock occurred.
+ * @retval STATUS_TIMEOUT A timeout occurred.
+ */
+
+RTEMS_INLINE_ROUTINE Status_Control _HDGA_Wait_for_ownership(
+  HDGA_Control         *hdga,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Context_set_thread_state(
+   queue_context,
+   STATES_WAITING_FOR_MUTEX
+  );
+  _Thread_queue_Context_set_deadlock_callout(
+    queue_context,
+   _Thread_queue_Deadlock_status
+  );
+  _Thread_queue_Enqueue(
+    &hdga->Wait_queue.Queue,
+    HDGA_TQ_OPERATIONS,
+    executing,
+    queue_context
+  );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Seizes the semaphore. Triggers the subroutines wait for semaphore and claim
+ *
+ * @param dflpl The DFLPL control for the operation.
+ * @param executing The executing task
+ * @param queue_context struct to secure semaphore access
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_UNAVAVILABLE Seizing not possible.
+ *
+ */
+RTEMS_INLINE_ROUTINE Status_Control _HDGA_Seize(
+  HDGA_Control         *hdga,
+  Thread_Control       *executing,
+  bool                  wait,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_Control *owner;
+  Status_Control  status;
+
+  _HDGA_Acquire_critical( hdga, queue_context );
+
+  owner = _HDGA_Get_owner( hdga );
+
+  if ( owner == NULL && _HDGA_Has_Valid_ticket(hdga, executing)) {
+    status = _HDGA_Claim_ownership( hdga, executing, queue_context );
+  } else if ( owner == executing ) {
+    _HDGA_Release( hdga, queue_context );
+    status = STATUS_UNAVAILABLE;
+  } else if ( wait ) {
+    status = _HDGA_Wait_for_ownership( hdga, executing, queue_context );
+  } else {
+    _HDGA_Release( hdga, queue_context );
+    status = STATUS_UNAVAILABLE;
+  }
+
+  return status;
+}
+
+/**
+ * @brief Surrenders the HDGA control.
+ *
+ * @param[in, out] hdga The HDGA control to surrender the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_NOT_OWNER The executing thread does not own the HDGA control.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _HDGA_Surrender(
+  HDGA_Control         *hdga,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_Control   *new_owner;
+
+  _HDGA_Acquire_critical( hdga, queue_context );
+  //cpu_self = _Thread_Dispatch_disable_critical(&queue_context->Lock_context.Lock_context );
+  if ( _HDGA_Get_owner( hdga ) != executing ) {
+   _HDGA_Release( hdga, queue_context );
+    return STATUS_NOT_OWNER;
+  }
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _HDGA_Increment_Current_Position( hdga );
+
+  new_owner = _Thread_queue_First_locked(
+                &hdga->Wait_queue,
+		HDGA_TQ_OPERATIONS
+	      );
+  _HDGA_Set_owner(hdga, new_owner);
+
+  if ( new_owner != NULL ) {
+  #if defined(RTEMS_MULTIPROCESSING)
+    if ( _Objects_Is_local_id( new_owner->Object.id ) )
+  #endif
+    {
+    }
+    if ( !_HDGA_Has_Valid_ticket( hdga, new_owner ) ) {
+      _HDGA_Set_owner( hdga, NULL );
+      _HDGA_Release( hdga, queue_context );
+      return STATUS_SUCCESSFUL;
+    }
+    _Thread_queue_Extract_critical(
+      &hdga->Wait_queue.Queue,
+      HDGA_TQ_OPERATIONS,
+      new_owner,
+      queue_context
+    );
+  } else {
+    _HDGA_Release( hdga, queue_context );
+  }
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Checks if the HDGA control can be destroyed.
+ *
+ * @param dpcp The HDGA control for the operation.
+ *
+ * @retval STATUS_SUCCESSFUL The HDGA is currently not used
+ *      and can be destroyed.
+ * @retval STATUS_RESOURCE_IN_USE The HDGA control is in use,
+ *      it cannot be destroyed.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _HDGA_Can_destroy( HDGA_Control *hdga )
+{
+  if ( _HDGA_Get_owner( hdga ) != NULL ||
+    _Thread_queue_First_locked(
+      &hdga->Wait_queue,
+      HDGA_TQ_OPERATIONS
+  ) != NULL)  {
+    return STATUS_RESOURCE_IN_USE;
+  }
+
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Gives the task a ticket number and saves it in our ticket array
+ * in the hdga control block. Originally it was possible to have the same task more than
+ * one time in the queue, hence the weird if else condition.
+ *
+ * @param[in, out] hdga The HDGA control to surrender the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _HDGA_Set_thread(
+  HDGA_Control         *hdga,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context,
+  int   	        position
+)
+{
+  int posT = 0;
+  _HDGA_Acquire_critical( hdga, queue_context );
+
+  if ( _HDGA_Get_Ticket_number( executing ) == 0 ) {
+    posT = position + 1;
+    executing->ticket.ticket = posT;
+    hdga->ticket_order[position] = executing->ticket.ticket;
+    executing->ticket.owner = executing;
+    
+  } else {
+    hdga->ticket_order[position] = executing->ticket.ticket;
+  }
+  _HDGA_Release( hdga, queue_context );
+  return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Deletes the HDGA control.
+ *
+ * @param[in, out] hdga The HDGA control to surrender the control of.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _HDGA_Destroy(
+  HDGA_Control         *hdga,
+  Thread_queue_Context *queue_context
+)
+{
+  _HDGA_Release( hdga, queue_context );
+  _Thread_queue_Destroy( &hdga->Wait_queue );
+  _Workspace_Free( hdga->ticket_order );
+}
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_HDGAIMPL_H */
diff -Naur original/cpukit/include/rtems/score/mpcp.h modified/cpukit/include/rtems/score/mpcp.h
--- original/cpukit/include/rtems/score/mpcp.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/mpcp.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,51 @@
+#ifndef SOURCE_MPCP_H
+#define SOURCE_MPCP_H
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/threadq.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @defgroup ScoreMPCP Multiprocessor Resource Sharing Protocol Handler
+ *
+ * @ingroup Score
+ *
+ * @brief Multiprocessor Resource Sharing Protocol (MPCP).
+ *
+ *
+ * @{
+ */
+
+/**
+ * @brief MPCP control block.
+ */
+typedef struct {
+  /**
+   * @brief The thread queue to manage ownership and waiting threads.
+   */
+  Thread_queue_Control Wait_queue;
+
+  /**
+   * @brief The ceiling priority used by the owner thread.
+   */
+  Priority_Node Ceiling_priority;
+
+  /**
+   * @brief One ceiling priority per scheduler instance.
+   */
+  Priority_Control *ceiling_priorities;
+} MPCP_Control;
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif //SOURCE_MPCP_H
diff -Naur original/cpukit/include/rtems/score/mpcpimpl.h modified/cpukit/include/rtems/score/mpcpimpl.h
--- original/cpukit/include/rtems/score/mpcpimpl.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/mpcpimpl.h	2023-02-12 13:57:40.931183000 +0100
@@ -0,0 +1,523 @@
+/*
+ * Copyright (c) 2014, 2016 embedded brains GmbH.  All rights reserved.
+ *
+ *  embedded brains GmbH
+ *  Dornierstr. 4
+ *  82178 Puchheim
+ *  Germany
+ *  <rtems@embedded-brains.de>
+ *
+ * The license and distribution terms for this file may be
+ * found in the file LICENSE in this distribution or at
+ * http://www.rtems.org/license/LICENSE.
+ */
+
+#ifndef _RTEMS_SCORE_MPCPIMPL_H
+#define _RTEMS_SCORE_MPCPIMPL_H
+
+
+#include <rtems/score/mpcp.h>
+
+#if defined(RTEMS_SMP)
+
+#include <rtems/score/assert.h>
+#include <rtems/score/status.h>
+#include <rtems/score/threadqimpl.h>
+#include <rtems/score/watchdogimpl.h>
+#include <rtems/score/wkspace.h>
+#include <rtems/score/schedulerimpl.h>
+#include <rtems/score/threadimpl.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+/**
+ * @addtogroup ScoreMPCP
+ *
+ * @{
+ */
+
+#define MPCP_TQ_OPERATIONS &_Thread_queue_Operations_priority
+
+/**
+ * @brief Acquires critical according to MPCP.
+ *
+ * @param mpcp The MPCP control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _MPCP_Acquire_critical(
+        MPCP_Control         *mpcp,
+        Thread_queue_Context *queue_context
+)
+{
+    _Thread_queue_Acquire_critical( &mpcp->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Releases according to MPCP.
+ *
+ * @param mpcp The MPCP control for the operation.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _MPCP_Release(
+  MPCP_Control         *mpcp,
+  Thread_queue_Context *queue_context
+)
+{
+    _Thread_queue_Release( &mpcp->Wait_queue, queue_context );
+}
+
+/**
+ * @brief Gets owner of the MPCP control.
+ *
+ * @param mpcp The MPCP control to get the owner from.
+ *
+ * @return The owner of the MPCP control.
+ */
+RTEMS_INLINE_ROUTINE Thread_Control *_MPCP_Get_owner(
+        const MPCP_Control *mpcp
+)
+{
+    return mpcp->Wait_queue.Queue.owner;
+}
+
+/**
+ * @brief Sets owner of the MPCP control.
+ *
+ * @param[out] mpcp The MPCP control to set the owner of.
+ * @param owner The desired new owner for @a mpcp.
+ */
+RTEMS_INLINE_ROUTINE void _MPCP_Set_owner(
+        MPCP_Control   *mpcp,
+        Thread_Control *owner
+)
+{
+    mpcp->Wait_queue.Queue.owner = owner;
+}
+
+/**
+ * @brief Gets priority of the MPCP control.
+ *
+ * @param mpcp The mpcp to get the priority from.
+ * @param scheduler The corresponding scheduler.
+ *
+ * @return The priority of the MPCP control.
+ */
+RTEMS_INLINE_ROUTINE Priority_Control _MPCP_Get_priority(
+        const MPCP_Control      *mpcp,
+        const Scheduler_Control *scheduler
+)
+{
+    uint32_t scheduler_index;
+
+    scheduler_index = _Scheduler_Get_index( scheduler );
+    return mpcp ->ceiling_priorities[scheduler_index];
+}
+
+/**
+ * @brief Sets priority of the MPCP control
+ *
+ * @param[out] mpcp The MPCP control to set the priority of.
+ * @param scheduler The corresponding scheduler.
+ * @param new_priority The new priority for the MPCP control
+ */
+RTEMS_INLINE_ROUTINE void _MPCP_Set_priority(
+        MPCP_Control            *mpcp,
+        const Scheduler_Control *scheduler,
+        Priority_Control         new_priority
+)
+{
+    uint32_t scheduler_index;
+
+    scheduler_index = _Scheduler_Get_index( scheduler );
+    mpcp->ceiling_priorities[ scheduler_index ] = new_priority;
+}
+
+/**
+ * @brief Adds the priority to the given thread.
+ *
+ * @param mpcp The MPCP control for the operation.
+ * @param[in, out] thread The thread to add the priority node to.
+ * @param[out] priority_node The priority node to initialize and add to
+ *      the thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the thread
+ *      exceeds the ceiling priority.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _MPCP_Raise_priority(
+        MPCP_Control         *mpcp,
+        Thread_Control       *thread,
+        Priority_Node        *priority_node,
+        Thread_queue_Context *queue_context
+)
+{
+    Status_Control           status;
+    ISR_lock_Context         lock_context;
+    const Scheduler_Control *scheduler;
+    Priority_Control         ceiling_priority;
+    Scheduler_Node          *scheduler_node;
+
+    _Thread_queue_Context_clear_priority_updates( queue_context );
+    _Thread_Wait_acquire_default_critical( thread, &lock_context );
+
+    scheduler = _Thread_Scheduler_get_home( thread );
+    scheduler_node = _Thread_Scheduler_get_home_node( thread );
+    ceiling_priority = _MPCP_Get_priority( mpcp, scheduler );
+
+    if (
+            ceiling_priority
+            <= _Priority_Get_priority( &scheduler_node->Wait.Priority )
+            ) {
+        _Priority_Node_initialize( priority_node, ceiling_priority );
+        _Thread_Priority_add( thread, priority_node, queue_context );
+        status = STATUS_SUCCESSFUL;
+    } else {
+        status = STATUS_MUTEX_CEILING_VIOLATED;
+    }
+
+    _Thread_Wait_release_default_critical( thread, &lock_context );
+    return status;
+}
+
+/**
+ * @brief Removes the priority from the given thread.
+ *
+ * @param[in, out] The thread to remove the priority from.
+ * @param priority_node The priority node to remove from the thread
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _MPCP_Remove_priority(
+        Thread_Control       *thread,
+        Priority_Node        *priority_node,
+        Thread_queue_Context *queue_context
+)
+{
+    ISR_lock_Context lock_context;
+
+    _Thread_queue_Context_clear_priority_updates( queue_context );
+    _Thread_Wait_acquire_default_critical( thread, &lock_context );
+    _Thread_Priority_remove( thread, priority_node, queue_context );
+    _Thread_Wait_release_default_critical( thread, &lock_context );
+}
+
+/**
+ * @brief Replaces the given priority node with the ceiling priority of
+ *      the MPCP control.
+ *
+ * @param mpcp The mpcp control for the operation.
+ * @param[out] thread The thread to replace the priorities.
+ * @param ceiling_priority The node to be replaced.
+ */
+RTEMS_INLINE_ROUTINE void _MPCP_Replace_priority(
+        MPCP_Control   *mpcp,
+        Thread_Control *thread,
+        Priority_Node  *ceiling_priority
+)
+{
+    ISR_lock_Context lock_context;
+
+    _Thread_Wait_acquire_default( thread, &lock_context );
+    _Thread_Priority_replace(
+            thread,
+            ceiling_priority,
+            &mpcp->Ceiling_priority
+    );
+    _Thread_Wait_release_default( thread, &lock_context );
+}
+
+/**
+ * @brief Claims ownership of the MPCP control.
+ *
+ * @param mpcp The MPCP control to claim the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _MPCP_Claim_ownership(
+        MPCP_Control         *mpcp,
+        Thread_Control       *executing,
+        Thread_queue_Context *queue_context
+)
+{
+    Status_Control   status;
+    Per_CPU_Control *cpu_self;
+
+    status = _MPCP_Raise_priority(
+            mpcp,
+            executing,
+            &mpcp->Ceiling_priority,
+            queue_context
+    );
+
+    if ( status != STATUS_SUCCESSFUL ) {
+        _MPCP_Release( mpcp, queue_context );
+        return status;
+    }
+
+    _MPCP_Set_owner( mpcp, executing );
+    cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+    _MPCP_Release( mpcp, queue_context );
+    _Thread_Priority_update( queue_context );
+    _Thread_Dispatch_enable( cpu_self );
+
+    return RTEMS_SUCCESSFUL;
+}
+
+/**
+ * @brief Initializes a MPCP control.
+ *
+ * @param[out] mpcp The MPCP control that is initialized.
+ * @param scheduler The scheduler for the operation.
+ * @param ceiling_priority
+ * @param executing The currently executing thread.  Ignored in this method.
+ * @param initially_locked Indicates whether the MPCP control shall be initally
+ *      locked. If it is initially locked, this method returns STATUS_INVALID_NUMBER.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_INVALID_NUMBER The MPCP control is initially locked.
+ * @retval STATUS_NO_MEMORY There is not enough memory to allocate.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _MPCP_Initialize(
+        MPCP_Control            *mpcp,
+        const Scheduler_Control *scheduler,
+        Priority_Control         ceiling_priority,
+        Thread_Control          *executing,
+        bool                     initially_locked
+)
+{
+  (void) executing;
+    uint64_t scheduler_count = _Scheduler_Count;
+    uint32_t i;
+
+    if ( initially_locked ) {
+        return STATUS_INVALID_NUMBER;
+    }
+
+    mpcp->ceiling_priorities = (Priority_Control *)_Workspace_Allocate(
+            sizeof( *mpcp->ceiling_priorities ) * scheduler_count
+    );
+    if ( mpcp->ceiling_priorities == NULL ) {
+        return STATUS_NO_MEMORY;
+    }
+    /*
+      loop invariant 0<=i<=scheduler_count;
+      loop assigns i, mpcp->ceiling_priorities[ i ] ;
+      loop variant scheduler_count-i;
+     */
+    for ( i = 0 ; i < scheduler_count ; ++i ) {
+        const Scheduler_Control *scheduler_of_index;
+
+        scheduler_of_index = &_Scheduler_Table[ i ];
+
+        if ( scheduler != scheduler_of_index ) {
+            mpcp->ceiling_priorities[ i ] =
+                   _Scheduler_Map_priority( scheduler_of_index, 1);
+        } else {
+            mpcp->ceiling_priorities[ i ] = ceiling_priority;
+        }
+    }
+
+    _Thread_queue_Object_initialize( &mpcp->Wait_queue );
+    return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Waits for the ownership of the MPCP control.
+ *
+ * @param[in, out] mpcp The MPCP control to get the ownership of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context the thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the
+ *      currently executing thread exceeds the ceiling priority.
+ * @retval STATUS_DEADLOCK A deadlock occured.
+ * @retval STATUS_TIMEOUT A timeout occured.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _MPCP_Wait_for_ownership(
+  MPCP_Control         *mpcp,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context
+)
+{
+
+  Status_Control status;
+  Priority_Node  ceiling_priority;
+
+  _Thread_queue_Context_set_thread_state(
+    queue_context,
+    STATES_WAITING_FOR_SEMAPHORE
+  );
+  _Thread_queue_Context_set_deadlock_callout(
+    queue_context,
+    _Thread_queue_Deadlock_status
+  );
+
+  _Thread_queue_Enqueue(
+    &mpcp->Wait_queue.Queue,
+    MPCP_TQ_OPERATIONS,
+    executing,
+    queue_context
+  );
+
+  status = _MPCP_Raise_priority(
+    mpcp,
+    executing,
+    &ceiling_priority,
+    queue_context
+  );
+
+  if ( status != STATUS_SUCCESSFUL ) {
+    _MPCP_Release( mpcp, queue_context );
+    return status;
+  }
+  _MPCP_Replace_priority( mpcp, executing, &ceiling_priority );
+
+  return status;
+}
+
+/**
+ * @brief Seizes the MPCP control.
+ *
+ * @param[in, out] mpcp The MPCP control to seize the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param wait Indicates whether the calling thread is willing to wait.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_MUTEX_CEILING_VIOLATED The wait priority of the executing
+ *      thread exceeds the ceiling priority.
+ * @retval STATUS_UNAVAILABLE The executing thread is already the owner of
+ *      the MPCP control.  Seizing it is not possible.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _MPCP_Seize(
+        MPCP_Control         *mpcp,
+        Thread_Control       *executing,
+        bool                  wait,
+        Thread_queue_Context *queue_context
+)
+{
+    Status_Control  status;
+    Thread_Control *owner;
+
+    _MPCP_Acquire_critical( mpcp, queue_context );
+
+    owner = _MPCP_Get_owner( mpcp );
+
+    if ( owner == NULL ) {
+        status = _MPCP_Claim_ownership( mpcp, executing, queue_context );
+    } else if ( owner == executing ) {
+        _MPCP_Release( mpcp, queue_context );
+        status = STATUS_UNAVAILABLE;
+    } else if ( wait ) {
+        status = _MPCP_Wait_for_ownership( mpcp, executing, queue_context );
+    } else {
+        _MPCP_Release( mpcp, queue_context );
+        status = STATUS_UNAVAILABLE;
+    }
+
+    return status;
+}
+
+/**
+ * @brief Surrenders the MPCP control.
+ *
+ * @param[in, out] mpcp The MPCP control to surrender the control of.
+ * @param[in, out] executing The currently executing thread.
+ * @param queue_context The thread queue context.
+ *
+ * @retval STATUS_SUCCESSFUL The operation succeeded.
+ * @retval STATUS_NOT_OWNER The executing thread does not own the MPCP control.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _MPCP_Surrender(
+        MPCP_Control         *mpcp,
+        Thread_Control       *executing,
+        Thread_queue_Context *queue_context
+)
+{
+    Thread_queue_Heads *heads;
+
+    if ( _MPCP_Get_owner( mpcp ) != executing ) {
+        _ISR_lock_ISR_enable( &queue_context->Lock_context.Lock_context );
+        return STATUS_NOT_OWNER;
+    }
+
+    _MPCP_Acquire_critical( mpcp, queue_context );
+
+    _MPCP_Set_owner( mpcp, NULL );
+    _MPCP_Remove_priority( executing, &mpcp->Ceiling_priority, queue_context );
+
+    heads = mpcp->Wait_queue.Queue.heads;
+
+    if ( heads == NULL ) {
+        Per_CPU_Control *cpu_self;
+
+        cpu_self = _Thread_Dispatch_disable_critical(
+                     &queue_context->Lock_context.Lock_context
+        );
+        _MPCP_Release( mpcp, queue_context );
+        _Thread_Priority_update( queue_context );
+        _Thread_Dispatch_enable( cpu_self );
+        return STATUS_SUCCESSFUL;
+    }
+
+    _Thread_queue_Surrender(
+            &mpcp->Wait_queue.Queue,
+            heads,
+            executing,
+            queue_context,
+            MPCP_TQ_OPERATIONS
+    );
+    return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Checks if the MPCP control can be destroyed.
+ *
+ * @param mpcp The MPCP control for the operation.
+ *
+ * @retval STATUS_SUCCESSFUL The MPCP is currently not used
+ *      and can be destroyed.
+ * @retval STATUS_RESOURCE_IN_USE The MPCP control is in use,
+ *      it cannot be destroyed.
+ */
+RTEMS_INLINE_ROUTINE Status_Control _MPCP_Can_destroy( MPCP_Control *mpcp )
+{
+    if ( _MPCP_Get_owner( mpcp ) != NULL ) {
+        return STATUS_RESOURCE_IN_USE;
+    }
+
+    return STATUS_SUCCESSFUL;
+}
+
+/**
+ * @brief Destroys the MPCP control
+ *
+ * @param[in, out] The mpcp that is about to be destroyed.
+ * @param queue_context The thread queue context.
+ */
+RTEMS_INLINE_ROUTINE void _MPCP_Destroy(
+        MPCP_Control         *mpcp,
+        Thread_queue_Context *queue_context
+)
+{
+    _MPCP_Release( mpcp, queue_context );
+    _Thread_queue_Destroy( &mpcp->Wait_queue );
+    _Workspace_Free( mpcp->ceiling_priorities );
+}
+
+/** @} */
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* RTEMS_SMP */
+
+#endif /* _RTEMS_SCORE_MPCPIMPL_H */
diff -Naur original/cpukit/include/rtems/score/schedulerimpl.h modified/cpukit/include/rtems/score/schedulerimpl.h
--- original/cpukit/include/rtems/score/schedulerimpl.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/score/schedulerimpl.h	2022-11-11 16:52:30.000000000 +0100
@@ -1341,6 +1341,148 @@
   _Scheduler_Update_priority( the_thread );
   return STATUS_SUCCESSFUL;
 }
+RTEMS_INLINE_ROUTINE void _Scheduler_Migrate_To(
+          Thread_Control  *executing,
+          Per_CPU_Control *migration_cpu,
+          Priority_Node   *ceiling_priority
+        )
+{
+  ISR_lock_Context         lock_context;
+  const Scheduler_Control *migration_scheduler;
+  const Scheduler_Control *home_scheduler;
+  Scheduler_Node 	  *home_node;
+  Scheduler_Node 	  *migration_node;
+  size_t          	   migration_scheduler_index;
+  ISR_lock_Context         scheduler_lock_context;
+  Per_CPU_Control         *cpu_self;
+
+  home_node = _Thread_Scheduler_get_home_node( executing );
+  home_scheduler = _Thread_Scheduler_get_home( executing );
+
+  _Scheduler_Acquire_critical( home_scheduler, &lock_context );
+  ( *home_scheduler->Operations.block )(
+    home_scheduler,
+    executing,
+    home_node
+  );
+  _Scheduler_Release_critical( home_scheduler, &lock_context );
+
+  migration_scheduler = _Scheduler_Get_by_CPU(migration_cpu);
+  migration_scheduler_index = _Scheduler_Get_index(migration_scheduler);
+  migration_node = _Thread_Scheduler_get_node_by_index(executing ,migration_scheduler_index);
+
+  _Thread_Scheduler_acquire_critical( executing, &scheduler_lock_context );
+  _Scheduler_Node_set_priority( migration_node, ceiling_priority->priority, false );
+  _Chain_Append_unprotected(
+    &executing->Scheduler.Scheduler_nodes,
+    &migration_node->Thread.Scheduler_node.Chain
+  );
+  _Chain_Append_unprotected(
+    &executing->Scheduler.Wait_nodes,
+    &migration_node->Thread.Wait_node
+  );
+  _Thread_Scheduler_release_critical( executing, &scheduler_lock_context );
+
+  _Scheduler_Acquire_critical( migration_scheduler, &lock_context );
+  ( *migration_scheduler->Operations.update_priority )(
+    migration_scheduler,
+    executing,
+    migration_node
+  );
+  ( *migration_scheduler->Operations.unblock )(
+    migration_scheduler,
+    executing,
+    migration_node
+  );
+  _Scheduler_Release_critical( migration_scheduler, &lock_context );
+}
+
+RTEMS_INLINE_ROUTINE void _Scheduler_Migrate_Back(
+          Thread_Control  *executing,
+          Per_CPU_Control *migration_cpu
+        )
+{
+  ISR_lock_Context         lock_context;
+  ISR_lock_Context 	   scheduler_lock_context;
+  const Scheduler_Control *migration_scheduler;
+  const Scheduler_Control *home_scheduler;
+  Scheduler_Node 	  *home_node;
+  Scheduler_Node 	  *migration_node;
+  size_t 		   migration_scheduler_index;
+
+  migration_scheduler = _Scheduler_Get_by_CPU( migration_cpu );
+  migration_scheduler_index = _Scheduler_Get_index( migration_scheduler );
+  migration_node = _Thread_Scheduler_get_node_by_index(
+            executing,
+            migration_scheduler_index
+          );
+
+  _Scheduler_Acquire_critical( migration_scheduler, &lock_context );
+  _Thread_Scheduler_acquire_critical( executing, &scheduler_lock_context );
+  _Scheduler_Node_set_priority(
+    migration_node,
+    migration_scheduler->maximum_priority,
+    false
+  );
+  _Thread_Scheduler_release_critical( executing, &scheduler_lock_context );
+  ( *migration_scheduler->Operations.update_priority )(
+    migration_scheduler,
+    executing,
+    migration_node
+  );
+  ( *migration_scheduler->Operations.block )(
+    migration_scheduler,
+    executing,
+    migration_node
+  );
+  _Scheduler_Release_critical( migration_scheduler, &lock_context );
+
+  _Thread_Scheduler_acquire_critical( executing, &scheduler_lock_context );
+  _Chain_Extract_unprotected( &migration_node->Thread.Wait_node );
+  _Chain_Extract_unprotected( &migration_node->Thread.Scheduler_node.Chain );
+  _Thread_Scheduler_release_critical( executing, &scheduler_lock_context );
+  home_node = _Thread_Scheduler_get_home_node( executing );
+  home_scheduler = _Thread_Scheduler_get_home( executing );
+
+  _Scheduler_Acquire_critical( home_scheduler, &lock_context );
+  ( *home_scheduler->Operations.unblock )(
+    home_scheduler,
+    executing,
+    home_node
+  );
+  _Scheduler_Release_critical( home_scheduler, &lock_context );
+}
+
+RTEMS_INLINE_ROUTINE void _Scheduler_Change_migration_priority(
+          Thread_Control  *executing,
+          Per_CPU_Control *migration_cpu,
+          Priority_Node   *priority
+        )
+{
+  const Scheduler_Control *migration_scheduler;
+  Scheduler_Node  	  *migration_node;
+  size_t  		   migration_scheduler_index;
+  ISR_lock_Context    	   scheduler_lock_context;
+  ISR_lock_Context         lock_context;
+
+  migration_scheduler = _Scheduler_Get_by_CPU( migration_cpu );
+  migration_scheduler_index = _Scheduler_Get_index( migration_scheduler );
+  migration_node = _Thread_Scheduler_get_node_by_index(
+           executing,
+           migration_scheduler_index
+          );
+
+  _Scheduler_Acquire_critical( migration_scheduler, &lock_context );
+  _Thread_Scheduler_acquire_critical( executing, &scheduler_lock_context );
+  _Scheduler_Node_set_priority( migration_node, priority->priority, false );
+  _Thread_Scheduler_release_critical( executing, &scheduler_lock_context );
+  ( *migration_scheduler->Operations.update_priority )(
+    migration_scheduler,
+    executing,
+    migration_node
+  );
+  _Scheduler_Release_critical( migration_scheduler, &lock_context );
+}
 
 /** @} */
 
diff -Naur original/cpukit/include/rtems/score/thread.h modified/cpukit/include/rtems/score/thread.h
--- original/cpukit/include/rtems/score/thread.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/score/thread.h	2022-11-11 16:52:30.000000000 +0100
@@ -38,6 +38,7 @@
 #include <rtems/score/threadq.h>
 #include <rtems/score/timestamp.h>
 #include <rtems/score/watchdog.h>
+#include <rtems/score/ticket.h>
 
 #if defined(RTEMS_SMP)
 #include <rtems/score/processormask.h>
@@ -874,6 +875,11 @@
    * @brief LIFO list of user extensions iterators.
    */
   struct User_extensions_Iterator *last_user_extensions_iterator;
+  
+  /**
+   * @brief Ticket node to manage hdga semaphore order.
+   */
+  Ticket_Node ticket;
 
   /**
    * @brief Variable length array of user extension pointers.
diff -Naur original/cpukit/include/rtems/score/threadq.h modified/cpukit/include/rtems/score/threadq.h
--- original/cpukit/include/rtems/score/threadq.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/score/threadq.h	2022-11-11 16:52:30.000000000 +0100
@@ -370,6 +370,7 @@
      * among the highest priority thread of each scheduler instance.
      */
     Chain_Control Fifo;
+    RBTree_Control Tree;
 
 #if !defined(RTEMS_SMP)
     /**
diff -Naur original/cpukit/include/rtems/score/threadqimpl.h modified/cpukit/include/rtems/score/threadqimpl.h
--- original/cpukit/include/rtems/score/threadqimpl.h	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/include/rtems/score/threadqimpl.h	2023-02-10 16:51:45.942551000 +0100
@@ -929,6 +929,20 @@
   Thread_Control                *the_thread,
   Thread_queue_Context          *queue_context
 );
+void _Thread_queue_Enqueue2(
+  Thread_queue_Queue            *queue,
+  const Thread_queue_Operations *operations,
+  Thread_Control                *the_thread,
+  Thread_queue_Context          *queue_context,
+  Per_CPU_Control *cpu
+);
+
+void _Thread_queue_Enqueue_busy(
+  Thread_queue_Queue            *queue,
+  const Thread_queue_Operations *operations,
+  Thread_Control                *the_thread,
+  Thread_queue_Context          *queue_context
+);
 
 #if defined(RTEMS_SMP)
 /**
@@ -961,6 +975,15 @@
 );
 #endif
 
+#if defined(RTEMS_SMP)
+Status_Control _Thread_queue_Enqueue_sticky_no_update(
+  Thread_queue_Queue            *queue,
+  const Thread_queue_Operations *operations,
+  Thread_Control                *the_thread,
+  Thread_queue_Context          *queue_context
+);
+#endif
+
 /**
  * @brief Extracts the thread from the thread queue, restores the default wait
  * operations and restores the default thread lock.
@@ -1111,6 +1134,16 @@
   const Thread_queue_Operations *operations
 );
 
+void _Thread_queue_Surrender_and_Migrate(
+  Thread_queue_Queue            *queue,
+  Thread_queue_Heads            *heads,
+  Thread_Control                *previous_owner,
+  Thread_queue_Context          *queue_context,
+  const Thread_queue_Operations *operations,
+  Per_CPU_Control *cpu,
+  Priority_Node *priority
+);
+
 #if defined(RTEMS_SMP)
 /**
  * @brief Surrenders the thread queue previously owned by the thread to the
@@ -1141,6 +1174,18 @@
 );
 #endif
 
+#if defined(RTEMS_SMP)
+void _Thread_queue_Surrender_sticky_and_migrate(
+  Thread_queue_Queue            *queue,
+  Thread_queue_Heads            *heads,
+  Thread_Control                *previous_owner,
+  Thread_queue_Context          *queue_context,
+  const Thread_queue_Operations *operations,
+  Per_CPU_Control *cpu,
+  Priority_Node *priority
+);
+#endif
+
 /**
  * @brief Checks if the thread queue queue is empty.
  *
@@ -1471,6 +1518,8 @@
 
 extern const Thread_queue_Operations _Thread_queue_Operations_FIFO;
 
+extern const Thread_queue_Operations _Thread_queue_Operations_TICKET;
+
 extern const Thread_queue_Operations _Thread_queue_Operations_priority;
 
 extern const Thread_queue_Operations _Thread_queue_Operations_priority_inherit;
diff -Naur original/cpukit/include/rtems/score/ticket.h modified/cpukit/include/rtems/score/ticket.h
--- original/cpukit/include/rtems/score/ticket.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/include/rtems/score/ticket.h	2023-02-10 16:53:34.417718000 +0100
@@ -0,0 +1,187 @@
+/**
+ * @file
+ *
+ * @ingroup RTEMSScoreTicket
+ *
+ * @brief Ticket Handler API
+ */
+
+#ifndef _RTEMS_SCORE_TICKET_H
+#define _RTEMS_SCORE_TICKET_H
+
+#include <rtems/score/chain.h>
+#include <rtems/score/cpu.h>
+#include <rtems/score/rbtree.h>
+#include <rtems/score/thread.h>
+
+struct _Scheduler_Control;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/**
+ * @brief The ticket number of the ticket
+ */
+typedef uint64_t Ticket_Control;
+
+#define TICKET_MINIMUM      0
+#define TICKET_DEFAULT_MAXIMUM      255
+
+/**
+ * @brief The from RTEMS provided macro to get the container of the node
+ */
+#define TICKET_NODE_OF_NODE( node ) \
+  RTEMS_CONTAINER_OF( node, Ticket_Node, Node.RBTree )
+
+typedef struct {
+  /**
+   * @brief Node component for a chain or red-black tree.
+   */
+  union {
+    Chain_Node Chain;
+    RBTree_Node RBTree;
+  } Node;
+
+  /**
+   * @brief The ticket number of the node
+   */
+  Ticket_Control ticket;
+
+  /**
+   * @brief The owner of this ticket
+   */
+  Thread_Control *owner;
+} Ticket_Node;
+
+RTEMS_INLINE_ROUTINE void _Ticket_Initialize_one(
+    RBTree_Control *tree,
+    Ticket_Node    *node
+)
+{
+  _RBTree_Initialize_one( tree, &node->Node.RBTree );
+}
+
+RTEMS_INLINE_ROUTINE void _Ticket_Node_initialize(
+  Ticket_Node    *node,
+  Ticket_Control  ticket
+)
+{
+  node->ticket = ticket;
+  _RBTree_Initialize_node( &node->Node.RBTree );
+}
+
+/**
+ * @brief Compares two tickets
+ *
+ * @param left The ticket control on the left hand side of the comparison.
+ * @param right THe RBTree_Node to get the ticket for the comparison from.
+ *
+ * @retval true The ticket on the left hand side of the comparison is smaller.
+ * @retval false The ticket on the left hand side of the comparison is greater of equal.
+ */
+RTEMS_INLINE_ROUTINE bool _Ticket_Less(
+  const void        *left,
+  const RBTree_Node *right
+)
+{
+  const Ticket_Control *the_left;
+  const Ticket_Node    *the_right;
+
+  the_left = (Ticket_Control *) left;
+  the_right = RTEMS_CONTAINER_OF( right, Ticket_Node, Node.RBTree );
+
+  return *the_left < the_right->ticket;
+}
+
+/**
+ * @brief Inserts ticket in to tree
+ *
+ * @param tree The tree to insert into
+ * @param node The node that gets inserted
+ * @param ticket The ticket number to compare
+ *
+ * @retval true The inserted node is the new minimum node according to the
+ *   specified less order function.
+ * @retval false The inserted node is not the new minimum node according to the
+ *   specified less order function.
+ */
+RTEMS_INLINE_ROUTINE bool _Ticket_Plain_insert(
+  RBTree_Control *tree,
+  Ticket_Node    *node,
+  Ticket_Control  ticket
+)
+{
+  return _RBTree_Insert_inline(
+    tree,
+    &node->Node.RBTree,
+    &ticket,
+    _Ticket_Less
+  );
+}
+
+/**
+ * @brief Extract the given node from the tree
+ *
+ * @param tree The tree to extract from
+ * @param node The node that gets extracted
+ *
+ */
+RTEMS_INLINE_ROUTINE void _Ticket_Plain_extract(
+  RBTree_Control *tree,
+  Ticket_Node    *node
+)
+{
+  _RBTree_Extract( tree, &node->Node.RBTree );
+}
+
+/**
+ * @brief Gets the node with the smallest ticket number from the tree
+ *
+ * @param tree The tree to get the minimum node from
+ *
+ * @return The minimum ticket node
+ */
+RTEMS_INLINE_ROUTINE RBTree_Node *_Ticket_Get_minimum_node(
+  const RBTree_Control *tree
+)
+{
+  return _RBTree_Minimum( tree);
+}
+
+/**
+ * @brief Sets the task owner of this node
+ *
+ * @param node the ticket node to set the owner
+ * @param executing the owner to set
+ */
+RTEMS_INLINE_ROUTINE void _Ticket_Set_owner(
+  Ticket_Node    *node,
+  Thread_Control *executing
+)
+{
+  node->owner = executing;
+}
+
+/**
+ * @brief Returns the owner of this ticket node
+ *
+ * @param node the ticket node to get the owner
+ *
+ * @return executing the owner of this node
+ */
+RTEMS_INLINE_ROUTINE Thread_Control *_Ticket_Get_owner(
+  Ticket_Node *node
+)
+{
+  return node->owner;
+}
+
+#ifdef __cplusplus
+}
+#endif
+
+/** @} */
+
+#endif
+/* end of include file */
diff -Naur original/cpukit/Makefile.am modified/cpukit/Makefile.am
--- original/cpukit/Makefile.am	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/Makefile.am	2022-11-11 16:52:30.000000000 +0100
@@ -776,6 +776,8 @@
 librtemscpu_a_SOURCES += rtems/src/semident.c
 librtemscpu_a_SOURCES += rtems/src/semobtain.c
 librtemscpu_a_SOURCES += rtems/src/semrelease.c
+librtemscpu_a_SOURCES += rtems/src/semticket.c
+librtemscpu_a_SOURCES += rtems/src/semsetprocessor.c
 librtemscpu_a_SOURCES += rtems/src/semsetpriority.c
 librtemscpu_a_SOURCES += rtems/src/signalcatch.c
 librtemscpu_a_SOURCES += rtems/src/signalsend.c
diff -Naur original/cpukit/Makefile.in modified/cpukit/Makefile.in
--- original/cpukit/Makefile.in	2020-08-26 00:22:34.000000000 +0200
+++ modified/cpukit/Makefile.in	2023-01-31 19:23:43.883911000 +0100
@@ -1556,6 +1572,7 @@
 	rtems/src/semcreate.c rtems/src/semdelete.c \
 	rtems/src/semflush.c rtems/src/semident.c \
 	rtems/src/semobtain.c rtems/src/semrelease.c \
+	rtems/src/semticket.c rtems/src/semsetprocessor.c \
 	rtems/src/semsetpriority.c rtems/src/signalcatch.c \
 	rtems/src/signalsend.c rtems/src/status.c \
 	rtems/src/statustext.c rtems/src/statustoerrno.c \
@@ -3295,7 +3312,8 @@
 	rtems/src/sem.$(OBJEXT) rtems/src/semcreate.$(OBJEXT) \
 	rtems/src/semdelete.$(OBJEXT) rtems/src/semflush.$(OBJEXT) \
 	rtems/src/semident.$(OBJEXT) rtems/src/semobtain.$(OBJEXT) \
-	rtems/src/semrelease.$(OBJEXT) \
+	rtems/src/semrelease.$(OBJEXT) rtems/src/semticket.$(OBJEXT) \
+	rtems/src/semsetprocessor.$(OBJEXT) \
 	rtems/src/semsetpriority.$(OBJEXT) \
 	rtems/src/signalcatch.$(OBJEXT) rtems/src/signalsend.$(OBJEXT) \
 	rtems/src/status.$(OBJEXT) rtems/src/statustext.$(OBJEXT) \
@@ -3854,8 +5488,15 @@
 	include/rtems/score/isrlock.h include/rtems/score/memory.h \
 	include/rtems/score/mpci.h include/rtems/score/mpciimpl.h \
 	include/rtems/score/mppkt.h include/rtems/score/mrsp.h \
-	include/rtems/score/mrspimpl.h include/rtems/score/muteximpl.h \
-	include/rtems/score/object.h include/rtems/score/objectdata.h \
+	include/rtems/score/mrspimpl.h include/rtems/score/dpcp.h \
+	include/rtems/score/dpcpimpl.h include/rtems/score/mpcp.h \
+	include/rtems/score/mpcpimpl.h include/rtems/score/fmlps.h \
+	include/rtems/score/fmlpsimpl.h include/rtems/score/fmlpl.h \
+	include/rtems/score/fmlplimpl.h include/rtems/score/hdga.h \
+	include/rtems/score/hdgaimpl.h include/rtems/score/dflpl.h \
+	include/rtems/score/dflplimpl.h \
+	include/rtems/score/muteximpl.h include/rtems/score/object.h \
+	include/rtems/score/objectdata.h \
 	include/rtems/score/objectimpl.h \
 	include/rtems/score/objectmp.h include/rtems/score/onceimpl.h \
 	include/rtems/score/percpu.h include/rtems/score/percpudata.h \
@@ -4490,8 +6178,15 @@
 	include/rtems/score/isrlock.h include/rtems/score/memory.h \
 	include/rtems/score/mpci.h include/rtems/score/mpciimpl.h \
 	include/rtems/score/mppkt.h include/rtems/score/mrsp.h \
-	include/rtems/score/mrspimpl.h include/rtems/score/muteximpl.h \
-	include/rtems/score/object.h include/rtems/score/objectdata.h \
+	include/rtems/score/mrspimpl.h include/rtems/score/dpcp.h \
+	include/rtems/score/dpcpimpl.h include/rtems/score/mpcp.h \
+	include/rtems/score/mpcpimpl.h include/rtems/score/fmlps.h \
+	include/rtems/score/fmlpsimpl.h include/rtems/score/fmlpl.h \
+	include/rtems/score/fmlplimpl.h include/rtems/score/hdga.h \
+	include/rtems/score/hdgaimpl.h include/rtems/score/dflpl.h \
+	include/rtems/score/dflplimpl.h \
+	include/rtems/score/muteximpl.h include/rtems/score/object.h \
+	include/rtems/score/objectdata.h \
 	include/rtems/score/objectimpl.h \
 	include/rtems/score/objectmp.h include/rtems/score/onceimpl.h \
 	include/rtems/score/percpu.h include/rtems/score/percpudata.h \
@@ -5045,6 +6740,7 @@
 	rtems/src/semcreate.c rtems/src/semdelete.c \
 	rtems/src/semflush.c rtems/src/semident.c \
 	rtems/src/semobtain.c rtems/src/semrelease.c \
+	rtems/src/semticket.c rtems/src/semsetprocessor.c \
 	rtems/src/semsetpriority.c rtems/src/signalcatch.c \
 	rtems/src/signalsend.c rtems/src/status.c \
 	rtems/src/statustext.c rtems/src/statustoerrno.c \
diff -Naur original/cpukit/rtems/src/semcreate.c modified/cpukit/rtems/src/semcreate.c
--- original/cpukit/rtems/src/semcreate.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/rtems/src/semcreate.c	2023-02-10 17:21:22.769543000 +0100
@@ -29,7 +29,10 @@
 #include <rtems/sysinit.h>
 
 #define SEMAPHORE_KIND_MASK ( RTEMS_SEMAPHORE_CLASS | RTEMS_INHERIT_PRIORITY \
-  | RTEMS_PRIORITY_CEILING | RTEMS_MULTIPROCESSOR_RESOURCE_SHARING )
+  | RTEMS_PRIORITY_CEILING | RTEMS_MULTIPROCESSOR_RESOURCE_SHARING \
+  | RTEMS_DISTRIBUTED_PRIORITY_CEILING | RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_SHORT \
+  | RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_LONG | RTEMS_HYPERPERIOD_DEPENDENCY_GRAPH_APPROACH \
+  | RTEMS_MULTIPROCESSOR_PRIORITY_CEILING)
 
 rtems_status_code rtems_semaphore_create(
   rtems_name           name,
@@ -104,9 +107,80 @@
      */
     variant = SEMAPHORE_VARIANT_MUTEX_PRIORITY_CEILING;
 #endif
-  } else {
-    return RTEMS_NOT_DEFINED;
-  }
+
+  } else if (
+      mutex_with_protocol
+	== ( RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_PRIORITY_CEILING |  \
+	    RTEMS_GLOBAL)
+    ) {
+  #if defined(RTEMS_SMP)
+      variant = SEMAPHORE_VARIANT_DPCP;
+  #else
+      /*
+       * Use normal PCP on uni-processor
+       */
+      variant = SEMAPHORE_VARIANT_MUTEX_PRIORITY_CEILING;
+  #endif
+    }else if (
+	mutex_with_protocol
+	  == ( RTEMS_BINARY_SEMAPHORE | RTEMS_MULTIPROCESSOR_PRIORITY_CEILING)
+      ) {
+    #if defined(RTEMS_SMP)
+	variant = SEMAPHORE_VARIANT_MPCP;
+    #else
+	/*
+	 * Use normal PCP on uni-processor
+	 */
+	variant = RTEMS_MP_NOT_CONFIGURED;
+    #endif
+     }else if (
+      mutex_with_protocol == (RTEMS_BINARY_SEMAPHORE | \
+	  RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_SHORT | RTEMS_FIFO | \
+          RTEMS_GLOBAL )
+    ) {
+  #if defined(RTEMS_SMP)
+      variant = SEMAPHORE_VARIANT_FMLPS;
+  #else
+      return RTEMS_MP_NOT_CONFIGURED;
+  #endif
+    } else if (
+	mutex_with_protocol == (RTEMS_BINARY_SEMAPHORE | \
+	RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_LONG | RTEMS_FIFO | \
+	    RTEMS_GLOBAL )
+      ) {
+    #if defined(RTEMS_SMP)
+	variant = SEMAPHORE_VARIANT_FMLPL;
+    #else
+	return RTEMS_MP_NOT_CONFIGURED;
+    #endif
+    } else if (
+	mutex_with_protocol
+	  == ( RTEMS_BINARY_SEMAPHORE | RTEMS_HYPERPERIOD_DEPENDENCY_GRAPH_APPROACH | RTEMS_GLOBAL)
+      ) {
+    #if defined(RTEMS_SMP)
+	variant = SEMAPHORE_VARIANT_HDGA;
+    #else
+	/*
+	 * Use normal PCP on uni-processor
+	 */
+	variant = RTEMS_MP_NOT_CONFIGURED;
+    #endif
+      }else if (
+	mutex_with_protocol
+	  == ( RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_FLEXIBLE_LOCKING_LONG | RTEMS_GLOBAL)
+      ) {
+    #if defined(RTEMS_SMP)
+	variant = SEMAPHORE_VARIANT_DFLPL;
+    #else
+	/*
+	 * Use normal PCP on uni-processor
+	 */
+	
+	variant = RTEMS_MP_NOT_CONFIGURED;
+    #endif
+      }else {
+  return RTEMS_NOT_DEFINED;
+}
 
   the_semaphore = _Semaphore_Allocate();
 
@@ -220,6 +298,110 @@
       }
 
       break;
+    case SEMAPHORE_VARIANT_DPCP:
+      scheduler = _Thread_Scheduler_get_home( executing );
+      priority = _RTEMS_Priority_To_core( scheduler, priority_ceiling, &valid );
+
+      if ( valid ) {
+        status = _DPCP_Initialize(
+          &the_semaphore->Core_control.DPCP,
+          scheduler,
+          priority,
+          executing,
+          count == 0
+        );
+      } else {
+        status = STATUS_INVALID_PRIORITY;
+      }
+
+      break;
+    case SEMAPHORE_VARIANT_MPCP:
+      scheduler = _Thread_Scheduler_get_home( executing );
+      priority = _RTEMS_Priority_To_core( scheduler, priority_ceiling, &valid );
+
+      if ( valid ) {
+        status = _MPCP_Initialize(
+	 &the_semaphore->Core_control.MPCP,
+	 scheduler,
+	 priority,
+	 executing,
+	 count == 0
+       );
+      } else {
+        status = STATUS_INVALID_PRIORITY;
+      }
+
+      break;
+    case SEMAPHORE_VARIANT_FMLPS:
+      scheduler = _Thread_Scheduler_get_home( executing );
+      priority = _RTEMS_Priority_To_core( scheduler, priority_ceiling, &valid );
+
+      if ( valid ) {
+        status = _FMLPS_Initialize(
+	 &the_semaphore->Core_control.FMLPS,
+	 scheduler,
+	 priority,
+	 executing,
+	 count == 0
+       );
+      } else {
+        status = STATUS_INVALID_PRIORITY;
+      }
+
+      break;
+    case SEMAPHORE_VARIANT_FMLPL:
+      scheduler = _Thread_Scheduler_get_home( executing );
+      priority = _RTEMS_Priority_To_core( scheduler, priority_ceiling, &valid );
+
+      if ( valid ) {
+        status = _FMLPL_Initialize(
+	 &the_semaphore->Core_control.FMLPL,
+	 scheduler,
+	 priority,
+	 executing,
+	 count == 0
+       );
+      } else {
+        status = STATUS_INVALID_PRIORITY;
+      }
+
+      break;
+    case SEMAPHORE_VARIANT_HDGA:
+      scheduler = _Thread_Scheduler_get_home( executing );
+      priority = _RTEMS_Priority_To_core( scheduler, priority_ceiling, &valid );
+
+      if ( valid ) {
+        status = _HDGA_Initialize(
+	 &the_semaphore->Core_control.HDGA,
+	 scheduler,
+	 priority_ceiling,
+	 executing,
+	 count == 0
+       );
+      } else {
+        status = STATUS_INVALID_PRIORITY;
+      }
+
+       break;
+    case SEMAPHORE_VARIANT_DFLPL:
+      scheduler = _Thread_Scheduler_get_home( executing );
+      priority = _RTEMS_Priority_To_core( scheduler, priority_ceiling, &valid );
+
+      if ( valid ) {
+        status = _DFLPL_Initialize(
+	 &the_semaphore->Core_control.DFLPL,
+	 scheduler,
+	 priority,
+	 executing,
+	 count == 0
+       );
+      } else {
+        status = STATUS_INVALID_PRIORITY;
+      }
+
+      break;
+    
+    
 #endif
     default:
       _Assert(
diff -Naur original/cpukit/rtems/src/semdelete.c modified/cpukit/rtems/src/semdelete.c
--- original/cpukit/rtems/src/semdelete.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/rtems/src/semdelete.c	2022-11-11 16:52:30.000000000 +0100
@@ -72,6 +72,30 @@
     case SEMAPHORE_VARIANT_MRSP:
       status = _MRSP_Can_destroy( &the_semaphore->Core_control.MRSP );
       break;
+
+    case SEMAPHORE_VARIANT_DPCP:
+      status = _DPCP_Can_destroy( &the_semaphore->Core_control.DPCP );
+      break;
+    case SEMAPHORE_VARIANT_MPCP:
+      status = _MPCP_Can_destroy( &the_semaphore->Core_control.MPCP);
+      break;
+    case SEMAPHORE_VARIANT_FMLPS:
+      status = _FMLPS_Can_destroy( &the_semaphore->Core_control.FMLPS );
+      break;
+
+    case SEMAPHORE_VARIANT_FMLPL:
+      status = _FMLPL_Can_destroy( &the_semaphore->Core_control.FMLPL);
+      break;
+    case SEMAPHORE_VARIANT_HDGA:
+      status = _HDGA_Can_destroy( &the_semaphore->Core_control.HDGA);
+      break;
+    case SEMAPHORE_VARIANT_DFLPL:
+      status = _DFLPL_Can_destroy( &the_semaphore->Core_control.DFLPL);
+      break;
+
+    
+
+    
 #endif
     default:
       _Assert(
@@ -98,6 +122,32 @@
     case SEMAPHORE_VARIANT_MRSP:
       _MRSP_Destroy( &the_semaphore->Core_control.MRSP, &queue_context );
       break;
+
+    case SEMAPHORE_VARIANT_DPCP:
+      _DPCP_Destroy( &the_semaphore->Core_control.DPCP, &queue_context );
+      break;
+
+    case SEMAPHORE_VARIANT_MPCP:
+      _MPCP_Destroy( &the_semaphore->Core_control.MPCP, &queue_context );
+      break;
+      
+    case SEMAPHORE_VARIANT_FMLPS:
+      _FMLPS_Destroy( &the_semaphore->Core_control.FMLPS, &queue_context );
+      break;
+
+    case SEMAPHORE_VARIANT_FMLPL:
+      _FMLPL_Destroy( &the_semaphore->Core_control.FMLPL, &queue_context );
+      break;
+    case SEMAPHORE_VARIANT_HDGA:
+      _HDGA_Destroy( &the_semaphore->Core_control.HDGA, &queue_context );
+      break;
+    case SEMAPHORE_VARIANT_DFLPL:
+      _DFLPL_Destroy( &the_semaphore->Core_control.DFLPL, &queue_context );
+      break;
+
+    
+
+    
 #endif
     default:
       _Assert(
diff -Naur original/cpukit/rtems/src/semflush.c modified/cpukit/rtems/src/semflush.c
--- original/cpukit/rtems/src/semflush.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/rtems/src/semflush.c	2022-11-11 16:52:30.000000000 +0100
@@ -58,6 +58,37 @@
         &queue_context
       );
       return RTEMS_NOT_DEFINED;
+    case SEMAPHORE_VARIANT_DPCP:
+      _Thread_queue_Release(
+        &the_semaphore->Core_control.Wait_queue,
+        &queue_context
+      );
+      return RTEMS_NOT_DEFINED;
+    case SEMAPHORE_VARIANT_MPCP:
+      _Thread_queue_Release(
+        &the_semaphore->Core_control.Wait_queue,
+        &queue_context
+      );
+      return RTEMS_NOT_DEFINED;
+    case SEMAPHORE_VARIANT_FMLPS:
+      _Thread_queue_Release(
+        &the_semaphore->Core_control.Wait_queue,
+        &queue_context
+      );
+      return RTEMS_NOT_DEFINED;
+    case SEMAPHORE_VARIANT_FMLPL:
+      _Thread_queue_Release(
+        &the_semaphore->Core_control.Wait_queue,
+        &queue_context
+      );
+      return RTEMS_NOT_DEFINED;
+    case SEMAPHORE_VARIANT_DFLPL:
+      _Thread_queue_Release(
+        &the_semaphore->Core_control.Wait_queue,
+        &queue_context
+      );
+      return RTEMS_NOT_DEFINED;
+    
 #endif
     default:
       _Assert(
diff -Naur original/cpukit/rtems/src/semobtain.c modified/cpukit/rtems/src/semobtain.c
--- original/cpukit/rtems/src/semobtain.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/rtems/src/semobtain.c	2023-02-24 17:39:36.414796000 +0100
@@ -46,6 +46,46 @@
   Core_control.MRSP.Wait_queue,
   SEMAPHORE_CONTROL_MRSP
 );
+
+THREAD_QUEUE_OBJECT_ASSERT(
+  Semaphore_Control,
+  Core_control.MRSP.Wait_queue,
+  SEMAPHORE_CONTROL_DPCP
+);
+
+THREAD_QUEUE_OBJECT_ASSERT(
+  Semaphore_Control,
+  Core_control.MPCP.Wait_queue,
+  SEMAPHORE_CONTROL_MPCP
+);
+
+THREAD_QUEUE_OBJECT_ASSERT(
+  Semaphore_Control,
+  Core_control.FMLPS.Wait_queue,
+  SEMAPHORE_CONTROL_FMLPS
+);
+
+THREAD_QUEUE_OBJECT_ASSERT(
+  Semaphore_Control,
+  Core_control.FMLPL.Wait_queue,
+  SEMAPHORE_CONTROL_FMLPL
+);
+
+THREAD_QUEUE_OBJECT_ASSERT(
+  Semaphore_Control,
+  Core_control.HDGA.Wait_queue,
+  SEMAPHORE_CONTROL_HDGA
+);
+
+THREAD_QUEUE_OBJECT_ASSERT(
+  Semaphore_Control,
+  Core_control.DFLPL.Wait_queue,
+  SEMAPHORE_CONTROL_DFLPL
+);
+
+
+
+
 #endif
 
 rtems_status_code rtems_semaphore_obtain(
@@ -123,6 +164,56 @@
         &queue_context
       );
       break;
+    case SEMAPHORE_VARIANT_DPCP:
+      status = _DPCP_Seize(
+        &the_semaphore->Core_control.DPCP,
+        executing,
+        wait,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_MPCP:
+      status = _MPCP_Seize(
+        &the_semaphore->Core_control.MPCP,
+        executing,
+        wait,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_FMLPS:
+      status = _FMLPS_Seize(
+        &the_semaphore->Core_control.FMLPS,
+        executing,
+        wait,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_FMLPL:
+     status = _FMLPL_Seize(
+        &the_semaphore->Core_control.FMLPL,
+        executing,
+        wait,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_HDGA:
+      status = _HDGA_Seize(
+        &the_semaphore->Core_control.HDGA,
+        executing,
+        wait,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_DFLPL:
+      status = _DFLPL_Seize(
+        &the_semaphore->Core_control.DFLPL,
+        executing,
+        wait,
+        &queue_context
+      );
+      break;
+    
+    
 #endif
     default:
       _Assert(
diff -Naur original/cpukit/rtems/src/semrelease.c modified/cpukit/rtems/src/semrelease.c
--- original/cpukit/rtems/src/semrelease.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/rtems/src/semrelease.c	2023-02-10 17:33:16.293438000 +0100
@@ -98,6 +98,50 @@
         &queue_context
       );
       break;
+    case SEMAPHORE_VARIANT_DPCP:
+      status = _DPCP_Surrender(
+        &the_semaphore->Core_control.DPCP,
+        executing,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_MPCP:
+      status = _MPCP_Surrender(
+        &the_semaphore->Core_control.MPCP,
+        executing,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_FMLPS:
+      status = _FMLPS_Surrender(
+        &the_semaphore->Core_control.FMLPS,
+        executing,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_FMLPL:
+      status = _FMLPL_Surrender(
+        &the_semaphore->Core_control.FMLPL,
+        executing,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_HDGA:
+      status = _HDGA_Surrender(
+        &the_semaphore->Core_control.HDGA,
+        executing,
+        &queue_context
+      );
+      break;
+    case SEMAPHORE_VARIANT_DFLPL:
+      status = _DFLPL_Surrender(
+        &the_semaphore->Core_control.DFLPL,
+        executing,
+        &queue_context
+      );
+      break;
+    
+    
 #endif
     default:
       _Assert( variant == SEMAPHORE_VARIANT_COUNTING );
diff -Naur original/cpukit/rtems/src/semsetpriority.c modified/cpukit/rtems/src/semsetpriority.c
--- original/cpukit/rtems/src/semsetpriority.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/rtems/src/semsetpriority.c	2022-11-11 16:52:30.000000000 +0100
@@ -99,6 +99,32 @@
 
       sc = RTEMS_SUCCESSFUL;
       break;
+    case SEMAPHORE_VARIANT_MPCP:
+        if ( new_priority != RTEMS_CURRENT_PRIORITY ) {
+           _MPCP_Set_priority(
+             &the_semaphore->Core_control.MPCP,
+             scheduler,
+             core_priority
+           );
+         }
+
+         sc = RTEMS_SUCCESSFUL;
+         break;
+    case SEMAPHORE_VARIANT_DPCP:
+      old_priority = _DPCP_Get_priority(
+        &the_semaphore->Core_control.DPCP
+      );
+
+      if ( new_priority != RTEMS_CURRENT_PRIORITY ) {
+        _DPCP_Set_priority(
+          &the_semaphore->Core_control.DPCP,
+          scheduler,
+          core_priority
+        );
+      }
+
+      sc = RTEMS_SUCCESSFUL;
+      break;
 #endif
     default:
       _Assert(
diff -Naur original/cpukit/rtems/src/semsetprocessor.c modified/cpukit/rtems/src/semsetprocessor.c
--- original/cpukit/rtems/src/semsetprocessor.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/rtems/src/semsetprocessor.c	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,102 @@
+/**
+ * @file
+ *
+ * @brief RTEMS Semaphore Release
+ * @ingroup ClassicSem Semaphores
+ *
+ * This file contains the implementation of the Classic API directive
+ * rtems_semaphore_release().
+ */
+
+/*
+ *  COPYRIGHT (c) 1989-2014.
+ *  On-Line Applications Research Corporation (OAR).
+ *
+ *  The license and distribution terms for this file may be
+ *  found in the file LICENSE in this distribution or at
+ *  http://www.rtems.org/license/LICENSE.
+ */
+
+#if HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <rtems/rtems/semimpl.h>
+#include <rtems/rtems/statusimpl.h>
+
+rtems_status_code rtems_semaphore_set_processor(
+  rtems_id id,
+  int      cpu
+)
+{
+  Semaphore_Control   *the_semaphore;
+  Thread_queue_Context queue_context;
+  ISR_lock_Context     lock_context;
+  Status_Control       status;
+  Semaphore_Variant     variant;
+
+  the_semaphore = _Semaphore_Get( id, &queue_context );
+
+  if ( the_semaphore == NULL ) {
+#if defined(RTEMS_MULTIPROCESSING)
+    return _Semaphore_MP_Release( id );
+#else
+    return RTEMS_INVALID_ID;
+#endif
+  }
+
+  _Thread_queue_Context_set_MP_callout(
+    &queue_context,
+    _Semaphore_Core_mutex_mp_support
+  );
+  switch ( variant ) {
+    case SEMAPHORE_VARIANT_MUTEX_INHERIT_PRIORITY:
+      status =  RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_MUTEX_PRIORITY_CEILING:
+      status = RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_MUTEX_NO_PROTOCOL:
+      status = RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_SIMPLE_BINARY:
+      status = RTEMS_NOT_DEFINED;
+      break;
+#if defined(RTEMS_SMP)
+    case SEMAPHORE_VARIANT_MRSP:
+      status = RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_DPCP:
+     _DPCP_Set_CPU(
+       &the_semaphore->Core_control.DPCP,
+       _Per_CPU_Get_by_index(cpu),
+       &queue_context
+     );
+     status = STATUS_SUCCESSFUL;
+     break;
+    case SEMAPHORE_VARIANT_FMLPS:
+      status = RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_FMLPL:
+      status = RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_DFLPL:
+      _DFLPL_Set_CPU(
+        &the_semaphore->Core_control.DFLPL,
+	_Per_CPU_Get_by_index(cpu),
+	&queue_context
+      );
+      status = STATUS_SUCCESSFUL;
+      break;
+    case SEMAPHORE_VARIANT_HDGA:
+      status = RTEMS_NOT_DEFINED;
+      break;
+#endif
+    default:
+      _Assert( variant == SEMAPHORE_VARIANT_COUNTING );
+      status = RTEMS_NOT_DEFINED;
+      break;
+  }
+
+  return _Status_Get( status );
+}
diff -Naur original/cpukit/rtems/src/semticket.c modified/cpukit/rtems/src/semticket.c
--- original/cpukit/rtems/src/semticket.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/cpukit/rtems/src/semticket.c	2023-02-10 16:50:18.951218000 +0100
@@ -0,0 +1,113 @@
+/**
+ * @file
+ *
+ * @brief RTEMS Semaphore Release
+ * @ingroup ClassicSem Semaphores
+ *
+ * This file contains the implementation of the Classic API directive
+ * rtems_semaphore_release().
+ */
+
+/*
+ *  COPYRIGHT (c) 1989-2014.
+ *  On-Line Applications Research Corporation (OAR).
+ *
+ *  The license and distribution terms for this file may be
+ *  found in the file LICENSE in this distribution or at
+ *  http://www.rtems.org/license/LICENSE.
+ */
+
+#if HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <rtems/rtems/semimpl.h>
+#include <rtems/rtems/statusimpl.h>
+
+rtems_status_code rtems_semaphore_ticket( rtems_id id, rtems_id tid, int position )
+{
+  Semaphore_Control    *the_semaphore;
+  Thread_queue_Context  queue_context;
+  ISR_lock_Context      lock_context;
+  Thread_Control       *executing;
+  Status_Control        status;
+  uintptr_t             flags;
+  Semaphore_Variant     variant;
+
+  executing = _Thread_Get( tid, &lock_context );
+ // executing = _Thread_Executing;
+  _ISR_lock_ISR_enable( &lock_context );
+
+  the_semaphore = _Semaphore_Get( id, &queue_context );
+
+  if ( the_semaphore == NULL ) {
+#if defined(RTEMS_MULTIPROCESSING)
+    return _Semaphore_MP_Release( id );
+#else
+    return RTEMS_INVALID_ID;
+#endif
+  }
+
+  if ( executing == NULL ) {
+    return RTEMS_INVALID_ID;
+  }
+
+  _Thread_queue_Context_set_MP_callout(
+    &queue_context,
+    _Semaphore_Core_mutex_mp_support
+  );
+  flags = _Semaphore_Get_flags( the_semaphore );
+    variant = _Semaphore_Get_variant( flags );
+
+  switch ( variant ) {
+    case SEMAPHORE_VARIANT_MUTEX_INHERIT_PRIORITY:
+      status =  RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_MUTEX_PRIORITY_CEILING:
+      status = RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_MUTEX_NO_PROTOCOL:
+      status = RTEMS_NOT_DEFINED;
+      break;
+    case SEMAPHORE_VARIANT_SIMPLE_BINARY:
+      status = RTEMS_NOT_DEFINED;
+      break;
+#if defined(RTEMS_SMP)
+    case SEMAPHORE_VARIANT_MRSP:
+      status = RTEMS_NOT_DEFINED;
+      break;
+
+    case SEMAPHORE_VARIANT_DPCP:
+      status = RTEMS_NOT_DEFINED;
+      break;
+
+    case SEMAPHORE_VARIANT_FMLPS:
+      status = RTEMS_NOT_DEFINED;
+      break;
+
+    case SEMAPHORE_VARIANT_FMLPL:
+      status = RTEMS_NOT_DEFINED;
+      break;
+
+    case SEMAPHORE_VARIANT_DFLPL:
+      status = RTEMS_NOT_DEFINED;
+      break;
+
+    case SEMAPHORE_VARIANT_HDGA:
+      status = _HDGA_Set_thread(
+		 &the_semaphore->Core_control.HDGA,
+		 executing,
+		 &queue_context,
+		 position
+	       );
+      break;
+#endif
+
+    default:
+      _Assert( variant == SEMAPHORE_VARIANT_COUNTING );
+      status = RTEMS_NOT_DEFINED;
+      break;
+  }
+
+  return _Status_Get( status );
+}
diff -Naur original/cpukit/score/src/threadinitialize.c modified/cpukit/score/src/threadinitialize.c
--- original/cpukit/score/src/threadinitialize.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/score/src/threadinitialize.c	2022-11-11 16:52:30.000000000 +0100
@@ -210,6 +210,9 @@
     &the_thread->Real_priority
   );
 
+  /*the_thread->ticket.owner = the_thread;
+  the_thread->ticket.ticket = 0;*/
+
 #if defined(RTEMS_SMP)
   RTEMS_STATIC_ASSERT( THREAD_SCHEDULER_BLOCKED == 0, Scheduler_state );
   the_thread->Scheduler.home_scheduler = config->scheduler;
diff -Naur original/cpukit/score/src/threadqenqueue.c modified/cpukit/score/src/threadqenqueue.c
--- original/cpukit/score/src/threadqenqueue.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/score/src/threadqenqueue.c	2022-11-11 16:52:30.000000000 +0100
@@ -26,6 +26,7 @@
 #include <rtems/score/threaddispatch.h>
 #include <rtems/score/threadimpl.h>
 #include <rtems/score/status.h>
+#include <rtems/score/schedulerimpl.h>
 #include <rtems/score/watchdogimpl.h>
 
 #define THREAD_QUEUE_INTEND_TO_BLOCK \
@@ -452,6 +453,143 @@
   _Thread_Dispatch_direct( cpu_self );
 }
 
+void _Thread_queue_Enqueue2(
+  Thread_queue_Queue            *queue,
+  const Thread_queue_Operations *operations,
+  Thread_Control                *the_thread,
+  Thread_queue_Context          *queue_context,
+  Per_CPU_Control *cpu
+)
+{
+  Per_CPU_Control *cpu_self;
+  bool             success;
+
+  cpu_self = cpu;
+  _Assert( queue_context->enqueue_callout != NULL );
+
+#if defined(RTEMS_MULTIPROCESSING)
+  if ( _Thread_MP_Is_receive( the_thread ) && the_thread->receive_packet ) {
+    the_thread = _Thread_MP_Allocate_proxy( queue_context->thread_state );
+  }
+#endif
+
+  _Thread_Wait_claim( the_thread, queue );
+
+  if ( !_Thread_queue_Path_acquire_critical( queue, the_thread, queue_context ) ) {
+    _Thread_queue_Path_release_critical( queue_context );
+    _Thread_Wait_restore_default( the_thread );
+    _Thread_queue_Queue_release( queue, &queue_context->Lock_context.Lock_context );
+    _Thread_Wait_tranquilize( the_thread );
+    _Assert( queue_context->deadlock_callout != NULL );
+    ( *queue_context->deadlock_callout )( the_thread );
+    _Thread_Dispatch_enable( cpu_self );
+    return;
+  }
+
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_claim_finalize( the_thread, operations );
+  ( *operations->enqueue )( queue, the_thread, queue_context );
+
+  _Thread_queue_Path_release_critical( queue_context );
+
+  the_thread->Wait.return_code = STATUS_SUCCESSFUL;
+  _Thread_Wait_flags_set( the_thread, THREAD_QUEUE_INTEND_TO_BLOCK );
+  //cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _Thread_queue_Queue_release( queue, &queue_context->Lock_context.Lock_context );
+
+  ( *queue_context->enqueue_callout )(
+    queue,
+    the_thread,
+    cpu_self,
+    queue_context
+  );
+
+  /*
+   *  Set the blocking state for this thread queue in the thread.
+   */
+  _Thread_Set_state( the_thread, queue_context->thread_state );
+
+  /*
+   * At this point thread dispatching is disabled, however, we already released
+   * the thread queue lock.  Thus, interrupts or threads on other processors
+   * may already changed our state with respect to the thread queue object.
+   * The request could be satisfied or timed out.  This situation is indicated
+   * by the thread wait flags.  Other parties must not modify our thread state
+   * as long as we are in the THREAD_QUEUE_INTEND_TO_BLOCK thread wait state,
+   * thus we have to cancel the blocking operation ourself if necessary.
+   */
+  success = _Thread_Wait_flags_try_change_acquire(
+    the_thread,
+    THREAD_QUEUE_INTEND_TO_BLOCK,
+    THREAD_QUEUE_BLOCKED
+  );
+  if ( !success ) {
+    _Thread_Remove_timer_and_unblock( the_thread, queue );
+  }
+
+  _Thread_Priority_update( queue_context );
+  _Thread_Dispatch_direct( cpu_self );
+}
+
+void _Thread_queue_Enqueue_busy(
+  Thread_queue_Queue            *queue,
+  const Thread_queue_Operations *operations,
+ Thread_Control                *the_thread,
+  Thread_queue_Context          *queue_context
+)
+{
+  Per_CPU_Control *cpu_self;
+
+  _Assert( queue_context->enqueue_callout != NULL );
+
+#if defined(RTEMS_MULTIPROCESSING)
+  if ( _Thread_MP_Is_receive( the_thread ) && the_thread->receive_packet ) {
+    the_thread = _Thread_MP_Allocate_proxy( queue_context->thread_state );
+  }
+#endif
+
+  _Thread_Wait_claim( the_thread, queue );
+
+  if ( !_Thread_queue_Path_acquire_critical( queue, the_thread, queue_context ) ) {
+    _Thread_queue_Path_release_critical( queue_context );
+    _Thread_Wait_restore_default( the_thread );
+    _Thread_queue_Queue_release( queue, &queue_context->Lock_context.Lock_context );
+    _Thread_Wait_tranquilize( the_thread );
+    _Assert( queue_context->deadlock_callout != NULL );
+    ( *queue_context->deadlock_callout )( the_thread );
+    return;
+  }
+
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_claim_finalize( the_thread, operations );
+  ( *operations->enqueue )( queue, the_thread, queue_context );
+
+  _Thread_queue_Path_release_critical( queue_context );
+
+  the_thread->Wait.return_code = STATUS_SUCCESSFUL;
+  _Thread_Wait_flags_set( the_thread, THREAD_QUEUE_INTEND_TO_BLOCK );
+  //cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _Thread_queue_Queue_release( queue, &queue_context->Lock_context.Lock_context );
+
+  ( *queue_context->enqueue_callout )(
+    queue,
+    the_thread,
+    cpu_self,
+    queue_context
+  );
+
+  while (
+     _Thread_Wait_flags_get_acquire( the_thread ) == THREAD_QUEUE_INTEND_TO_BLOCK
+   ) {
+     /* Wait */
+   }
+
+
+  _Thread_Timer_remove( the_thread );
+  _Thread_Dispatch_direct( cpu_self );
+}
+
+
 #if defined(RTEMS_SMP)
 Status_Control _Thread_queue_Enqueue_sticky(
   Thread_queue_Queue            *queue,
@@ -515,6 +653,70 @@
 }
 #endif
 
+#if defined(RTEMS_SMP)
+Status_Control _Thread_queue_Enqueue_sticky_no_update(
+  Thread_queue_Queue            *queue,
+  const Thread_queue_Operations *operations,
+  Thread_Control                *the_thread,
+  Thread_queue_Context          *queue_context
+)
+{
+  Per_CPU_Control *cpu_self;
+
+  _Assert( queue_context->enqueue_callout != NULL );
+
+  _Thread_Wait_claim( the_thread, queue );
+
+  if ( !_Thread_queue_Path_acquire_critical( queue, the_thread, queue_context ) ) {
+    _Thread_queue_Path_release_critical( queue_context );
+    _Thread_Wait_restore_default( the_thread );
+    _Thread_queue_Queue_release( queue, &queue_context->Lock_context.Lock_context );
+    _Thread_Wait_tranquilize( the_thread );
+    ( *queue_context->deadlock_callout )( the_thread );
+    return _Thread_Wait_get_status( the_thread );
+  }
+
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  _Thread_Wait_claim_finalize( the_thread, operations );
+  ( *operations->enqueue )( queue, the_thread, queue_context );
+
+  _Thread_queue_Path_release_critical( queue_context );
+
+  the_thread->Wait.return_code = STATUS_SUCCESSFUL;
+  _Thread_Wait_flags_set( the_thread, THREAD_QUEUE_INTEND_TO_BLOCK );
+  cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _Thread_queue_Queue_release( queue, &queue_context->Lock_context.Lock_context );
+
+  if ( cpu_self->thread_dispatch_disable_level != 1 ) {
+    _Internal_error(
+      INTERNAL_ERROR_THREAD_QUEUE_ENQUEUE_STICKY_FROM_BAD_STATE
+    );
+  }
+
+  ( *queue_context->enqueue_callout )(
+    queue,
+    the_thread,
+    cpu_self,
+    queue_context
+  );
+
+  //_Thread_Priority_update( queue_context );
+  //_Thread_Priority_and_sticky_update( the_thread, 1 );
+  _Thread_Dispatch_enable( cpu_self );
+
+  while (
+    _Thread_Wait_flags_get_acquire( the_thread ) == THREAD_QUEUE_INTEND_TO_BLOCK
+  ) {
+    /* Wait */
+  }
+
+  _Thread_Wait_tranquilize( the_thread );
+  _Thread_Timer_remove( the_thread );
+  return _Thread_Wait_get_status( the_thread );
+}
+#endif
+
+
 #if defined(RTEMS_MULTIPROCESSING)
 static bool _Thread_queue_MP_set_callout(
   Thread_Control             *the_thread,
@@ -704,6 +906,60 @@
   _Thread_Dispatch_enable( cpu_self );
 }
 
+void _Thread_queue_Surrender_and_Migrate(
+  Thread_queue_Queue            *queue,
+  Thread_queue_Heads            *heads,
+  Thread_Control                *previous_owner,
+  Thread_queue_Context          *queue_context,
+  const Thread_queue_Operations *operations,
+  Per_CPU_Control *cpu,
+  Priority_Node *priority
+)
+{
+  Thread_Control  *new_owner;
+  bool             unblock;
+  Per_CPU_Control *cpu_self;
+  ISR_lock_Context lock_context;
+
+  _Assert( heads != NULL );
+
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  new_owner = ( *operations->surrender )(
+    queue,
+    heads,
+    previous_owner,
+    queue_context
+  );
+  queue->owner = new_owner;
+
+#if defined(RTEMS_MULTIPROCESSING)
+  if ( !_Thread_queue_MP_set_callout( new_owner, queue_context ) )
+#endif
+  {
+    _Thread_Resource_count_increment( new_owner );
+  }
+
+  unblock = _Thread_queue_Make_ready_again( new_owner );
+
+  //cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _Thread_queue_Queue_release(
+    queue,
+    &queue_context->Lock_context.Lock_context
+  );
+
+  //_Thread_Priority_update( queue_context );
+
+  if ( unblock ) {
+    _Thread_Remove_timer_and_unblock( new_owner, queue );
+  }
+  _Thread_Wait_acquire_default_critical( new_owner, &lock_context );
+  _Scheduler_Migrate_To(new_owner, cpu, priority);
+
+  _Thread_Wait_release_default_critical( new_owner, &lock_context );
+
+  //_Thread_Dispatch_enable( cpu_self );
+}
+
 #if defined(RTEMS_SMP)
 void _Thread_queue_Surrender_sticky(
   Thread_queue_Queue            *queue,
@@ -715,7 +971,45 @@
 {
   Thread_Control  *new_owner;
   Per_CPU_Control *cpu_self;
+  _Assert( heads != NULL );
 
+  _Thread_queue_Context_clear_priority_updates( queue_context );
+  new_owner = ( *operations->surrender )(
+    queue,
+    heads,
+    previous_owner,
+    queue_context
+  );
+  queue->owner = new_owner;
+  _Thread_queue_Make_ready_again( new_owner );
+
+  cpu_self = _Thread_queue_Dispatch_disable( queue_context );
+  _Thread_queue_Queue_release(
+    queue,
+    &queue_context->Lock_context.Lock_context
+  );
+  _Thread_Priority_and_sticky_update( previous_owner, -1 );
+  _Thread_Priority_and_sticky_update( new_owner, 0 );
+
+  _Thread_Dispatch_enable( cpu_self );
+}
+#endif
+
+#if defined(RTEMS_SMP)
+void _Thread_queue_Surrender_sticky_and_migrate(
+  Thread_queue_Queue            *queue,
+  Thread_queue_Heads            *heads,
+  Thread_Control                *previous_owner,
+  Thread_queue_Context          *queue_context,
+  const Thread_queue_Operations *operations,
+  Per_CPU_Control *cpu,
+  Priority_Node *priority
+)
+{
+  Thread_Control  *new_owner;
+  Per_CPU_Control *cpu_self;
+  ISR_lock_Context lock_context;
+  
   _Assert( heads != NULL );
 
   _Thread_queue_Context_clear_priority_updates( queue_context );
@@ -733,6 +1027,11 @@
     queue,
     &queue_context->Lock_context.Lock_context
   );
+  
+  _Thread_Wait_acquire_default_critical( new_owner, &lock_context );
+  _Scheduler_Migrate_To(new_owner, cpu, priority);
+  _Thread_Wait_release_default_critical( new_owner, &lock_context );
+
   _Thread_Priority_and_sticky_update( previous_owner, -1 );
   _Thread_Priority_and_sticky_update( new_owner, 0 );
   _Thread_Dispatch_enable( cpu_self );
diff -Naur original/cpukit/score/src/threadqops.c modified/cpukit/score/src/threadqops.c
--- original/cpukit/score/src/threadqops.c	2020-08-22 09:30:12.000000000 +0200
+++ modified/cpukit/score/src/threadqops.c	2023-02-10 16:52:32.778191000 +0100
@@ -21,6 +21,7 @@
 #include <rtems/score/chainimpl.h>
 #include <rtems/score/rbtreeimpl.h>
 #include <rtems/score/schedulerimpl.h>
+#include <rtems/score/rbtree.h>
 
 #define THREAD_QUEUE_CONTEXT_OF_PRIORITY_ACTIONS( priority_actions ) \
   RTEMS_CONTAINER_OF( \
@@ -1448,6 +1449,108 @@
   return first;
 }
 
+static void _Thread_queue_TICKET_do_initialize(
+  Thread_queue_Queue   *queue,
+  Thread_Control       *executing,
+  Thread_queue_Context *queue_context,
+  Thread_queue_Heads   *heads
+)
+{
+  _Ticket_Initialize_one(&heads->Heads.Tree, &executing->ticket);
+}
+
+static void _Thread_queue_TICKET_do_enqueue(
+  Thread_queue_Queue   *queue,
+  Thread_Control       *the_thread,
+  Thread_queue_Context *queue_context,
+  Thread_queue_Heads   *heads
+)
+{
+  _Ticket_Plain_insert(
+    &heads->Heads.Tree,
+    &the_thread->ticket,
+    the_thread->ticket.ticket
+  );
+}
+
+static void _Thread_queue_TICKET_do_extract(
+  Thread_queue_Queue   *queue,
+  Thread_queue_Heads   *heads,
+  Thread_Control       *current_or_previous_owner,
+  Thread_queue_Context *queue_context,
+  Thread_Control       *the_thread
+)
+{
+
+  _Ticket_Plain_extract(
+    &heads->Heads.Tree,
+    &the_thread->ticket
+  );
+}
+
+static void _Thread_queue_TICKET_enqueue(
+  Thread_queue_Queue   *queue,
+  Thread_Control       *the_thread,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Queue_enqueue(
+    queue,
+    the_thread,
+    queue_context,
+    _Thread_queue_TICKET_do_initialize,
+    _Thread_queue_TICKET_do_enqueue
+  );
+}
+
+static void _Thread_queue_TICKET_extract(
+  Thread_queue_Queue   *queue,
+  Thread_Control       *the_thread,
+  Thread_queue_Context *queue_context
+)
+{
+  _Thread_queue_Queue_extract(
+    queue,
+    queue->heads,
+    NULL,
+    queue_context,
+    the_thread,
+    _Thread_queue_TICKET_do_extract
+  );
+}
+
+static Thread_Control *_Thread_queue_TICKET_first(
+  Thread_queue_Heads *heads
+)
+{
+  Ticket_Node *first;
+  first = TICKET_NODE_OF_NODE( _Ticket_Get_minimum_node( &heads->Heads.Tree ) );
+  return _Ticket_Get_owner(first);
+
+}
+
+static Thread_Control *_Thread_queue_TICKET_surrender(
+  Thread_queue_Queue   *queue,
+  Thread_queue_Heads   *heads,
+  Thread_Control       *previous_owner,
+  Thread_queue_Context *queue_context
+)
+{
+  Thread_Control *first;
+
+  first = _Thread_queue_TICKET_first( heads );
+  _Thread_queue_Queue_extract(
+    queue,
+    heads,
+    NULL,
+    queue_context,
+    first,
+    _Thread_queue_TICKET_do_extract
+  );
+
+  return first;
+}
+
 const Thread_queue_Operations _Thread_queue_Operations_default = {
   .priority_actions = _Thread_queue_Do_nothing_priority_actions,
   .extract = _Thread_queue_Do_nothing_extract
@@ -1458,6 +1562,14 @@
    */
 };
 
+const Thread_queue_Operations _Thread_queue_Operations_FIFO_PIP = {
+  .priority_actions = _Thread_queue_Priority_inherit_priority_actions,
+  .enqueue = _Thread_queue_FIFO_enqueue,
+  .extract = _Thread_queue_FIFO_extract,
+ .surrender = _Thread_queue_FIFO_surrender,
+  .first = _Thread_queue_FIFO_first
+};
+
 const Thread_queue_Operations _Thread_queue_Operations_FIFO = {
   .priority_actions = _Thread_queue_Do_nothing_priority_actions,
   .enqueue = _Thread_queue_FIFO_enqueue,
@@ -1481,3 +1593,11 @@
   .surrender = _Thread_queue_Priority_inherit_surrender,
   .first = _Thread_queue_Priority_first
 };
+
+const Thread_queue_Operations _Thread_queue_Operations_TICKET = {
+  .priority_actions = _Thread_queue_Do_nothing_priority_actions,
+  .enqueue = _Thread_queue_TICKET_enqueue,
+  .extract = _Thread_queue_TICKET_extract,
+ .surrender = _Thread_queue_TICKET_surrender,
+  .first = _Thread_queue_TICKET_first
+};
diff -Naur original/testsuites/smptests/configure modified/testsuites/smptests/configure
--- original/testsuites/smptests/configure	2020-08-26 00:22:32.000000000 +0200
+++ modified/testsuites/smptests/configure	2023-01-31 19:24:06.187741000 +0100
@@ -687,6 +687,24 @@
 TEST_FLAGS_smpmulticast01
 TEST_smpmulticast01_FALSE
 TEST_smpmulticast01_TRUE
+TEST_FLAGS_overhead
+TEST_overhead_FALSE
+TEST_overhead_TRUE
+TEST_FLAGS_hdga01
+TEST_hdga01_FALSE
+TEST_hdga01_TRUE
+TEST_FLAGS_fmlp01
+TEST_fmlp01_FALSE
+TEST_fmlp01_TRUE
+TEST_FLAGS_mpcp01
+TEST_mpcp01_FALSE
+TEST_mpcp01_TRUE
+TEST_FLAGS_dpcp02
+TEST_dpcp02_FALSE
+TEST_dpcp02_TRUE
+TEST_FLAGS_dpcp01
+TEST_dpcp01_FALSE
+TEST_dpcp01_TRUE
 TEST_FLAGS_smpmrsp01
 TEST_smpmrsp01_FALSE
 TEST_smpmrsp01_TRUE
diff -Naur original/testsuites/smptests/configure.ac modified/testsuites/smptests/configure.ac
--- original/testsuites/smptests/configure.ac	2020-08-22 09:30:12.000000000 +0200
+++ modified/testsuites/smptests/configure.ac	2022-11-11 16:52:30.000000000 +0100
@@ -60,6 +60,12 @@
 RTEMS_TEST_CHECK([smpmigration01])
 RTEMS_TEST_CHECK([smpmigration02])
 RTEMS_TEST_CHECK([smpmrsp01])
+RTEMS_TEST_CHECK([dpcp01])
+RTEMS_TEST_CHECK([dpcp02])
+RTEMS_TEST_CHECK([mpcp01])
+RTEMS_TEST_CHECK([fmlp01])
+RTEMS_TEST_CHECK([hdga01])
+RTEMS_TEST_CHECK([overhead])
 RTEMS_TEST_CHECK([smpmulticast01])
 RTEMS_TEST_CHECK([smpmutex01])
 RTEMS_TEST_CHECK([smpmutex02])
diff -Naur original/testsuites/smptests/dpcp01/dpcp01.doc modified/testsuites/smptests/dpcp01/dpcp01.doc
--- original/testsuites/smptests/dpcp01/dpcp01.doc	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/dpcp01/dpcp01.doc	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,54 @@
+﻿This file describes the directives and concepts tested by this test set.
+
+test set name: overhead
+
+directives:
+
+  - DPCP functions (unlock/lock)
+
+concepts:
+ This test is a short test, to test how the programm is going to behave if there are two DPCP semaphores with different ceiling priority migrating 
+ on the same synchronization cpu. CPU#0 is the application processor and CPU#1 the synchronization processor.
+ Priority order of the tasks at the beginning migr2 > migr1 > task2 > task1
+ priority ceiling of the semaphores sid1 > sid2
+ 
+ migr2, task2 obtains sid2 semaphore
+ migr1 obtains sid1 semaphore
+ task2 can only finish its critical section after the execution of migr1 and migr2  
+ 
+ 
+ Executing order of the tasks:
+      CPU#0         CPU#1
+ 1    migr2           -
+ 2    migr1         migr2
+ 3    task2         migr1    (task2 can't obtain the semaphore since migr2 
+                               owns it, so it has to wait for migr2 to release it. migr has to wait for
+                              migr1 to finish the execution so it can continue on the synchronization processor)
+ 4    task1         migr1
+ 5    migr1         migr2
+ 6    task1         migr2
+ 7    migr2         task2
+ 8    task1         task2
+ 9    task2          -
+ 10   task1         task2   //testing if I can obtain the same semaphore multiple times
+ 11   task2          -  
+ 12   task1
+ 
+  TEST OUTPUT:
+
+  migr2 START
+  migr2: Obtaining semaphore: sid2
+  migr1 START
+  migr1: Obtaining semaphore: sid1  //Preempting sid2 execution on sync cpu
+  task2 START                       //task2 can start now, since migr1 and migr2 on sync cpu  
+  task2: Obtaining semaphore: sid2  //tries to obtain, but can't since already owned by migr2 (gets suspended)
+  migr1: Releasing semaphore: sid1  //finishing execution of sid1, migr2 can continue on sync cpu  
+  migr1 END
+  migr2: Releasing semaphore: sid2  //finished execution of sid2, now task2 can obtain the semaphore and start executing 
+  migr2 END
+  task2: Releasing semaphore: sid2   
+  task2: Obtaining semaphore: sid2  //obtains the semaphore a second time 
+  task2: Releasing semaphore: sid2 
+  task2 END
+
+
diff -Naur original/testsuites/smptests/dpcp01/init.c modified/testsuites/smptests/dpcp01/init.c
--- original/testsuites/smptests/dpcp01/init.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/dpcp01/init.c	2023-02-10 21:09:08.216409000 +0100
@@ -0,0 +1,247 @@
+#define CONFIGURE_INIT
+#define CONFIGURE_MAXIMUM_USER_EXTENSIONS 1
+#include "system.h"
+#include "stdio.h"
+#include <assert.h>
+
+#include "tmacros.h"
+
+const char rtems_test_name[] = "DPCP 1";
+
+rtems_id sid1;  // Semaphore ID
+rtems_id sid2;  // Semaphore ID
+rtems_id task1; // ID of Task1
+rtems_id task2; // ID of Task2
+rtems_id migr1; // ID of Migration Task
+rtems_id migr2; // ID of Migration Task
+rtems_status_code rsc; //tmp variable for status code
+rtems_id scheds[2]; //scheduler ids
+rtems_id schid;
+
+rtems_task task1_entry( rtems_task_argument argument );
+rtems_task task2_entry( rtems_task_argument argument );
+rtems_task migr1_entry( rtems_task_argument argument );
+rtems_task migr2_entry( rtems_task_argument argument );
+
+void print_name( rtems_id id );
+void init_sched();
+void init_sched(
+)
+{
+  uint32_t cpu_index;
+  printf( "PROCESSOR COUNT: %d\n",rtems_scheduler_get_processor_maximum() );
+  for ( cpu_index = 0; cpu_index < 2; cpu_index++ ) {
+    rsc = rtems_scheduler_ident_by_processor(cpu_index, &scheds[cpu_index]);
+    printf( "Processor %d  creation : %s\n", cpu_index, rtems_status_text( rsc ) );
+  }
+}
+
+rtems_task init(
+rtems_task_argument argument
+)
+{
+  rtems_id sh;
+  TEST_BEGIN();
+  printf( "TEST START:\n" );
+  /* Getting the scheduler instance ids of the processors */
+  init_sched();
+
+  /* Normal Task: */
+  rsc = rtems_task_create(
+    rtems_build_name('T', 'A', 'S', '1'),
+    2,
+    RTEMS_MINIMUM_STACK_SIZE, 
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &task1
+  );
+
+  printf( "Create normal task: %s\n", rtems_status_text( rsc ) );
+  
+  rsc = rtems_task_create(rtems_build_name( 'T', 'A', 'S', '2' ), 
+    69,
+    RTEMS_MINIMUM_STACK_SIZE,
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &task2
+  );
+
+  /* This task migrates too, but only after migr2 migr1 are done, with their execution: */
+  printf( "Create normal task2: %s\n", rtems_status_text( rsc ) );
+  
+  /* Create the task that migrates: */
+  rsc = rtems_task_create(
+    rtems_build_name('M', 'I', 'G', 'R'),
+    1,
+    RTEMS_MINIMUM_STACK_SIZE,
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &migr1
+  );
+    
+  /* Create the task that migrates: */
+  rsc = rtems_task_create(
+    rtems_build_name( 'M', 'I', 'G', 'S' ), 
+    8,
+    RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &migr2
+  );
+
+  printf( "Create migration task: %s\n", rtems_status_text( rsc ) );
+  /* Create the DPCP Semaphore */
+
+  rsc = rtems_semaphore_create(
+    rtems_build_name( 'D', 'P', 'C', 'P' ),
+    1,
+    (RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_PRIORITY_CEILING | RTEMS_GLOBAL), 
+    1,
+    &sid1
+  );
+  printf( "Create DPCP Semaphore: %s\n", rtems_status_text( rsc ) );
+  
+  rsc = rtems_semaphore_create(
+    rtems_build_name( 'D', 'P', 'C', 'Q' ), 
+    1,
+    (RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_PRIORITY_CEILING | RTEMS_GLOBAL), 
+    7, 
+    &sid2
+  );
+  printf( "Create DPCP Semaphore: %s\n", rtems_status_text( rsc ) );
+  
+  /*migr and task1 on p1*/
+  rtems_task_set_scheduler( task1, scheds[0], 69 );
+  rtems_task_set_scheduler( migr1, scheds[0], 12 );
+  rtems_task_set_scheduler( task2, scheds[0], 42 );
+  rtems_task_set_scheduler( migr2, scheds[0], 8 );
+  
+  rtems_task_start( task2, task2_entry, 0);
+  rtems_task_start( migr2, migr2_entry, 0);
+  rtems_task_start( task1, task1_entry, 0);  
+  rtems_task_start( migr1, migr1_entry, 0);
+  
+  printf( "INIT COMPLETE\n" );
+  rsc = rtems_task_delete( RTEMS_SELF );    /* should not return */
+  
+  TEST_END();
+  rtems_test_exit(0);
+}
+
+/*task1 task*/
+rtems_task task1_entry(
+rtems_task_argument argument
+)
+{  
+  while ( 1 ) {
+    for ( int j = 0; j < 20; j++ ) {
+      for ( int i = 0; i < 20000000; i++ ) {
+        asm volatile ("nop"::);
+      }
+    }
+  }
+  rtems_task_delete( RTEMS_SELF );
+}
+
+/*task2 task*/
+rtems_task task2_entry(
+rtems_task_argument argument
+)
+{
+  printf("task2 START\n");  
+  
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf( "task2: Obtaining semaphore: sid2\n" );		
+  rsc = rtems_semaphore_obtain( sid2, RTEMS_WAIT, RTEMS_NO_TIMEOUT );                     
+
+  for( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile ("nop"::);
+    }
+  }
+
+  rsc = rtems_semaphore_release( sid2 ); 
+  printf("task2: Releasing semaphore: sid2 \n");
+  
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf("task2: Obtaining semaphore: sid2\n");				
+  rsc = rtems_semaphore_obtain(sid2, RTEMS_WAIT, RTEMS_NO_TIMEOUT);                     
+
+  for( int j = 0; j < 20; j++) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+
+  rsc = rtems_semaphore_release( sid2 ); 
+  printf( "task2: Releasing semaphore: sid2 \n" );
+  printf( "task2 END\n" );  
+
+  rsc = rtems_semaphore_delete(sid1);
+  	  rtems_test_assert(rsc == RTEMS_SUCCESSFUL);
+  	rsc = rtems_semaphore_delete(sid2);
+  	  	  rtems_test_assert(rsc == RTEMS_SUCCESSFUL);
+  	  TEST_END();
+  	  rtems_test_exit(0);
+  	rtems_task_delete( RTEMS_SELF );
+}
+
+/*migr task*/
+rtems_task migr1_entry(
+rtems_task_argument argument
+)
+{
+  printf( "migr1 START\n" );
+  printf( "migr1 current processor before obtaining semaphore sid1: %d\n", rtems_scheduler_get_processor() );
+  printf( "migr1: Obtaining semaphore: sid1\n" );					/*obtaining the DPCP sempahore, migrating to p2*/
+  rtems_semaphore_obtain( sid1, RTEMS_WAIT, RTEMS_NO_TIMEOUT );                     
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+  printf( "migr1 current processor after obtaining semaphore sid1: %d\n", rtems_scheduler_get_processor() );
+  /*releasing the DPCP semphore, migrating back to p1*/
+  rtems_semaphore_release( sid1 );                     
+  printf( "migr1: Releasing semaphore: sid1 \n" );
+  printf( "migr1 current processor after releasing semaphore sid1: %d\n",rtems_scheduler_get_processor() );
+  printf( "migr1 END\n" );
+  rtems_task_delete( RTEMS_SELF );
+}
+
+/*migr task*/
+rtems_task migr2_entry(
+rtems_task_argument argument
+)
+{
+  printf( "migr2 START\n" );
+  printf( "migr2 current processor before obtaining semaphore sid2: %d\n", rtems_scheduler_get_processor() );
+  
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf("migr2: Obtaining semaphore: sid2\n");					
+  rsc = rtems_semaphore_obtain(sid2, RTEMS_WAIT, RTEMS_NO_TIMEOUT);                     
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+  printf( "migr2 current processor after obtaining semaphore sid2: %d\n", rtems_scheduler_get_processor() );
+  /*releasing the DPCP semphore, migrating back to p1*/
+  rsc = rtems_semaphore_release( sid2 );                         
+  printf( "migr2: Releasing semaphore: sid2 \n" );
+  printf( "migr2 current processor after releasing semaphore sid2: %d\n",rtems_scheduler_get_processor() );
+  printf( "migr2 END\n");
+  rtems_task_delete(RTEMS_SELF);
+}
+
+void print_name(
+  rtems_id id
+)
+{
+  char  buffer[10];   /* name assumed to be 10 characters or less */
+  char *result;
+  result = rtems_object_get_name( id, sizeof(buffer), buffer );
+  printk( "ID=0x%08x name=%s\n", id, ((result) ? result : "no name") );
+}
+
diff -Naur original/testsuites/smptests/dpcp01/system.h modified/testsuites/smptests/dpcp01/system.h
--- original/testsuites/smptests/dpcp01/system.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/dpcp01/system.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,46 @@
+#ifndef SYSTEM_H_
+#define SYSTEM_H_
+
+#include <bsp.h> /* for device driver prototypes */
+#define CONFIGURE_APPLICATION_NEEDS_CLOCK_DRIVER
+#define CONFIGURE_APPLICATION_NEEDS_CONSOLE_DRIVER
+#define CONFIGURE_MAXIMUM_TASKS 10
+#define CONFIGURE_MAXIMUM_PROCESSORS 2 
+#define CONFIGURE_MAXIMUM_PRIORITY 255
+#define CONFIGURE_INIT_TASK_NAME rtems_build_name( 'I', 'N', 'I', 'T' )
+#define CONFIGURE_MAXIMUM_SEMAPHORES        2 
+#define CONFIGURE_RTEMS_INIT_TASKS_TABLE
+#define CONFIGURE_INIT
+#define CONFIGURE_EXTRA_TASK_STACKS         (3 * RTEMS_MINIMUM_STACK_SIZE)
+#define CONFIGURE_INIT_TASK_PRIORITY 2
+rtems_task init(rtems_task_argument argument);
+#define CONFIGURE_INIT_TASK_ENTRY_POINT init
+
+/* Configuration Step 1 - Scheduler Algorithms */
+#define CONFIGURE_SCHEDULER_PRIORITY_SMP
+#include <rtems/scheduler.h>
+
+/* Configuration Step 2 - Schedulers */
+RTEMS_SCHEDULER_PRIORITY_SMP(app, CONFIGURE_MAXIMUM_PRIORITY + 1);
+RTEMS_SCHEDULER_PRIORITY_SMP(sync, CONFIGURE_MAXIMUM_PRIORITY + 1);
+
+/* Configuration Step 3 - Scheduler Table */
+#define CONFIGURE_SCHEDULER_TABLE_ENTRIES \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    app, \
+     rtems_build_name('A', 'P', 'P', ' ')\
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sync, \
+    rtems_build_name('S', 'Y', 'N', 'C') \
+  )
+
+/* Configuration Step 4 - Processor to Scheduler Assignment */
+#define CONFIGURE_SCHEDULER_ASSIGNMENTS \
+  RTEMS_SCHEDULER_ASSIGN(0, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(1, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY)
+
+
+
+#include <rtems/confdefs.h>
+#endif /* SYSTEM_H_ */
diff -Naur original/testsuites/smptests/dpcp02/dpcp02.doc modified/testsuites/smptests/dpcp02/dpcp02.doc
--- original/testsuites/smptests/dpcp02/dpcp02.doc	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/dpcp02/dpcp02.doc	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,24 @@
+﻿This file describes the directives and concepts tested by this test set.
+
+test set name: overhead
+
+directives:
+
+  - DPCP functions (unlock/lock)
+
+concepts:
+
+  - This is the same test as dpcp01, except that it uses three cores and migr2 is starting on CPU#2
+  
+  - This test is a short test, to test how the programm is going to behave if there are two DPCP semaphores with different ceiling priority migrating 
+    on the same synchronization cpu. CPU#0 is the application processor and CPU#1 the synchronization processor.
+    Priority order of the tasks at the beginning migr2 > migr1 > task2 > task1
+    priority ceiling of the semaphores sid1 > sid2
+   
+    migr2, task2 obtains sid2 semaphore
+    migr1 obtains sid1 semaphore
+    task2 can only finish its critical section after the execution of migr1 and migr2  
+     
+    TEST OUTPUT:
+    see test_notes.txt
+
diff -Naur original/testsuites/smptests/dpcp02/init.c modified/testsuites/smptests/dpcp02/init.c
--- original/testsuites/smptests/dpcp02/init.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/dpcp02/init.c	2023-02-10 21:15:43.413598000 +0100
@@ -0,0 +1,236 @@
+#define CONFIGURE_INIT
+#define CONFIGURE_MAXIMUM_USER_EXTENSIONS 1
+#include "system.h"
+#include "stdio.h"
+#include <assert.h>
+/*#include "../extension.h"*/
+#include "tmacros.h"
+
+const char rtems_test_name[] = "DPCP 2";
+rtems_id sid1;  // Semaphore ID
+rtems_id sid2;  // Semaphore ID
+rtems_id task1; // ID of Task1
+rtems_id task2; // ID of Task2
+rtems_id migr1; // ID of Migration Task
+rtems_id migr2; // ID of Migration Task
+rtems_status_code rsc; //tmp variable for status code
+rtems_id scheds[3]; //scheduler ids
+rtems_id schid;
+
+rtems_task task1_entry( rtems_task_argument argument );
+rtems_task task2_entry( rtems_task_argument argument );
+rtems_task migr1_entry( rtems_task_argument argument );
+rtems_task migr2_entry( rtems_task_argument argument );
+void print_name( rtems_id id );
+void init_sched();
+
+void init_sched(
+)
+{
+  uint32_t cpu_index;
+  printf( "PROCESSOR COUNT: %d\n", rtems_get_processor_count() );
+  for ( cpu_index = 0; cpu_index < 3; cpu_index++ ) {
+    rsc = rtems_scheduler_ident_by_processor( cpu_index, &scheds[cpu_index] );
+    printf( "rtems_scheduler_by_processor( %d, &scheds[%d] ): %s\n", cpu_index,cpu_index, rtems_status_text( rsc ) );
+    printf( "%d\n",scheds[cpu_index] );
+  }
+}
+
+rtems_task init(rtems_task_argument argument)
+{
+  TEST_BEGIN();
+  printf( "TEST START:\n" );
+  rtems_id sh;
+  /* Getting the scheduler instance ids of the processors */
+  init_sched();
+  
+  /* Normal Task: */
+  rsc = rtems_task_create(
+    rtems_build_name( 'T', 'A', 'S', '1' ), 
+    2,
+    RTEMS_MINIMUM_STACK_SIZE, 
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT,
+    &task1
+  );
+
+  printf("Create normal task: %s\n", rtems_status_text( rsc ) );
+  
+  rsc = rtems_task_create( rtems_build_name( 'T', 'A', 'S', '2' ), 
+    69,
+    RTEMS_MINIMUM_STACK_SIZE,
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &task2
+  );
+
+   /* This task migrates too, but only after migr2 migr1 are done, with their execution: */
+  printf("Create normal task2: %s\n", rtems_status_text( rsc ) );
+  
+  /* Create the task that migrates: */
+  rsc = rtems_task_create(
+    rtems_build_name( 'M', 'I', 'G', 'R' ),
+    1,
+    RTEMS_MINIMUM_STACK_SIZE,
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &migr1
+  );
+    
+  /* Create the task that migrates: */
+  rsc = rtems_task_create(
+    rtems_build_name( 'M', 'I', 'G', 'S' ),
+    8,
+    RTEMS_MINIMUM_STACK_SIZE,
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &migr2
+  );
+
+  printf( "Create migration task: %s\n", rtems_status_text( rsc ) );
+  
+  /* Create the DPCP Semaphore */
+  rsc = rtems_semaphore_create(
+    rtems_build_name( 'D', 'P', 'C', 'P' ), 
+    1,
+    ( RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_PRIORITY_CEILING | RTEMS_GLOBAL ),
+    1, 
+    &sid1
+  );
+  printf( "Create DPCP Semaphore: %s\n", rtems_status_text( rsc) );
+  
+  rsc = rtems_semaphore_create(
+    rtems_build_name( 'D', 'P', 'C', 'Q' ), 
+    1,
+    ( RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_PRIORITY_CEILING | RTEMS_GLOBAL ),
+    7,
+    &sid2
+  );
+  printf( "Create DPCP Semaphore: %s\n", rtems_status_text( rsc ) );
+  
+  /*migr and task1 on p1*/
+  rtems_task_set_scheduler( task1, scheds[0], 69 );
+  rtems_task_set_scheduler( migr1, scheds[0], 12 );
+  rtems_task_set_scheduler( task2, scheds[0], 42 );
+  rtems_task_set_scheduler( migr2, scheds[2], 8 );
+  
+  rtems_task_start( task2, task2_entry, 0);
+  rtems_task_start( migr2, migr2_entry, 0);
+  rtems_task_start( task1, task1_entry, 0);  
+  rtems_task_start( migr1, migr1_entry, 0);
+  
+ 
+  rsc = rtems_task_delete( RTEMS_SELF );    /* should not return */
+}
+
+/*task1 task*/
+rtems_task task1_entry(
+  rtems_task_argument argument
+)
+{  
+  while ( 1 ) {
+    for ( int j = 0; j < 20; j++ ) {
+      for ( int i = 0; i < 20000000; i++ ) {
+        asm volatile( "nop":: );
+      }
+    }
+  }
+  rtems_task_suspend(RTEMS_SELF);
+}
+
+/*task2 task*/
+rtems_task task2_entry( 
+  rtems_task_argument argument 
+)
+{
+  printf("task2 START\n");  
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf("task2: Obtaining semaphore: sid2\n");					
+  rsc = rtems_semaphore_obtain( sid2, RTEMS_WAIT, RTEMS_NO_TIMEOUT );                     
+  
+  for( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+
+  rsc = rtems_semaphore_release(sid2); 
+  printf("task2: Releasing semaphore: sid2 \n");
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf("task2: Obtaining semaphore: sid2\n");				
+  rsc = rtems_semaphore_obtain( sid2, RTEMS_WAIT, RTEMS_NO_TIMEOUT );
+
+  for(int j = 0; j < 20; j++) {
+    for (int i = 0; i < 20000000; i++) {
+      asm volatile ("nop"::);
+    }
+  }
+
+  rsc = rtems_semaphore_release( sid2 );
+  printf( "task2: Releasing semaphore: sid2 \n" );
+  printf( "task2 END\n" );
+  rsc = rtems_semaphore_delete(sid1);
+  rtems_test_assert(rsc == RTEMS_SUCCESSFUL);
+  rsc = rtems_semaphore_delete(sid2);
+  rtems_test_assert(rsc == RTEMS_SUCCESSFUL);
+  TEST_END();
+  rtems_test_exit(0);
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+/*migr task*/
+rtems_task migr1_entry(
+  rtems_task_argument argument
+)
+{
+ 
+  printf( "migr1 START\n" );
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf( "migr1: Obtaining semaphore: sid1\n" );				
+  rtems_semaphore_obtain( sid1, RTEMS_WAIT, RTEMS_NO_TIMEOUT );                     
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+
+  /*releasing the DPCP semphore, migrating back to p1*/
+  rtems_semaphore_release(sid1);                        
+  printf( "migr1: Releasing semaphore: sid1 \n" );
+  printf( "migr1 END\n" );
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+/*migr task*/
+rtems_task migr2_entry(
+  rtems_task_argument argument
+)
+{
+  printf("migr2 START\n");
+
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf("migr2: Obtaining semaphore: sid2\n");					
+  rsc = rtems_semaphore_obtain( sid2, RTEMS_WAIT, RTEMS_NO_TIMEOUT );                     
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile ("nop"::);
+    }
+  }
+
+  /*releasing the DPCP semphore, migrating back to p1*/
+  rsc = rtems_semaphore_release(sid2);                         
+  printf( "migr2: Releasing semaphore: sid2 \n" );
+  printf( "migr2 END\n" );
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+void print_name(rtems_id id)
+{
+  char  buffer[10];   /* name assumed to be 10 characters or less */
+  char *result;
+  result = rtems_object_get_name( id, sizeof(buffer), buffer );
+  printk( "ID=0x%08x name=%s\n", id, ((result) ? result : "no name") );
+}
+
diff -Naur original/testsuites/smptests/dpcp02/system.h modified/testsuites/smptests/dpcp02/system.h
--- original/testsuites/smptests/dpcp02/system.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/dpcp02/system.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,52 @@
+#ifndef SYSTEM_H_
+#define SYSTEM_H_
+
+#include <bsp.h> /* for device driver prototypes */
+#define CONFIGURE_APPLICATION_NEEDS_CLOCK_DRIVER
+#define CONFIGURE_APPLICATION_NEEDS_CONSOLE_DRIVER
+#define CONFIGURE_MAXIMUM_TASKS 10
+#define CONFIGURE_MAXIMUM_PROCESSORS 3 
+#define CONFIGURE_MAXIMUM_PRIORITY 255
+#define CONFIGURE_INIT_TASK_NAME rtems_build_name( 'I', 'N', 'I', 'T' )
+#define CONFIGURE_MAXIMUM_SEMAPHORES        2 
+#define CONFIGURE_RTEMS_INIT_TASKS_TABLE
+#define CONFIGURE_INIT
+#define CONFIGURE_EXTRA_TASK_STACKS         (3 * RTEMS_MINIMUM_STACK_SIZE)
+#define CONFIGURE_INIT_TASK_PRIORITY 2
+rtems_task init(rtems_task_argument argument);
+#define CONFIGURE_INIT_TASK_ENTRY_POINT init
+
+/* Configuration Step 1 - Scheduler Algorithms */
+#define CONFIGURE_SCHEDULER_PRIORITY_SMP
+#include <rtems/scheduler.h>
+
+/* Configuration Step 2 - Schedulers */
+RTEMS_SCHEDULER_PRIORITY_SMP(app, CONFIGURE_MAXIMUM_PRIORITY + 1);
+RTEMS_SCHEDULER_PRIORITY_SMP(sync, CONFIGURE_MAXIMUM_PRIORITY + 1);
+RTEMS_SCHEDULER_PRIORITY_SMP(app1, CONFIGURE_MAXIMUM_PRIORITY + 1);
+
+/* Configuration Step 3 - Scheduler Table */
+#define CONFIGURE_SCHEDULER_TABLE_ENTRIES \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    app, \
+     rtems_build_name('A', 'P', 'P', ' ')\
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sync, \
+    rtems_build_name('S', 'Y', 'N', 'C') \
+  ), \
+   RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    app1, \
+    rtems_build_name('A', 'P', 'P', '1') \
+  )
+
+/* Configuration Step 4 - Processor to Scheduler Assignment */
+#define CONFIGURE_SCHEDULER_ASSIGNMENTS \
+  RTEMS_SCHEDULER_ASSIGN(0, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(1, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(2, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY)
+
+
+
+#include <rtems/confdefs.h>
+#endif /* SYSTEM_H_ */
diff -Naur original/testsuites/smptests/dpcp02/test_notes.txt modified/testsuites/smptests/dpcp02/test_notes.txt
--- original/testsuites/smptests/dpcp02/test_notes.txt	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/dpcp02/test_notes.txt	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,53 @@
+Delaying migr1 at the start, almost the same behavoir as with two cpus:
+
+migr2 START
+migr2: Obtaining semaphore: sid2
+migr1 START
+migr1: Obtaining semaphore: sid1
+task2 START
+task2: Obtaining semaphore: sid2
+migr1: Releasing semaphore: sid1 
+migr1 END
+migr2: Releasing semaphore: sid2 
+migr2 END
+task2: Releasing semaphore: sid2 
+task2: Obtaining semaphore: sid2
+task2: Releasing semaphore: sid2 
+task2 END
+
+
+Delaying migr2 at the start: Obtain order migr1(sid1) > task2(sid2) > migr2(sid2)
+Interesting here is the fact that upon delaying migr2, gives migr1 enough time to migrate to CPU#1 and task2 to 
+obtain semaphore sid2 before sid2 does. The execution order is working as intended:
+
+migr2 START
+migr1 START
+migr1: Obtaining semaphore: sid1
+task2 START
+task2: Obtaining semaphore: sid2
+migr2: Obtaining semaphore: sid2
+migr1: Releasing semaphore: sid1 
+migr1 END
+task2: Releasing semaphore: sid2 
+task2: Obtaining semaphore: sid2
+migr2: Releasing semaphore: sid2 
+migr2 END
+task2: Releasing semaphore: sid2 
+task2 END
+
+Delaying migr2 + task2 at the start. Obtain order migr1(sid1) > migr2(sid2) > task2(sid2)
+migr2 START
+migr1 START
+migr1: Obtaining semaphore: sid1
+task2 START
+migr2: Obtaining semaphore: sid2
+task2: Obtaining semaphore: sid2
+migr1: Releasing semaphore: sid1 
+migr1 END
+migr2: Releasing semaphore: sid2 
+migr2 END
+task2: Releasing semaphore: sid2 
+task2: Obtaining semaphore: sid2
+task2: Releasing semaphore: sid2 
+task2 END
+
diff -Naur original/testsuites/smptests/fmlp01/fmlpl01.doc modified/testsuites/smptests/fmlp01/fmlpl01.doc
--- original/testsuites/smptests/fmlp01/fmlpl01.doc	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/fmlp01/fmlpl01.doc	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,13 @@
+﻿This file describes the directives and concepts tested by this test set.
+
+test set name: overhead
+
+directives:
+
+  - DFLPL/FMLPL functions (unlock/lock) (edit the right one before testing)
+
+concepts:
+
+  - This test should test the DFLPL/FMLPL update priority function. We first have the main task obtaining and migrate. On the sychronization processor BLOCK has a higher priority tahn main, thus BLOCK gets the processor and not the migrated task main. After a while BLOCK starts task3 which obtains the same DFLPL semaphore as main. Since main already has the sempahore locked it gets enqueued into a FIFO queue and
+inherits their priority to main which now has a higher priority than BLOCK and will preempt block on the synchronization processor.
+
diff -Naur original/testsuites/smptests/fmlp01/init.c modified/testsuites/smptests/fmlp01/init.c
--- original/testsuites/smptests/fmlp01/init.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/fmlp01/init.c	2023-02-24 17:40:38.118361000 +0100
@@ -0,0 +1,293 @@
+#define CONFIGURE_INIT
+#define CONFIGURE_MAXIMUM_USER_EXTENSIONS 1
+#include "system.h"
+#include "stdio.h"
+#include <assert.h>
+#include "tmacros.h"
+
+const char rtems_test_name[] = "FMLPL/DFLPL 1";
+rtems_id sid;   // Semaphore ID
+rtems_id task1; // ID of Task1
+rtems_id task2; // ID of Task2
+rtems_id task3; // ID of Migration Task
+rtems_id main; // ID of Migration Task
+rtems_id block;
+rtems_status_code rsc; //tmp variable for status code
+rtems_id scheds[3]; //scheduler ids
+rtems_id schid;
+
+rtems_id *sh;
+
+rtems_task task1_entry( rtems_task_argument argument );
+rtems_task task2_entry( rtems_task_argument argument );
+rtems_task task3_entry( rtems_task_argument argument );
+rtems_task main_entry( rtems_task_argument argument );
+rtems_task block_entry( rtems_task_argument argument );
+void print_name( rtems_id id );
+void init_sched();
+
+void init_sched () {
+  uint32_t cpu_index;
+  printf( "PROCESSOR COUNT: %d\n",rtems_scheduler_get_processor_maximum() );
+  for ( cpu_index = 0; cpu_index < 2; cpu_index++ ) {
+    rsc = rtems_scheduler_ident_by_processor( cpu_index, &scheds[cpu_index] );
+    printf("rtems_scheduler_by_processor( %d, &scheds[%d] ): %s\n", cpu_index,cpu_index, rtems_status_text ( rsc ) );
+    printf("%d\n",scheds[cpu_index]);
+  }
+}
+
+rtems_task init(
+rtems_task_argument argument
+)
+{
+  TEST_BEGIN();
+  printf( "TEST START:\n" );
+  /*init_extensions ();*/
+  /* Getting the scheduler instance ids of the processors */
+  init_sched ();
+
+  /* Normal Task: */
+  rsc = rtems_task_create(
+    rtems_build_name( 'B', 'L', 'O', 'C' ), 
+    2,
+    RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &block
+  );
+
+  printf( "Create normal task: %s\n", rtems_status_text( rsc ) );
+
+  rsc = rtems_task_create (
+    rtems_build_name( 'T', 'A', 'S', '1' ),
+    2,
+    RTEMS_MINIMUM_STACK_SIZE,
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &task1
+  );
+
+  printf("Create normal task: %s\n", rtems_status_text( rsc ) );
+
+  rsc = rtems_task_create (
+    rtems_build_name( 'T', 'A', 'S', '2' ),
+    69,
+    RTEMS_MINIMUM_STACK_SIZE, 
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT,
+    &task2
+  );
+
+  /* This task migrates too, but only after migr2 migr1 are done, with their execution: */
+  printf("Create normal task2: %s\n", rtems_status_text(rsc));
+
+  /* Create the task that migrates: */
+  rsc = rtems_task_create(
+    rtems_build_name( 'T', 'A', 'S', '3' ),
+    5,
+    RTEMS_MINIMUM_STACK_SIZE, 
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &task3
+  );
+
+  /* Create the task that migrates: */
+  rsc = rtems_task_create(
+    rtems_build_name ('M', 'A', 'I', 'N'), 2,
+    RTEMS_MINIMUM_STACK_SIZE, 
+    RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT,
+    &main
+  );
+
+  printf( "Create migration task: %s\n", rtems_status_text( rsc ) );
+  rsc = rtems_semaphore_create (
+    rtems_build_name ('D', 'F', 'L', 'P'), 
+    1,
+    (RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_FLEXIBLE_LOCKING_LONG | RTEMS_FIFO | RTEMS_GLOBAL), 
+    1,
+    &sid);
+    printf("Create DFLPL Semaphore: %s\n", rtems_status_text( rsc ) 
+  );
+
+  /*migr and task1 on p1*/
+  rtems_task_set_scheduler( task1, scheds[0], 69 );
+  rtems_task_set_scheduler( task2, scheds[0], 12 );
+  rtems_task_set_scheduler( task3, scheds[0], 5 );
+  rtems_task_set_scheduler( main, scheds[0], 65 );
+  rtems_task_set_scheduler( block, scheds[1], 22 );
+
+  rtems_task_get_scheduler( task1, &sh );
+  printf( "Scheduler task1: %d\n", sh );
+  rtems_task_get_scheduler( task2, &sh );
+  printf( "Scheduler task2: %d\n", sh );
+  rtems_task_get_scheduler( task3, &sh );
+  printf( "Scheduler task3: %d\n", sh );
+  rtems_task_get_scheduler( main, &sh );
+  printf( "Scheduler main: %d\n", sh );
+  rtems_task_get_scheduler( block, &sh );
+  printf( "Scheduler block: %d\n", sh );
+
+  rtems_task_start( main, main_entry, 0 );
+  rtems_task_start( block, block_entry, 0 );
+  rtems_task_delete ( RTEMS_SELF );    /* should not return */
+}
+
+rtems_task block_entry(
+  rtems_task_argument argument
+)
+{  
+  printf("block START\n");  
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20008889; i++ ) {
+      asm volatile("nop"::);
+    }
+  }
+
+  rtems_task_start( task3, task3_entry, 0 );
+  for ( int j = 0; j < 20; j++ ) {
+      for (int i = 0; i < 200038889; i++ ) {
+        asm volatile ("nop"::);
+    }
+  }
+  
+  printf( "block END\n" );
+  rsc = rtems_semaphore_delete(sid);
+  rtems_test_assert(rsc == RTEMS_SUCCESSFUL);
+  TEST_END();
+  rtems_test_exit(0);
+  rtems_task_suspend(RTEMS_SELF);
+}
+
+
+
+/*task1 task*/
+rtems_task task1_entry(
+  rtems_task_argument argument
+)
+{  
+  printf("task1 START\n");  
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 200089; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+
+  printf("task1: Obtaining semaphore: sid\n");				
+  rsc = rtems_semaphore_obtain(sid, RTEMS_WAIT, RTEMS_NO_TIMEOUT);                     
+
+  for ( int j = 0; j < 20; j++ ) {
+      for ( int i = 0; i < 20000000; i++ ) {
+        asm volatile( "nop":: );
+    }
+  }
+
+  rsc = rtems_semaphore_release( sid ); 
+  
+  printf( "task1: Releasing semaphore: sid2 \n" );
+  printf( "task1 END\n" );  
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+/*task2 task*/
+rtems_task task2_entry(
+  rtems_task_argument argument
+)
+{
+  printf( "task2 START\n" );
+  /*obtaining the DPCP sempahore, migrating to p2*/
+  printf( "task2: Obtaining semaphore: sid\n" );
+  rsc = rtems_semaphore_obtain( sid, RTEMS_WAIT, RTEMS_NO_TIMEOUT );
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile ("nop"::);
+    }
+  }
+
+  rsc = rtems_semaphore_release( sid );
+  printf( "task2: Releasing semaphore: sid \n" );
+  printf( "task2 END\n" );
+
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+/*migr task*/
+rtems_task main_entry(
+  rtems_task_argument argument
+)
+{
+  printf( "main START\n" );
+  printf( "main: Obtaining semaphore: sid\n" );					
+  rtems_semaphore_obtain( sid, RTEMS_WAIT, RTEMS_NO_TIMEOUT );                     
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+  //rtems_task_start(task3, task3_entry, 0);
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile("nop"::);
+    }
+  }
+  rtems_task_start( task2, task2_entry, 0 );
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+  rtems_task_start( task1, task1_entry, 0 );
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 20000000; i++ ) {
+      asm volatile ( "nop":: );
+    }
+  }
+
+  printf( "main: Releasing semaphore: sid \n");
+  rtems_semaphore_release( sid );          
+  printf( "main END\n" );
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+/*task3 task*/
+rtems_task task3_entry(
+  rtems_task_argument argument
+)
+{
+  printf("task3 START\n");  
+
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 200089; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+  
+  printf("task3: Obtaining semaphore: sid\n");					/*obtaining the DPCP sempahore, migrating to p2*/
+  rsc = rtems_semaphore_obtain(sid, RTEMS_WAIT, RTEMS_NO_TIMEOUT);                     
+
+  for(int j = 0; j < 20; j++) {
+    for (int i = 0; i < 20000000; i++) {
+      asm volatile ("nop"::);
+    }
+  }
+
+  rsc = rtems_semaphore_release( sid ); 
+  printf( "task3: Releasing semaphore: sid2 \n" );
+  printf( "task3 END\n" );  
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+void print_name(rtems_id id)
+{
+  char  buffer[10];   /* name assumed to be 10 characters or less */
+  char *result;
+  result = rtems_object_get_name( id, sizeof(buffer), buffer );
+  printk( "ID=0x%08x name=%s\n", id, ((result) ? result : "no name") );
+}
+
diff -Naur original/testsuites/smptests/fmlp01/system.h modified/testsuites/smptests/fmlp01/system.h
--- original/testsuites/smptests/fmlp01/system.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/fmlp01/system.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,44 @@
+#ifndef SYSTEM_H_
+#define SYSTEM_H_
+
+#include <bsp.h> /* for device driver prototypes */
+#define CONFIGURE_APPLICATION_NEEDS_CLOCK_DRIVER
+#define CONFIGURE_APPLICATION_NEEDS_CONSOLE_DRIVER
+#define CONFIGURE_MAXIMUM_TASKS 10
+#define CONFIGURE_MAXIMUM_PROCESSORS 2 
+#define CONFIGURE_MAXIMUM_PRIORITY 255
+#define CONFIGURE_INIT_TASK_NAME rtems_build_name( 'I', 'N', 'I', 'T' )
+#define CONFIGURE_MAXIMUM_DFLPL_SEMAPHORES 1
+#define CONFIGURE_MAXIMUM_SEMAPHORES        1 
+#define CONFIGURE_RTEMS_INIT_TASKS_TABLE
+#define CONFIGURE_INIT
+#define CONFIGURE_EXTRA_TASK_STACKS         (3 * RTEMS_MINIMUM_STACK_SIZE)
+#define CONFIGURE_INIT_TASK_PRIORITY 2
+rtems_task init(rtems_task_argument argument);
+#define CONFIGURE_INIT_TASK_ENTRY_POINT init
+
+/* Configuration Step 1 - Scheduler Algorithms */
+#define CONFIGURE_SCHEDULER_PRIORITY_SMP
+#include <rtems/scheduler.h>
+
+/* Configuration Step 2 - Schedulers */
+RTEMS_SCHEDULER_PRIORITY_SMP(app, CONFIGURE_MAXIMUM_PRIORITY + 1);
+RTEMS_SCHEDULER_PRIORITY_SMP(sync, CONFIGURE_MAXIMUM_PRIORITY + 1);
+
+/* Configuration Step 3 - Scheduler Table */
+#define CONFIGURE_SCHEDULER_TABLE_ENTRIES \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    app, \
+     rtems_build_name('A', 'P', 'P', ' ')\
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sync, \
+    rtems_build_name('S', 'Y', 'N', 'C') \
+  )
+/* Configuration Step 4 - Processor to Scheduler Assignment */
+#define CONFIGURE_SCHEDULER_ASSIGNMENTS \
+  RTEMS_SCHEDULER_ASSIGN(0, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(1, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY)
+
+#include <rtems/confdefs.h>
+#endif /* SYSTEM_H_ */
diff -Naur original/testsuites/smptests/hdga01/hdga01.doc modified/testsuites/smptests/hdga01/hdga01.doc
--- original/testsuites/smptests/hdga01/hdga01.doc	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/hdga01/hdga01.doc	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,12 @@
+﻿This file describes the directives and concepts tested by this test set.
+
+test set name: overhead
+
+directives:
+
+  - HDGA functions (lock/unlock)
+  - rtems_semaphore_ticket
+
+concepts:
+
+  - Testing functionality of the HDGA implementation
diff -Naur original/testsuites/smptests/hdga01/init.c modified/testsuites/smptests/hdga01/init.c
--- original/testsuites/smptests/hdga01/init.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/hdga01/init.c	2023-02-10 20:38:36.067328000 +0100
@@ -0,0 +1,112 @@
+#define CONFIGURE_INIT
+#define CONFIGURE_MAXIMUM_USER_EXTENSIONS 1
+#include "system.h"
+#include "stdio.h"
+#include <assert.h>
+
+#include "tmacros.h"
+
+const char rtems_test_name[] = "HDGA 1";
+rtems_id sid;
+rtems_id tasks[7];
+
+rtems_status_code rsc;
+rtems_id scheds[3];
+rtems_id schid;
+
+rtems_task task_entry( rtems_task_argument argument );
+
+rtems_task init(
+rtems_task_argument argument
+)
+{
+  TEST_BEGIN();
+  printf( "TEST START:\n" );
+
+  /* Normal Task: */
+  int i;
+  int j = 5;
+  for ( i = 0; i < 4; i++) {
+    rsc = rtems_task_create(
+      rtems_build_name( 'T', 'A', 'S', '0'+ i ),
+      i+2,
+      RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT,
+      RTEMS_NO_FLOATING_POINT, &tasks[i]
+    );
+    printf( "Create task %d: %s\n", i, rtems_status_text( rsc ) );
+  }
+
+  rsc = rtems_semaphore_create(
+    rtems_build_name( 'H', 'D', 'G', 'A' ),
+    1, 
+    ( RTEMS_BINARY_SEMAPHORE | RTEMS_HYPERPERIOD_DEPENDENCY_GRAPH_APPROACH| RTEMS_GLOBAL ),
+    //(RTEMS_MULTIPROCESSOR_RESOURCE_SHARING
+      //| RTEMS_BINARY_SEMAPHORE),
+    7, 
+    &sid
+  );
+  printf( "Create HDGA Semaphore: %s\n", rtems_status_text( rsc ) );
+
+ 
+  rsc = rtems_semaphore_ticket( sid, tasks[0], 3 );
+  printf( "setting ticket for semaphore sid for task %d, ticket %d: %s\n", 0, 3, rtems_status_text( rsc ) );
+   
+  rsc = rtems_semaphore_ticket( sid, tasks[1], 0 );
+  printf( "setting ticket for semaphore sid for task %d, ticket %d: %s\n", 1, 0, rtems_status_text( rsc ) );
+   
+  rsc = rtems_semaphore_ticket( sid, tasks[2], 2 );
+  printf( "setting ticket for semaphore sid for task %d, ticket %d: %s\n", 2, 2, rtems_status_text( rsc ) );
+  
+  rsc = rtems_semaphore_ticket( sid, tasks[3], 1 );
+  printf( "setting ticket for semaphore sid for task %d, ticket %d: %s\n", 3, 1, rtems_status_text( rsc ) );
+
+  printf("\n\t+-------+---------+\n");
+  printf("\t| Task  | Ticket  |\n");
+  printf("\t+-------+---------+\n");
+  printf("\t|   0   |    3    |\n");
+  printf("\t|   1   |    0    |\n");
+  printf("\t|   2   |    2    |\n");
+  printf("\t|   3   |    1    |\n");
+  printf("\t+-------+---------+\n");
+  printf("\n Task execution order defined --> Task 1, Task 3, Task 2, Task 0\n");
+
+  rtems_task_start( tasks[0], task_entry, 0 );
+  rtems_task_start( tasks[1], task_entry, 1 );
+  rtems_task_start( tasks[2], task_entry, 2 );
+  rtems_task_start( tasks[3], task_entry, 3 );
+     
+
+  rsc = rtems_task_delete( RTEMS_SELF );    /* should not return */
+}
+
+rtems_task task_entry(
+rtems_task_argument i
+)
+{
+  rtems_name name;
+  rtems_status_code status;
+  printf( "->TASK %d requesting for semaphore...\n", i);
+  status = rtems_semaphore_obtain( sid, RTEMS_WAIT, RTEMS_NO_TIMEOUT );
+  printf( "\TASK %d OBTAINED the semaphore : %s\n", i,rtems_status_text( status ));
+  printf("TASK %d EXECUTING in semaphore\n ",i);
+ for( int j = 0; j < 20; j++) {
+      for ( int i = 0; i < 10000; i++ ) {
+    	printf("\r Executing... ");
+    	fflush(stdout);
+    	//asm volatile( "nop":: );
+      }
+    }
+  printf( "\n->TASK %d RELEASING semaphore...\n", i);
+  status = rtems_semaphore_release( sid );
+  if(i==3 && status == RTEMS_SUCCESSFUL)
+  {
+	  rsc = rtems_semaphore_delete(sid);
+	  rtems_test_assert(rsc == RTEMS_SUCCESSFUL);
+	  TEST_END();
+	  rtems_test_exit(0);
+  }
+ // printf( "->TASK %d released semaphore : %s\n", i, rtems_status_text( status ));
+  status = rtems_task_delete( tasks[i] );    /* should not return */
+  printf( "rtems_task_delete returned with status of %d.\n", status );
+}
+
diff -Naur original/testsuites/smptests/hdga01/system.h modified/testsuites/smptests/hdga01/system.h
--- original/testsuites/smptests/hdga01/system.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/hdga01/system.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,52 @@
+#ifndef SYSTEM_H_
+#define SYSTEM_H_
+
+#include <bsp.h> /* for device driver prototypes */
+#define CONFIGURE_APPLICATION_NEEDS_CLOCK_DRIVER
+#define CONFIGURE_APPLICATION_NEEDS_CONSOLE_DRIVER
+#define CONFIGURE_MAXIMUM_TASKS 10
+#define CONFIGURE_MAXIMUM_PROCESSORS 3 
+#define CONFIGURE_MAXIMUM_PRIORITY 255
+#define CONFIGURE_INIT_TASK_NAME rtems_build_name( 'I', 'N', 'I', 'T' )
+#define CONFIGURE_MAXIMUM_SEMAPHORES        2 
+#define CONFIGURE_RTEMS_INIT_TASKS_TABLE
+#define CONFIGURE_INIT
+#define CONFIGURE_EXTRA_TASK_STACKS         (3 * RTEMS_MINIMUM_STACK_SIZE)
+#define CONFIGURE_INIT_TASK_PRIORITY 2
+rtems_task init(rtems_task_argument argument);
+#define CONFIGURE_INIT_TASK_ENTRY_POINT init
+
+/* Configuration Step 1 - Scheduler Algorithms */
+#define CONFIGURE_SCHEDULER_PRIORITY_SMP
+#include <rtems/scheduler.h>
+
+/* Configuration Step 2 - Schedulers */
+RTEMS_SCHEDULER_PRIORITY_SMP(app, CONFIGURE_MAXIMUM_PRIORITY + 1);
+RTEMS_SCHEDULER_PRIORITY_SMP(sync, CONFIGURE_MAXIMUM_PRIORITY + 1);
+RTEMS_SCHEDULER_PRIORITY_SMP(app1, CONFIGURE_MAXIMUM_PRIORITY + 1);
+
+/* Configuration Step 3 - Scheduler Table */
+#define CONFIGURE_SCHEDULER_TABLE_ENTRIES \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    app, \
+     rtems_build_name('A', 'P', 'P', ' ')\
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sync, \
+    rtems_build_name('S', 'Y', 'N', 'C') \
+  ), \
+   RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    app1, \
+    rtems_build_name('A', 'P', 'P', '1') \
+  )
+
+/* Configuration Step 4 - Processor to Scheduler Assignment */
+#define CONFIGURE_SCHEDULER_ASSIGNMENTS \
+  RTEMS_SCHEDULER_ASSIGN(0, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(1, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(2, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY)
+
+
+
+#include <rtems/confdefs.h>
+#endif /* SYSTEM_H_ */
diff -Naur original/testsuites/smptests/Makefile.am modified/testsuites/smptests/Makefile.am
--- original/testsuites/smptests/Makefile.am	2020-08-22 09:30:12.000000000 +0200
+++ modified/testsuites/smptests/Makefile.am	2022-11-11 16:52:30.000000000 +0100
@@ -315,6 +315,66 @@
 endif
 
 if HAS_SMP
+if TEST_dpcp01
+smp_tests += dpcp01
+smp_docs += dpcp01/dpcp01.doc
+dpcp01_SOURCES = dpcp01/init.c
+dpcp01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_dpcp01) \
+	$(support_includes)
+endif
+endif
+
+if HAS_SMP
+if TEST_dpcp02
+smp_tests += dpcp02
+smp_docs += dpcp02/dpcp02.doc
+dpcp02_SOURCES = dpcp02/init.c
+dpcp02_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_dpcp02) \
+	$(support_includes)
+endif
+endif
+
+if HAS_SMP
+if TEST_mpcp01
+smp_tests += mpcp01
+smp_docs += mpcp01/mpcp01.doc
+mpcp01_SOURCES = mpcp01/init.c
+mpcp01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_mpcp01) \
+	$(support_includes)
+endif
+endif
+
+if HAS_SMP
+if TEST_overhead
+smp_tests += overhead
+smp_docs += overhead/overhead.doc
+overhead_SOURCES = overhead/init.c
+overhead_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_overhead) \
+	$(support_includes)
+endif
+endif
+
+if HAS_SMP
+if TEST_fmlp01
+smp_tests += fmlp01
+smp_docs += fmlp01/fmlp01.doc
+fmlp01_SOURCES = fmlp01/init.c
+fmlp01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_fmlp01) \
+	$(support_includes)
+endif
+endif
+
+if HAS_SMP
+if TEST_hdga01
+smp_tests += hdga01
+smp_docs += hdga01/hdga01.doc
+hdga01_SOURCES = hdga01/init.c
+hdga01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_hdga01) \
+	$(support_includes)
+endif
+endif
+
+if HAS_SMP
 if TEST_smpmulticast01
 smp_tests += smpmulticast01
 smp_screens += smpmulticast01/smpmulticast01.scn
diff -Naur original/testsuites/smptests/Makefile.in modified/testsuites/smptests/Makefile.in
--- original/testsuites/smptests/Makefile.in	2020-08-26 00:22:33.000000000 +0200
+++ modified/testsuites/smptests/Makefile.in	2023-01-31 19:24:06.887736000 +0100
@@ -144,103 +173,115 @@
 @HAS_SMP_TRUE@@TEST_smpmrsp01_TRUE@am__append_79 = smpmrsp01
 @HAS_SMP_TRUE@@TEST_smpmrsp01_TRUE@am__append_80 = smpmrsp01/smpmrsp01.scn
 @HAS_SMP_TRUE@@TEST_smpmrsp01_TRUE@am__append_81 = smpmrsp01/smpmrsp01.doc
-@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__append_82 = smpmulticast01
-@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__append_83 = smpmulticast01/smpmulticast01.scn
-@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__append_84 = smpmulticast01/smpmulticast01.doc
-@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__append_85 = smpmutex01
-@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__append_86 = smpmutex01/smpmutex01.scn
-@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__append_87 = smpmutex01/smpmutex01.doc
-@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__append_88 = smpmutex02
-@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__append_89 = smpmutex02/smpmutex02.scn
-@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__append_90 = smpmutex02/smpmutex02.doc
-@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__append_91 = smpopenmp01
-@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__append_92 = smpopenmp01/smpopenmp01.scn
-@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__append_93 = smpopenmp01/smpopenmp01.doc
-@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__append_94 = smppsxaffinity01
-@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__append_95 = smppsxaffinity01/smppsxaffinity01.scn
-@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__append_96 = smppsxaffinity01/smppsxaffinity01.doc
-@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__append_97 = smppsxaffinity02
-@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__append_98 = smppsxaffinity02/smppsxaffinity02.scn
-@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__append_99 = smppsxaffinity02/smppsxaffinity02.doc
-@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__append_100 = smppsxmutex01
-@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__append_101 = smppsxmutex01/smppsxmutex01.scn
-@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__append_102 = smppsxmutex01/smppsxmutex01.doc
-@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__append_103 = smppsxsignal01
-@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__append_104 = smppsxsignal01/smppsxsignal01.scn
-@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__append_105 = smppsxsignal01/smppsxsignal01.doc
-@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__append_106 = smpschedaffinity01
-@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__append_107 = smpschedaffinity01/smpschedaffinity01.scn
-@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__append_108 = smpschedaffinity01/smpschedaffinity01.doc
-@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__append_109 = smpschedaffinity02
-@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__append_110 = smpschedaffinity02/smpschedaffinity02.scn
-@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__append_111 = smpschedaffinity02/smpschedaffinity02.doc
-@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__append_112 = smpschedaffinity03
-@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__append_113 = smpschedaffinity03/smpschedaffinity03.scn
-@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__append_114 = smpschedaffinity03/smpschedaffinity03.doc
-@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__append_115 = smpschedaffinity04
-@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__append_116 = smpschedaffinity04/smpschedaffinity04.scn
-@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__append_117 = smpschedaffinity04/smpschedaffinity04.doc
-@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__append_118 = smpschedaffinity05
-@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__append_119 = smpschedaffinity05/smpschedaffinity05.scn
-@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__append_120 = smpschedaffinity05/smpschedaffinity05.doc
-@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__append_121 = smpschededf01
-@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__append_122 = smpschededf01/smpschededf01.scn
-@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__append_123 = smpschededf01/smpschededf01.doc
-@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__append_124 = smpschededf02
-@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__append_125 = smpschededf02/smpschededf02.scn
-@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__append_126 = smpschededf02/smpschededf02.doc
-@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__append_127 = smpschededf03
-@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__append_128 = smpschededf03/smpschededf03.scn
-@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__append_129 = smpschededf03/smpschededf03.doc
-@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__append_130 = smpschededf04
-@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__append_131 = smpschededf04/smpschededf04.scn
-@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__append_132 = smpschededf04/smpschededf04.doc
-@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__append_133 = smpschedsem01
-@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__append_134 = smpschedsem01/smpschedsem01.scn
-@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__append_135 = smpschedsem01/smpschedsem01.doc
-@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__append_136 = smpscheduler01
-@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__append_137 = smpscheduler01/smpscheduler01.scn
-@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__append_138 = smpscheduler01/smpscheduler01.doc
-@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__append_139 = smpscheduler02
-@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__append_140 = smpscheduler02/smpscheduler02.scn
-@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__append_141 = smpscheduler02/smpscheduler02.doc
-@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__append_142 = smpscheduler03
-@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__append_143 = smpscheduler03/smpscheduler03.scn
-@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__append_144 = smpscheduler03/smpscheduler03.doc
-@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__append_145 = smpscheduler04
-@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__append_146 = smpscheduler04/smpscheduler04.scn
-@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__append_147 = smpscheduler04/smpscheduler04.doc
-@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__append_148 = smpscheduler05
-@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__append_149 = smpscheduler05/smpscheduler05.scn
-@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__append_150 = smpscheduler05/smpscheduler05.doc
-@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__append_151 = smpscheduler06
-@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__append_152 = smpscheduler06/smpscheduler06.scn
-@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__append_153 = smpscheduler06/smpscheduler06.doc
-@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__append_154 = smpscheduler07
-@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__append_155 = smpscheduler07/smpscheduler07.scn
-@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__append_156 = smpscheduler07/smpscheduler07.doc
-@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__append_157 = smpsignal01
-@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__append_158 = smpsignal01/smpsignal01.scn
-@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__append_159 = smpsignal01/smpsignal01.doc
-@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__append_160 = smpstrongapa01
-@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__append_161 = smpstrongapa01/smpstrongapa01.scn
-@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__append_162 = smpstrongapa01/smpstrongapa01.doc
-@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__append_163 = smpswitchextension01
-@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__append_164 = smpswitchextension01/smpswitchextension01.scn
-@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__append_165 = smpswitchextension01/smpswitchextension01.doc
-@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__append_166 = smpthreadlife01
-@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__append_167 = smpthreadlife01/smpthreadlife01.scn
-@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__append_168 = smpthreadlife01/smpthreadlife01.doc
-@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__append_169 = smpthreadpin01
-@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__append_170 = smpthreadpin01/smpthreadpin01.scn
-@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__append_171 = smpthreadpin01/smpthreadpin01.doc
-@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__append_172 = smpunsupported01
-@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__append_173 = smpunsupported01/smpunsupported01.scn
-@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__append_174 = smpunsupported01/smpunsupported01.doc
-@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__append_175 = smpwakeafter01
-@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__append_176 = smpwakeafter01/smpwakeafter01.scn
-@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__append_177 = smpwakeafter01/smpwakeafter01.doc
-noinst_PROGRAMS = $(am__EXEEXT_60)
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@am__append_82 = dpcp01
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@am__append_83 = dpcp01/dpcp01.doc
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@am__append_84 = dpcp02
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@am__append_85 = dpcp02/dpcp02.doc
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@am__append_86 = mpcp01
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@am__append_87 = mpcp01/mpcp01.doc
+@HAS_SMP_TRUE@@TEST_overhead_TRUE@am__append_88 = overhead
+@HAS_SMP_TRUE@@TEST_overhead_TRUE@am__append_89 = overhead/overhead.doc
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@am__append_90 = fmlp01
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@am__append_91 = fmlp01/fmlp01.doc
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@am__append_92 = hdga01
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@am__append_93 = hdga01/hdga01.doc
+@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__append_94 = smpmulticast01
+@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__append_95 = smpmulticast01/smpmulticast01.scn
+@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__append_96 = smpmulticast01/smpmulticast01.doc
+@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__append_97 = smpmutex01
+@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__append_98 = smpmutex01/smpmutex01.scn
+@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__append_99 = smpmutex01/smpmutex01.doc
+@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__append_100 = smpmutex02
+@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__append_101 = smpmutex02/smpmutex02.scn
+@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__append_102 = smpmutex02/smpmutex02.doc
+@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__append_103 = smpopenmp01
+@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__append_104 = smpopenmp01/smpopenmp01.scn
+@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__append_105 = smpopenmp01/smpopenmp01.doc
+@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__append_106 = smppsxaffinity01
+@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__append_107 = smppsxaffinity01/smppsxaffinity01.scn
+@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__append_108 = smppsxaffinity01/smppsxaffinity01.doc
+@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__append_109 = smppsxaffinity02
+@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__append_110 = smppsxaffinity02/smppsxaffinity02.scn
+@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__append_111 = smppsxaffinity02/smppsxaffinity02.doc
+@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__append_112 = smppsxmutex01
+@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__append_113 = smppsxmutex01/smppsxmutex01.scn
+@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__append_114 = smppsxmutex01/smppsxmutex01.doc
+@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__append_115 = smppsxsignal01
+@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__append_116 = smppsxsignal01/smppsxsignal01.scn
+@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__append_117 = smppsxsignal01/smppsxsignal01.doc
+@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__append_118 = smpschedaffinity01
+@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__append_119 = smpschedaffinity01/smpschedaffinity01.scn
+@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__append_120 = smpschedaffinity01/smpschedaffinity01.doc
+@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__append_121 = smpschedaffinity02
+@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__append_122 = smpschedaffinity02/smpschedaffinity02.scn
+@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__append_123 = smpschedaffinity02/smpschedaffinity02.doc
+@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__append_124 = smpschedaffinity03
+@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__append_125 = smpschedaffinity03/smpschedaffinity03.scn
+@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__append_126 = smpschedaffinity03/smpschedaffinity03.doc
+@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__append_127 = smpschedaffinity04
+@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__append_128 = smpschedaffinity04/smpschedaffinity04.scn
+@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__append_129 = smpschedaffinity04/smpschedaffinity04.doc
+@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__append_130 = smpschedaffinity05
+@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__append_131 = smpschedaffinity05/smpschedaffinity05.scn
+@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__append_132 = smpschedaffinity05/smpschedaffinity05.doc
+@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__append_133 = smpschededf01
+@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__append_134 = smpschededf01/smpschededf01.scn
+@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__append_135 = smpschededf01/smpschededf01.doc
+@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__append_136 = smpschededf02
+@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__append_137 = smpschededf02/smpschededf02.scn
+@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__append_138 = smpschededf02/smpschededf02.doc
+@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__append_139 = smpschededf03
+@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__append_140 = smpschededf03/smpschededf03.scn
+@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__append_141 = smpschededf03/smpschededf03.doc
+@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__append_142 = smpschededf04
+@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__append_143 = smpschededf04/smpschededf04.scn
+@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__append_144 = smpschededf04/smpschededf04.doc
+@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__append_145 = smpschedsem01
+@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__append_146 = smpschedsem01/smpschedsem01.scn
+@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__append_147 = smpschedsem01/smpschedsem01.doc
+@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__append_148 = smpscheduler01
+@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__append_149 = smpscheduler01/smpscheduler01.scn
+@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__append_150 = smpscheduler01/smpscheduler01.doc
+@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__append_151 = smpscheduler02
+@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__append_152 = smpscheduler02/smpscheduler02.scn
+@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__append_153 = smpscheduler02/smpscheduler02.doc
+@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__append_154 = smpscheduler03
+@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__append_155 = smpscheduler03/smpscheduler03.scn
+@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__append_156 = smpscheduler03/smpscheduler03.doc
+@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__append_157 = smpscheduler04
+@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__append_158 = smpscheduler04/smpscheduler04.scn
+@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__append_159 = smpscheduler04/smpscheduler04.doc
+@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__append_160 = smpscheduler05
+@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__append_161 = smpscheduler05/smpscheduler05.scn
+@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__append_162 = smpscheduler05/smpscheduler05.doc
+@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__append_163 = smpscheduler06
+@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__append_164 = smpscheduler06/smpscheduler06.scn
+@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__append_165 = smpscheduler06/smpscheduler06.doc
+@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__append_166 = smpscheduler07
+@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__append_167 = smpscheduler07/smpscheduler07.scn
+@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__append_168 = smpscheduler07/smpscheduler07.doc
+@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__append_169 = smpsignal01
+@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__append_170 = smpsignal01/smpsignal01.scn
+@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__append_171 = smpsignal01/smpsignal01.doc
+@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__append_172 = smpstrongapa01
+@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__append_173 = smpstrongapa01/smpstrongapa01.scn
+@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__append_174 = smpstrongapa01/smpstrongapa01.doc
+@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__append_175 = smpswitchextension01
+@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__append_176 = smpswitchextension01/smpswitchextension01.scn
+@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__append_177 = smpswitchextension01/smpswitchextension01.doc
+@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__append_178 = smpthreadlife01
+@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__append_179 = smpthreadlife01/smpthreadlife01.scn
+@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__append_180 = smpthreadlife01/smpthreadlife01.doc
+@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__append_181 = smpthreadpin01
+@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__append_182 = smpthreadpin01/smpthreadpin01.scn
+@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__append_183 = smpthreadpin01/smpthreadpin01.doc
+@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__append_184 = smpunsupported01
+@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__append_185 = smpunsupported01/smpunsupported01.scn
+@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__append_186 = smpunsupported01/smpunsupported01.doc
+@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__append_187 = smpwakeafter01
+@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__append_188 = smpwakeafter01/smpwakeafter01.scn
+@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__append_189 = smpwakeafter01/smpwakeafter01.doc
+noinst_PROGRAMS = $(am__EXEEXT_66)
 subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps =  \
@@ -312,49 +355,55 @@
 @HAS_SMP_TRUE@@TEST_smpmigration01_TRUE@am__EXEEXT_25 = smpmigration01$(EXEEXT)
 @HAS_SMP_TRUE@@TEST_smpmigration02_TRUE@am__EXEEXT_26 = smpmigration02$(EXEEXT)
 @HAS_SMP_TRUE@@TEST_smpmrsp01_TRUE@am__EXEEXT_27 = smpmrsp01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__EXEEXT_28 = smpmulticast01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__EXEEXT_29 =  \
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@am__EXEEXT_28 = dpcp01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@am__EXEEXT_29 = dpcp02$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@am__EXEEXT_30 = mpcp01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_overhead_TRUE@am__EXEEXT_31 = overhead$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@am__EXEEXT_32 = fmlp01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@am__EXEEXT_33 = hdga01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@am__EXEEXT_34 = smpmulticast01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@am__EXEEXT_35 =  \
 @HAS_SMP_TRUE@@TEST_smpmutex01_TRUE@	smpmutex01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__EXEEXT_30 =  \
+@HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@am__EXEEXT_36 =  \
 @HAS_SMP_TRUE@@TEST_smpmutex02_TRUE@	smpmutex02$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__EXEEXT_31 =  \
+@HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@am__EXEEXT_37 =  \
 @HAS_SMP_TRUE@@TEST_smpopenmp01_TRUE@	smpopenmp01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__EXEEXT_32 = smppsxaffinity01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__EXEEXT_33 = smppsxaffinity02$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__EXEEXT_34 =  \
+@HAS_SMP_TRUE@@TEST_smppsxaffinity01_TRUE@am__EXEEXT_38 = smppsxaffinity01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smppsxaffinity02_TRUE@am__EXEEXT_39 = smppsxaffinity02$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@am__EXEEXT_40 =  \
 @HAS_SMP_TRUE@@TEST_smppsxmutex01_TRUE@	smppsxmutex01$(EXEEXT)
-@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__EXEEXT_35 = smppsxsignal01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__EXEEXT_36 = smpschedaffinity01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__EXEEXT_37 = smpschedaffinity02$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__EXEEXT_38 = smpschedaffinity03$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__EXEEXT_39 = smpschedaffinity04$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__EXEEXT_40 = smpschedaffinity05$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__EXEEXT_41 =  \
+@HAS_POSIX_TRUE@@HAS_SMP_TRUE@@TEST_smppsxsignal01_TRUE@am__EXEEXT_41 = smppsxsignal01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpschedaffinity01_TRUE@am__EXEEXT_42 = smpschedaffinity01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpschedaffinity02_TRUE@am__EXEEXT_43 = smpschedaffinity02$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpschedaffinity03_TRUE@am__EXEEXT_44 = smpschedaffinity03$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpschedaffinity04_TRUE@am__EXEEXT_45 = smpschedaffinity04$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpschedaffinity05_TRUE@am__EXEEXT_46 = smpschedaffinity05$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@am__EXEEXT_47 =  \
 @HAS_SMP_TRUE@@TEST_smpschededf01_TRUE@	smpschededf01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__EXEEXT_42 =  \
+@HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@am__EXEEXT_48 =  \
 @HAS_SMP_TRUE@@TEST_smpschededf02_TRUE@	smpschededf02$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__EXEEXT_43 =  \
+@HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@am__EXEEXT_49 =  \
 @HAS_SMP_TRUE@@TEST_smpschededf03_TRUE@	smpschededf03$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__EXEEXT_44 =  \
+@HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@am__EXEEXT_50 =  \
 @HAS_SMP_TRUE@@TEST_smpschededf04_TRUE@	smpschededf04$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__EXEEXT_45 =  \
+@HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@am__EXEEXT_51 =  \
 @HAS_SMP_TRUE@@TEST_smpschedsem01_TRUE@	smpschedsem01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__EXEEXT_46 = smpscheduler01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__EXEEXT_47 = smpscheduler02$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__EXEEXT_48 = smpscheduler03$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__EXEEXT_49 = smpscheduler04$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__EXEEXT_50 = smpscheduler05$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__EXEEXT_51 = smpscheduler06$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__EXEEXT_52 = smpscheduler07$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__EXEEXT_53 =  \
+@HAS_SMP_TRUE@@TEST_smpscheduler01_TRUE@am__EXEEXT_52 = smpscheduler01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpscheduler02_TRUE@am__EXEEXT_53 = smpscheduler02$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpscheduler03_TRUE@am__EXEEXT_54 = smpscheduler03$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpscheduler04_TRUE@am__EXEEXT_55 = smpscheduler04$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpscheduler05_TRUE@am__EXEEXT_56 = smpscheduler05$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpscheduler06_TRUE@am__EXEEXT_57 = smpscheduler06$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpscheduler07_TRUE@am__EXEEXT_58 = smpscheduler07$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@am__EXEEXT_59 =  \
 @HAS_SMP_TRUE@@TEST_smpsignal01_TRUE@	smpsignal01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__EXEEXT_54 = smpstrongapa01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__EXEEXT_55 = smpswitchextension01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__EXEEXT_56 = smpthreadlife01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__EXEEXT_57 = smpthreadpin01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__EXEEXT_58 = smpunsupported01$(EXEEXT)
-@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__EXEEXT_59 = smpwakeafter01$(EXEEXT)
-am__EXEEXT_60 = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
+@HAS_SMP_TRUE@@TEST_smpstrongapa01_TRUE@am__EXEEXT_60 = smpstrongapa01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpswitchextension01_TRUE@am__EXEEXT_61 = smpswitchextension01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpthreadlife01_TRUE@am__EXEEXT_62 = smpthreadlife01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpthreadpin01_TRUE@am__EXEEXT_63 = smpthreadpin01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpunsupported01_TRUE@am__EXEEXT_64 = smpunsupported01$(EXEEXT)
+@HAS_SMP_TRUE@@TEST_smpwakeafter01_TRUE@am__EXEEXT_65 = smpwakeafter01$(EXEEXT)
+am__EXEEXT_66 = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
 	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
 	$(am__EXEEXT_7) $(am__EXEEXT_8) $(am__EXEEXT_9) \
 	$(am__EXEEXT_10) $(am__EXEEXT_11) $(am__EXEEXT_12) \
@@ -373,11 +422,60 @@
 	$(am__EXEEXT_49) $(am__EXEEXT_50) $(am__EXEEXT_51) \
 	$(am__EXEEXT_52) $(am__EXEEXT_53) $(am__EXEEXT_54) \
 	$(am__EXEEXT_55) $(am__EXEEXT_56) $(am__EXEEXT_57) \
-	$(am__EXEEXT_58) $(am__EXEEXT_59)
+	$(am__EXEEXT_58) $(am__EXEEXT_59) $(am__EXEEXT_60) \
+	$(am__EXEEXT_61) $(am__EXEEXT_62) $(am__EXEEXT_63) \
+	$(am__EXEEXT_64) $(am__EXEEXT_65)
 PROGRAMS = $(noinst_PROGRAMS)
+am__dpcp01_SOURCES_DIST = dpcp01/init.c
+am__dirstamp = $(am__leading_dot)dirstamp
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@am_dpcp01_OBJECTS =  \
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@	dpcp01/dpcp01-init.$(OBJEXT)
+dpcp01_OBJECTS = $(am_dpcp01_OBJECTS)
+dpcp01_LDADD = $(LDADD)
+dpcp01_DEPENDENCIES = $(RTEMS_ROOT)lib/libbsp/@RTEMS_CPU@/@RTEMS_BSP_FAMILY@/librtemsbsp.a \
+	$(RTEMS_ROOT)cpukit/librtemscpu.a \
+	$(RTEMS_ROOT)cpukit/librtemstest.a
+am__dpcp02_SOURCES_DIST = dpcp02/init.c
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@am_dpcp02_OBJECTS =  \
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@	dpcp02/dpcp02-init.$(OBJEXT)
+dpcp02_OBJECTS = $(am_dpcp02_OBJECTS)
+dpcp02_LDADD = $(LDADD)
+dpcp02_DEPENDENCIES = $(RTEMS_ROOT)lib/libbsp/@RTEMS_CPU@/@RTEMS_BSP_FAMILY@/librtemsbsp.a \
+	$(RTEMS_ROOT)cpukit/librtemscpu.a \
+	$(RTEMS_ROOT)cpukit/librtemstest.a
+am__fmlp01_SOURCES_DIST = fmlp01/init.c
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@am_fmlp01_OBJECTS =  \
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@	fmlp01/fmlp01-init.$(OBJEXT)
+fmlp01_OBJECTS = $(am_fmlp01_OBJECTS)
+fmlp01_LDADD = $(LDADD)
+fmlp01_DEPENDENCIES = $(RTEMS_ROOT)lib/libbsp/@RTEMS_CPU@/@RTEMS_BSP_FAMILY@/librtemsbsp.a \
+	$(RTEMS_ROOT)cpukit/librtemscpu.a \
+	$(RTEMS_ROOT)cpukit/librtemstest.a
+am__hdga01_SOURCES_DIST = hdga01/init.c
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@am_hdga01_OBJECTS =  \
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@	hdga01/hdga01-init.$(OBJEXT)
+hdga01_OBJECTS = $(am_hdga01_OBJECTS)
+hdga01_LDADD = $(LDADD)
+hdga01_DEPENDENCIES = $(RTEMS_ROOT)lib/libbsp/@RTEMS_CPU@/@RTEMS_BSP_FAMILY@/librtemsbsp.a \
+	$(RTEMS_ROOT)cpukit/librtemscpu.a \
+	$(RTEMS_ROOT)cpukit/librtemstest.a
+am__mpcp01_SOURCES_DIST = mpcp01/init.c
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@am_mpcp01_OBJECTS =  \
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@	mpcp01/mpcp01-init.$(OBJEXT)
+mpcp01_OBJECTS = $(am_mpcp01_OBJECTS)
+mpcp01_LDADD = $(LDADD)
+mpcp01_DEPENDENCIES = $(RTEMS_ROOT)lib/libbsp/@RTEMS_CPU@/@RTEMS_BSP_FAMILY@/librtemsbsp.a \
+	$(RTEMS_ROOT)cpukit/librtemscpu.a \
+	$(RTEMS_ROOT)cpukit/librtemstest.a
+am__overhead_SOURCES_DIST = overhead/init.c
+@HAS_SMP_TRUE@@TEST_overhead_TRUE@am_overhead_OBJECTS = overhead/overhead-init.$(OBJEXT)
+overhead_OBJECTS = $(am_overhead_OBJECTS)
+overhead_LDADD = $(LDADD)
+overhead_DEPENDENCIES = $(RTEMS_ROOT)lib/libbsp/@RTEMS_CPU@/@RTEMS_BSP_FAMILY@/librtemsbsp.a \
+	$(RTEMS_ROOT)cpukit/librtemscpu.a \
+	$(RTEMS_ROOT)cpukit/librtemstest.a
 am__smp01_SOURCES_DIST = smp01/init.c smp01/tasks.c smp01/system.h \
 	../support/src/locked_print.c
-am__dirstamp = $(am__leading_dot)dirstamp
 @HAS_SMP_TRUE@@TEST_smp01_TRUE@am_smp01_OBJECTS =  \
 @HAS_SMP_TRUE@@TEST_smp01_TRUE@	smp01/smp01-init.$(OBJEXT) \
 @HAS_SMP_TRUE@@TEST_smp01_TRUE@	smp01/smp01-tasks.$(OBJEXT) \
@@ -822,15 +920,117 @@
 smpwakeafter01_DEPENDENCIES = $(RTEMS_ROOT)lib/libbsp/@RTEMS_CPU@/@RTEMS_BSP_FAMILY@/librtemsbsp.a \
 	$(RTEMS_ROOT)cpukit/librtemscpu.a \
 	$(RTEMS_ROOT)cpukit/librtemstest.a
+AM_V_P = $(am__v_P_@AM_V@)
+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
+am__v_P_0 = false
+am__v_P_1 = :
+AM_V_GEN = $(am__v_GEN_@AM_V@)
+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
+am__v_GEN_0 = @echo "  GEN     " $@;
+am__v_GEN_1 = 
+AM_V_at = $(am__v_at_@AM_V@)
+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
+am__v_at_0 = @
+am__v_at_1 = 
 DEFAULT_INCLUDES = -I.@am__isrc@
 depcomp = $(SHELL) $(top_srcdir)/../../depcomp
-am__depfiles_maybe = depfiles
+am__maybe_remake_depfiles = depfiles
+am__depfiles_remade = ../support/src/$(DEPDIR)/smp01-locked_print.Po \
+	../support/src/$(DEPDIR)/smp02-locked_print.Po \
+	../support/src/$(DEPDIR)/smp03-locked_print.Po \
+	../support/src/$(DEPDIR)/smp05-locked_print.Po \
+	../support/src/$(DEPDIR)/smp07-locked_print.Po \
+	../support/src/$(DEPDIR)/smp08-locked_print.Po \
+	../support/src/$(DEPDIR)/smp09-locked_print.Po \
+	../support/src/$(DEPDIR)/smpclock01-spin.Po \
+	dpcp01/$(DEPDIR)/dpcp01-init.Po \
+	dpcp02/$(DEPDIR)/dpcp02-init.Po \
+	fmlp01/$(DEPDIR)/fmlp01-init.Po \
+	hdga01/$(DEPDIR)/hdga01-init.Po \
+	mpcp01/$(DEPDIR)/mpcp01-init.Po \
+	overhead/$(DEPDIR)/overhead-init.Po \
+	smp01/$(DEPDIR)/smp01-init.Po smp01/$(DEPDIR)/smp01-tasks.Po \
+	smp02/$(DEPDIR)/smp02-init.Po smp02/$(DEPDIR)/smp02-tasks.Po \
+	smp03/$(DEPDIR)/smp03-init.Po smp03/$(DEPDIR)/smp03-tasks.Po \
+	smp05/$(DEPDIR)/smp05-init.Po smp07/$(DEPDIR)/smp07-init.Po \
+	smp08/$(DEPDIR)/smp08-init.Po smp08/$(DEPDIR)/smp08-tasks.Po \
+	smp09/$(DEPDIR)/smp09-init.Po \
+	smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po \
+	smpatomic01/$(DEPDIR)/smpatomic01-init.Po \
+	smpcache01/$(DEPDIR)/smpcache01-init.Po \
+	smpcapture01/$(DEPDIR)/smpcapture01-init.Po \
+	smpcapture02/$(DEPDIR)/smpcapture02-init.Po \
+	smpclock01/$(DEPDIR)/smpclock01-init.Po \
+	smpfatal01/$(DEPDIR)/smpfatal01-init.Po \
+	smpfatal02/$(DEPDIR)/smpfatal02-init.Po \
+	smpfatal03/$(DEPDIR)/smpfatal03-init.Po \
+	smpfatal04/$(DEPDIR)/smpfatal04-init.Po \
+	smpfatal05/$(DEPDIR)/smpfatal05-init.Po \
+	smpfatal06/$(DEPDIR)/smpfatal06-init.Po \
+	smpfatal08/$(DEPDIR)/smpfatal08-init.Po \
+	smpfatal09/$(DEPDIR)/smpfatal09-init.Po \
+	smpipi01/$(DEPDIR)/smpipi01-init.Po \
+	smpload01/$(DEPDIR)/smpload01-init.Po \
+	smplock01/$(DEPDIR)/smplock01-init.Po \
+	smpmigration01/$(DEPDIR)/smpmigration01-init.Po \
+	smpmigration02/$(DEPDIR)/smpmigration02-init.Po \
+	smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po \
+	smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po \
+	smpmutex01/$(DEPDIR)/smpmutex01-init.Po \
+	smpmutex02/$(DEPDIR)/smpmutex02-init.Po \
+	smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po \
+	smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po \
+	smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po \
+	smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po \
+	smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po \
+	smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po \
+	smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po \
+	smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po \
+	smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po \
+	smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po \
+	smpschededf01/$(DEPDIR)/smpschededf01-init.Po \
+	smpschededf02/$(DEPDIR)/smpschededf02-init.Po \
+	smpschededf03/$(DEPDIR)/smpschededf03-init.Po \
+	smpschededf04/$(DEPDIR)/smpschededf04-init.Po \
+	smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po \
+	smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po \
+	smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po \
+	smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po \
+	smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po \
+	smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po \
+	smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po \
+	smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po \
+	smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po \
+	smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po \
+	smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po \
+	smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po \
+	smpsignal01/$(DEPDIR)/smpsignal01-init.Po \
+	smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po \
+	smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po \
+	smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po \
+	smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po \
+	smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po \
+	smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po
 am__mv = mv -f
+AM_V_lt = $(am__v_lt_@AM_V@)
+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
+am__v_lt_0 = --silent
+am__v_lt_1 = 
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+AM_V_CC = $(am__v_CC_@AM_V@)
+am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
+am__v_CC_0 = @echo "  CC      " $@;
+am__v_CC_1 = 
 CCLD = $(CC)
 LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
-SOURCES = $(smp01_SOURCES) $(smp02_SOURCES) $(smp03_SOURCES) \
+AM_V_CCLD = $(am__v_CCLD_@AM_V@)
+am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
+am__v_CCLD_0 = @echo "  CCLD    " $@;
+am__v_CCLD_1 = 
+SOURCES = $(dpcp01_SOURCES) $(dpcp02_SOURCES) $(fmlp01_SOURCES) \
+	$(hdga01_SOURCES) $(mpcp01_SOURCES) $(overhead_SOURCES) \
+	$(smp01_SOURCES) $(smp02_SOURCES) $(smp03_SOURCES) \
 	$(smp05_SOURCES) $(smp07_SOURCES) $(smp08_SOURCES) \
 	$(smp09_SOURCES) $(smpaffinity01_SOURCES) \
 	$(smpatomic01_SOURCES) $(smpcache01_SOURCES) \
@@ -858,7 +1058,10 @@
 	$(smpstrongapa01_SOURCES) $(smpswitchextension01_SOURCES) \
 	$(smpthreadlife01_SOURCES) $(smpthreadpin01_SOURCES) \
 	$(smpunsupported01_SOURCES) $(smpwakeafter01_SOURCES)
-DIST_SOURCES = $(am__smp01_SOURCES_DIST) $(am__smp02_SOURCES_DIST) \
+DIST_SOURCES = $(am__dpcp01_SOURCES_DIST) $(am__dpcp02_SOURCES_DIST) \
+	$(am__fmlp01_SOURCES_DIST) $(am__hdga01_SOURCES_DIST) \
+	$(am__mpcp01_SOURCES_DIST) $(am__overhead_SOURCES_DIST) \
+	$(am__smp01_SOURCES_DIST) $(am__smp02_SOURCES_DIST) \
 	$(am__smp03_SOURCES_DIST) $(am__smp05_SOURCES_DIST) \
 	$(am__smp07_SOURCES_DIST) $(am__smp08_SOURCES_DIST) \
 	$(am__smp09_SOURCES_DIST) $(am__smpaffinity01_SOURCES_DIST) \
@@ -1005,6 +1235,12 @@
 SHELL = @SHELL@
 SIZE = @SIZE@
 STRIP = @STRIP@
+TEST_FLAGS_dpcp01 = @TEST_FLAGS_dpcp01@
+TEST_FLAGS_dpcp02 = @TEST_FLAGS_dpcp02@
+TEST_FLAGS_fmlp01 = @TEST_FLAGS_fmlp01@
+TEST_FLAGS_hdga01 = @TEST_FLAGS_hdga01@
+TEST_FLAGS_mpcp01 = @TEST_FLAGS_mpcp01@
+TEST_FLAGS_overhead = @TEST_FLAGS_overhead@
 TEST_FLAGS_smp01 = @TEST_FLAGS_smp01@
 TEST_FLAGS_smp02 = @TEST_FLAGS_smp02@
 TEST_FLAGS_smp03 = @TEST_FLAGS_smp03@
@@ -1108,6 +1344,7 @@
 prefix = @prefix@
 program_transform_name = @program_transform_name@
 psdir = @psdir@
+runstatedir = @runstatedir@
 sbindir = @sbindir@
 sharedstatedir = @sharedstatedir@
 srcdir = @srcdir@
@@ -1138,17 +1375,19 @@
 	$(am__append_55) $(am__append_58) $(am__append_61) \
 	$(am__append_64) $(am__append_67) $(am__append_70) \
 	$(am__append_73) $(am__append_76) $(am__append_79) \
-	$(am__append_82) $(am__append_85) $(am__append_88) \
-	$(am__append_91) $(am__append_94) $(am__append_97) \
-	$(am__append_100) $(am__append_103) $(am__append_106) \
-	$(am__append_109) $(am__append_112) $(am__append_115) \
-	$(am__append_118) $(am__append_121) $(am__append_124) \
-	$(am__append_127) $(am__append_130) $(am__append_133) \
-	$(am__append_136) $(am__append_139) $(am__append_142) \
-	$(am__append_145) $(am__append_148) $(am__append_151) \
-	$(am__append_154) $(am__append_157) $(am__append_160) \
-	$(am__append_163) $(am__append_166) $(am__append_169) \
-	$(am__append_172) $(am__append_175)
+	$(am__append_82) $(am__append_84) $(am__append_86) \
+	$(am__append_88) $(am__append_90) $(am__append_92) \
+	$(am__append_94) $(am__append_97) $(am__append_100) \
+	$(am__append_103) $(am__append_106) $(am__append_109) \
+	$(am__append_112) $(am__append_115) $(am__append_118) \
+	$(am__append_121) $(am__append_124) $(am__append_127) \
+	$(am__append_130) $(am__append_133) $(am__append_136) \
+	$(am__append_139) $(am__append_142) $(am__append_145) \
+	$(am__append_148) $(am__append_151) $(am__append_154) \
+	$(am__append_157) $(am__append_160) $(am__append_163) \
+	$(am__append_166) $(am__append_169) $(am__append_172) \
+	$(am__append_175) $(am__append_178) $(am__append_181) \
+	$(am__append_184) $(am__append_187)
 smp_screens = $(am__append_2) $(am__append_5) $(am__append_8) \
 	$(am__append_11) $(am__append_14) $(am__append_17) \
 	$(am__append_20) $(am__append_23) $(am__append_26) \
@@ -1158,17 +1397,17 @@
 	$(am__append_56) $(am__append_59) $(am__append_62) \
 	$(am__append_65) $(am__append_68) $(am__append_71) \
 	$(am__append_74) $(am__append_77) $(am__append_80) \
-	$(am__append_83) $(am__append_86) $(am__append_89) \
-	$(am__append_92) $(am__append_95) $(am__append_98) \
-	$(am__append_101) $(am__append_104) $(am__append_107) \
-	$(am__append_110) $(am__append_113) $(am__append_116) \
-	$(am__append_119) $(am__append_122) $(am__append_125) \
-	$(am__append_128) $(am__append_131) $(am__append_134) \
-	$(am__append_137) $(am__append_140) $(am__append_143) \
-	$(am__append_146) $(am__append_149) $(am__append_152) \
-	$(am__append_155) $(am__append_158) $(am__append_161) \
-	$(am__append_164) $(am__append_167) $(am__append_170) \
-	$(am__append_173) $(am__append_176)
+	$(am__append_95) $(am__append_98) $(am__append_101) \
+	$(am__append_104) $(am__append_107) $(am__append_110) \
+	$(am__append_113) $(am__append_116) $(am__append_119) \
+	$(am__append_122) $(am__append_125) $(am__append_128) \
+	$(am__append_131) $(am__append_134) $(am__append_137) \
+	$(am__append_140) $(am__append_143) $(am__append_146) \
+	$(am__append_149) $(am__append_152) $(am__append_155) \
+	$(am__append_158) $(am__append_161) $(am__append_164) \
+	$(am__append_167) $(am__append_170) $(am__append_173) \
+	$(am__append_176) $(am__append_179) $(am__append_182) \
+	$(am__append_185) $(am__append_188)
 smp_docs = $(am__append_3) $(am__append_6) $(am__append_9) \
 	$(am__append_12) $(am__append_15) $(am__append_18) \
 	$(am__append_21) $(am__append_24) $(am__append_27) \
@@ -1178,17 +1417,19 @@
 	$(am__append_57) $(am__append_60) $(am__append_63) \
 	$(am__append_66) $(am__append_69) $(am__append_72) \
 	$(am__append_75) $(am__append_78) $(am__append_81) \
-	$(am__append_84) $(am__append_87) $(am__append_90) \
-	$(am__append_93) $(am__append_96) $(am__append_99) \
-	$(am__append_102) $(am__append_105) $(am__append_108) \
-	$(am__append_111) $(am__append_114) $(am__append_117) \
-	$(am__append_120) $(am__append_123) $(am__append_126) \
-	$(am__append_129) $(am__append_132) $(am__append_135) \
-	$(am__append_138) $(am__append_141) $(am__append_144) \
-	$(am__append_147) $(am__append_150) $(am__append_153) \
-	$(am__append_156) $(am__append_159) $(am__append_162) \
-	$(am__append_165) $(am__append_168) $(am__append_171) \
-	$(am__append_174) $(am__append_177)
+	$(am__append_83) $(am__append_85) $(am__append_87) \
+	$(am__append_89) $(am__append_91) $(am__append_93) \
+	$(am__append_96) $(am__append_99) $(am__append_102) \
+	$(am__append_105) $(am__append_108) $(am__append_111) \
+	$(am__append_114) $(am__append_117) $(am__append_120) \
+	$(am__append_123) $(am__append_126) $(am__append_129) \
+	$(am__append_132) $(am__append_135) $(am__append_138) \
+	$(am__append_141) $(am__append_144) $(am__append_147) \
+	$(am__append_150) $(am__append_153) $(am__append_156) \
+	$(am__append_159) $(am__append_162) $(am__append_165) \
+	$(am__append_168) $(am__append_171) $(am__append_174) \
+	$(am__append_177) $(am__append_180) $(am__append_183) \
+	$(am__append_186) $(am__append_189)
 support_includes = -I$(top_srcdir)/../support/include
 @HAS_SMP_TRUE@@TEST_smp01_TRUE@smp01_SOURCES = smp01/init.c smp01/tasks.c smp01/system.h \
 @HAS_SMP_TRUE@@TEST_smp01_TRUE@	../support/src/locked_print.c
@@ -1306,6 +1547,30 @@
 @HAS_SMP_TRUE@@TEST_smpmrsp01_TRUE@smpmrsp01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_smpmrsp01) \
 @HAS_SMP_TRUE@@TEST_smpmrsp01_TRUE@	$(support_includes)
 
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@dpcp01_SOURCES = dpcp01/init.c
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@dpcp01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_dpcp01) \
+@HAS_SMP_TRUE@@TEST_dpcp01_TRUE@	$(support_includes)
+
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@dpcp02_SOURCES = dpcp02/init.c
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@dpcp02_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_dpcp02) \
+@HAS_SMP_TRUE@@TEST_dpcp02_TRUE@	$(support_includes)
+
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@mpcp01_SOURCES = mpcp01/init.c
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@mpcp01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_mpcp01) \
+@HAS_SMP_TRUE@@TEST_mpcp01_TRUE@	$(support_includes)
+
+@HAS_SMP_TRUE@@TEST_overhead_TRUE@overhead_SOURCES = overhead/init.c
+@HAS_SMP_TRUE@@TEST_overhead_TRUE@overhead_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_overhead) \
+@HAS_SMP_TRUE@@TEST_overhead_TRUE@	$(support_includes)
+
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@fmlp01_SOURCES = fmlp01/init.c
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@fmlp01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_fmlp01) \
+@HAS_SMP_TRUE@@TEST_fmlp01_TRUE@	$(support_includes)
+
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@hdga01_SOURCES = hdga01/init.c
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@hdga01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_hdga01) \
+@HAS_SMP_TRUE@@TEST_hdga01_TRUE@	$(support_includes)
+
 @HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@smpmulticast01_SOURCES = smpmulticast01/init.c
 @HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@smpmulticast01_CPPFLAGS = $(AM_CPPFLAGS) $(TEST_FLAGS_smpmulticast01) \
 @HAS_SMP_TRUE@@TEST_smpmulticast01_TRUE@	$(support_includes)
@@ -1494,6 +1758,78 @@
 
 clean-noinstPROGRAMS:
 	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
+dpcp01/$(am__dirstamp):
+	@$(MKDIR_P) dpcp01
+	@: > dpcp01/$(am__dirstamp)
+dpcp01/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) dpcp01/$(DEPDIR)
+	@: > dpcp01/$(DEPDIR)/$(am__dirstamp)
+dpcp01/dpcp01-init.$(OBJEXT): dpcp01/$(am__dirstamp) \
+	dpcp01/$(DEPDIR)/$(am__dirstamp)
+
+dpcp01$(EXEEXT): $(dpcp01_OBJECTS) $(dpcp01_DEPENDENCIES) $(EXTRA_dpcp01_DEPENDENCIES) 
+	@rm -f dpcp01$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(dpcp01_OBJECTS) $(dpcp01_LDADD) $(LIBS)
+dpcp02/$(am__dirstamp):
+	@$(MKDIR_P) dpcp02
+	@: > dpcp02/$(am__dirstamp)
+dpcp02/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) dpcp02/$(DEPDIR)
+	@: > dpcp02/$(DEPDIR)/$(am__dirstamp)
+dpcp02/dpcp02-init.$(OBJEXT): dpcp02/$(am__dirstamp) \
+	dpcp02/$(DEPDIR)/$(am__dirstamp)
+
+dpcp02$(EXEEXT): $(dpcp02_OBJECTS) $(dpcp02_DEPENDENCIES) $(EXTRA_dpcp02_DEPENDENCIES) 
+	@rm -f dpcp02$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(dpcp02_OBJECTS) $(dpcp02_LDADD) $(LIBS)
+fmlp01/$(am__dirstamp):
+	@$(MKDIR_P) fmlp01
+	@: > fmlp01/$(am__dirstamp)
+fmlp01/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) fmlp01/$(DEPDIR)
+	@: > fmlp01/$(DEPDIR)/$(am__dirstamp)
+fmlp01/fmlp01-init.$(OBJEXT): fmlp01/$(am__dirstamp) \
+	fmlp01/$(DEPDIR)/$(am__dirstamp)
+
+fmlp01$(EXEEXT): $(fmlp01_OBJECTS) $(fmlp01_DEPENDENCIES) $(EXTRA_fmlp01_DEPENDENCIES) 
+	@rm -f fmlp01$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(fmlp01_OBJECTS) $(fmlp01_LDADD) $(LIBS)
+hdga01/$(am__dirstamp):
+	@$(MKDIR_P) hdga01
+	@: > hdga01/$(am__dirstamp)
+hdga01/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) hdga01/$(DEPDIR)
+	@: > hdga01/$(DEPDIR)/$(am__dirstamp)
+hdga01/hdga01-init.$(OBJEXT): hdga01/$(am__dirstamp) \
+	hdga01/$(DEPDIR)/$(am__dirstamp)
+
+hdga01$(EXEEXT): $(hdga01_OBJECTS) $(hdga01_DEPENDENCIES) $(EXTRA_hdga01_DEPENDENCIES) 
+	@rm -f hdga01$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(hdga01_OBJECTS) $(hdga01_LDADD) $(LIBS)
+mpcp01/$(am__dirstamp):
+	@$(MKDIR_P) mpcp01
+	@: > mpcp01/$(am__dirstamp)
+mpcp01/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) mpcp01/$(DEPDIR)
+	@: > mpcp01/$(DEPDIR)/$(am__dirstamp)
+mpcp01/mpcp01-init.$(OBJEXT): mpcp01/$(am__dirstamp) \
+	mpcp01/$(DEPDIR)/$(am__dirstamp)
+
+mpcp01$(EXEEXT): $(mpcp01_OBJECTS) $(mpcp01_DEPENDENCIES) $(EXTRA_mpcp01_DEPENDENCIES) 
+	@rm -f mpcp01$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(mpcp01_OBJECTS) $(mpcp01_LDADD) $(LIBS)
+overhead/$(am__dirstamp):
+	@$(MKDIR_P) overhead
+	@: > overhead/$(am__dirstamp)
+overhead/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) overhead/$(DEPDIR)
+	@: > overhead/$(DEPDIR)/$(am__dirstamp)
+overhead/overhead-init.$(OBJEXT): overhead/$(am__dirstamp) \
+	overhead/$(DEPDIR)/$(am__dirstamp)
+
+overhead$(EXEEXT): $(overhead_OBJECTS) $(overhead_DEPENDENCIES) $(EXTRA_overhead_DEPENDENCIES) 
+	@rm -f overhead$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(overhead_OBJECTS) $(overhead_LDADD) $(LIBS)
 smp01/$(am__dirstamp):
 	@$(MKDIR_P) smp01
 	@: > smp01/$(am__dirstamp)
@@ -2223,13 +2617,20 @@
 smpwakeafter01/smpwakeafter01-init.$(OBJEXT):  \
 	smpwakeafter01/$(am__dirstamp) \
 	smpwakeafter01/$(DEPDIR)/$(am__dirstamp)
+
 smpwakeafter01$(EXEEXT): $(smpwakeafter01_OBJECTS) $(smpwakeafter01_DEPENDENCIES) $(EXTRA_smpwakeafter01_DEPENDENCIES) 
 	@rm -f smpwakeafter01$(EXEEXT)
-	$(LINK) $(smpwakeafter01_OBJECTS) $(smpwakeafter01_LDADD) $(LIBS)
+	$(AM_V_CCLD)$(LINK) $(smpwakeafter01_OBJECTS) $(smpwakeafter01_LDADD) $(LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
 	-rm -f ../support/src/*.$(OBJEXT)
+	-rm -f dpcp01/*.$(OBJEXT)
+	-rm -f dpcp02/*.$(OBJEXT)
+	-rm -f fmlp01/*.$(OBJEXT)
+	-rm -f hdga01/*.$(OBJEXT)
+	-rm -f mpcp01/*.$(OBJEXT)
+	-rm -f overhead/*.$(OBJEXT)
 	-rm -f smp01/*.$(OBJEXT)
 	-rm -f smp02/*.$(OBJEXT)
 	-rm -f smp03/*.$(OBJEXT)
@@ -2293,1168 +2694,1253 @@
 distclean-compile:
 	-rm -f *.tab.c
 
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp01-locked_print.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp02-locked_print.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp03-locked_print.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp05-locked_print.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp07-locked_print.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp08-locked_print.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp09-locked_print.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smpclock01-spin.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp01/$(DEPDIR)/smp01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp01/$(DEPDIR)/smp01-tasks.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp02/$(DEPDIR)/smp02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp02/$(DEPDIR)/smp02-tasks.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp03/$(DEPDIR)/smp03-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp03/$(DEPDIR)/smp03-tasks.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp05/$(DEPDIR)/smp05-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp07/$(DEPDIR)/smp07-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp08/$(DEPDIR)/smp08-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp08/$(DEPDIR)/smp08-tasks.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smp09/$(DEPDIR)/smp09-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpatomic01/$(DEPDIR)/smpatomic01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpcache01/$(DEPDIR)/smpcache01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpcapture01/$(DEPDIR)/smpcapture01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpcapture02/$(DEPDIR)/smpcapture02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpclock01/$(DEPDIR)/smpclock01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal01/$(DEPDIR)/smpfatal01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal02/$(DEPDIR)/smpfatal02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal03/$(DEPDIR)/smpfatal03-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal04/$(DEPDIR)/smpfatal04-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal05/$(DEPDIR)/smpfatal05-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal06/$(DEPDIR)/smpfatal06-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal08/$(DEPDIR)/smpfatal08-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpfatal09/$(DEPDIR)/smpfatal09-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpipi01/$(DEPDIR)/smpipi01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpload01/$(DEPDIR)/smpload01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smplock01/$(DEPDIR)/smplock01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpmigration01/$(DEPDIR)/smpmigration01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpmigration02/$(DEPDIR)/smpmigration02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpmutex01/$(DEPDIR)/smpmutex01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpmutex02/$(DEPDIR)/smpmutex02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschededf01/$(DEPDIR)/smpschededf01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschededf02/$(DEPDIR)/smpschededf02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschededf03/$(DEPDIR)/smpschededf03-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschededf04/$(DEPDIR)/smpschededf04-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpsignal01/$(DEPDIR)/smpsignal01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp01-locked_print.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp02-locked_print.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp03-locked_print.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp05-locked_print.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp07-locked_print.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp08-locked_print.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smp09-locked_print.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@../support/src/$(DEPDIR)/smpclock01-spin.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@dpcp01/$(DEPDIR)/dpcp01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@dpcp02/$(DEPDIR)/dpcp02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@fmlp01/$(DEPDIR)/fmlp01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@hdga01/$(DEPDIR)/hdga01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@mpcp01/$(DEPDIR)/mpcp01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@overhead/$(DEPDIR)/overhead-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp01/$(DEPDIR)/smp01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp01/$(DEPDIR)/smp01-tasks.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp02/$(DEPDIR)/smp02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp02/$(DEPDIR)/smp02-tasks.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp03/$(DEPDIR)/smp03-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp03/$(DEPDIR)/smp03-tasks.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp05/$(DEPDIR)/smp05-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp07/$(DEPDIR)/smp07-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp08/$(DEPDIR)/smp08-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp08/$(DEPDIR)/smp08-tasks.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smp09/$(DEPDIR)/smp09-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpatomic01/$(DEPDIR)/smpatomic01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpcache01/$(DEPDIR)/smpcache01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpcapture01/$(DEPDIR)/smpcapture01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpcapture02/$(DEPDIR)/smpcapture02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpclock01/$(DEPDIR)/smpclock01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal01/$(DEPDIR)/smpfatal01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal02/$(DEPDIR)/smpfatal02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal03/$(DEPDIR)/smpfatal03-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal04/$(DEPDIR)/smpfatal04-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal05/$(DEPDIR)/smpfatal05-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal06/$(DEPDIR)/smpfatal06-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal08/$(DEPDIR)/smpfatal08-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpfatal09/$(DEPDIR)/smpfatal09-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpipi01/$(DEPDIR)/smpipi01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpload01/$(DEPDIR)/smpload01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smplock01/$(DEPDIR)/smplock01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpmigration01/$(DEPDIR)/smpmigration01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpmigration02/$(DEPDIR)/smpmigration02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpmutex01/$(DEPDIR)/smpmutex01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpmutex02/$(DEPDIR)/smpmutex02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschededf01/$(DEPDIR)/smpschededf01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschededf02/$(DEPDIR)/smpschededf02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschededf03/$(DEPDIR)/smpschededf03-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschededf04/$(DEPDIR)/smpschededf04-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpsignal01/$(DEPDIR)/smpsignal01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po@am__quote@ # am--include-marker
+
+$(am__depfiles_remade):
+	@$(MKDIR_P) $(@D)
+	@echo '# dummy' >$@-t && $(am__mv) $@-t $@
+
+am--depfiles: $(am__depfiles_remade)
 
 .c.o:
-@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
 @am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
 @am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
 
 .c.obj:
-@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
 @am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
 @am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+dpcp01/dpcp01-init.o: dpcp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dpcp01/dpcp01-init.o -MD -MP -MF dpcp01/$(DEPDIR)/dpcp01-init.Tpo -c -o dpcp01/dpcp01-init.o `test -f 'dpcp01/init.c' || echo '$(srcdir)/'`dpcp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dpcp01/$(DEPDIR)/dpcp01-init.Tpo dpcp01/$(DEPDIR)/dpcp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dpcp01/init.c' object='dpcp01/dpcp01-init.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dpcp01/dpcp01-init.o `test -f 'dpcp01/init.c' || echo '$(srcdir)/'`dpcp01/init.c
+
+dpcp01/dpcp01-init.obj: dpcp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dpcp01/dpcp01-init.obj -MD -MP -MF dpcp01/$(DEPDIR)/dpcp01-init.Tpo -c -o dpcp01/dpcp01-init.obj `if test -f 'dpcp01/init.c'; then $(CYGPATH_W) 'dpcp01/init.c'; else $(CYGPATH_W) '$(srcdir)/dpcp01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dpcp01/$(DEPDIR)/dpcp01-init.Tpo dpcp01/$(DEPDIR)/dpcp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dpcp01/init.c' object='dpcp01/dpcp01-init.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dpcp01/dpcp01-init.obj `if test -f 'dpcp01/init.c'; then $(CYGPATH_W) 'dpcp01/init.c'; else $(CYGPATH_W) '$(srcdir)/dpcp01/init.c'; fi`
+
+dpcp02/dpcp02-init.o: dpcp02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dpcp02/dpcp02-init.o -MD -MP -MF dpcp02/$(DEPDIR)/dpcp02-init.Tpo -c -o dpcp02/dpcp02-init.o `test -f 'dpcp02/init.c' || echo '$(srcdir)/'`dpcp02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dpcp02/$(DEPDIR)/dpcp02-init.Tpo dpcp02/$(DEPDIR)/dpcp02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dpcp02/init.c' object='dpcp02/dpcp02-init.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dpcp02/dpcp02-init.o `test -f 'dpcp02/init.c' || echo '$(srcdir)/'`dpcp02/init.c
+
+dpcp02/dpcp02-init.obj: dpcp02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dpcp02/dpcp02-init.obj -MD -MP -MF dpcp02/$(DEPDIR)/dpcp02-init.Tpo -c -o dpcp02/dpcp02-init.obj `if test -f 'dpcp02/init.c'; then $(CYGPATH_W) 'dpcp02/init.c'; else $(CYGPATH_W) '$(srcdir)/dpcp02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dpcp02/$(DEPDIR)/dpcp02-init.Tpo dpcp02/$(DEPDIR)/dpcp02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dpcp02/init.c' object='dpcp02/dpcp02-init.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpcp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dpcp02/dpcp02-init.obj `if test -f 'dpcp02/init.c'; then $(CYGPATH_W) 'dpcp02/init.c'; else $(CYGPATH_W) '$(srcdir)/dpcp02/init.c'; fi`
+
+fmlp01/fmlp01-init.o: fmlp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmlp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmlp01/fmlp01-init.o -MD -MP -MF fmlp01/$(DEPDIR)/fmlp01-init.Tpo -c -o fmlp01/fmlp01-init.o `test -f 'fmlp01/init.c' || echo '$(srcdir)/'`fmlp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) fmlp01/$(DEPDIR)/fmlp01-init.Tpo fmlp01/$(DEPDIR)/fmlp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='fmlp01/init.c' object='fmlp01/fmlp01-init.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmlp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmlp01/fmlp01-init.o `test -f 'fmlp01/init.c' || echo '$(srcdir)/'`fmlp01/init.c
+
+fmlp01/fmlp01-init.obj: fmlp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmlp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmlp01/fmlp01-init.obj -MD -MP -MF fmlp01/$(DEPDIR)/fmlp01-init.Tpo -c -o fmlp01/fmlp01-init.obj `if test -f 'fmlp01/init.c'; then $(CYGPATH_W) 'fmlp01/init.c'; else $(CYGPATH_W) '$(srcdir)/fmlp01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) fmlp01/$(DEPDIR)/fmlp01-init.Tpo fmlp01/$(DEPDIR)/fmlp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='fmlp01/init.c' object='fmlp01/fmlp01-init.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmlp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmlp01/fmlp01-init.obj `if test -f 'fmlp01/init.c'; then $(CYGPATH_W) 'fmlp01/init.c'; else $(CYGPATH_W) '$(srcdir)/fmlp01/init.c'; fi`
+
+hdga01/hdga01-init.o: hdga01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdga01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hdga01/hdga01-init.o -MD -MP -MF hdga01/$(DEPDIR)/hdga01-init.Tpo -c -o hdga01/hdga01-init.o `test -f 'hdga01/init.c' || echo '$(srcdir)/'`hdga01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) hdga01/$(DEPDIR)/hdga01-init.Tpo hdga01/$(DEPDIR)/hdga01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='hdga01/init.c' object='hdga01/hdga01-init.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdga01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hdga01/hdga01-init.o `test -f 'hdga01/init.c' || echo '$(srcdir)/'`hdga01/init.c
+
+hdga01/hdga01-init.obj: hdga01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdga01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hdga01/hdga01-init.obj -MD -MP -MF hdga01/$(DEPDIR)/hdga01-init.Tpo -c -o hdga01/hdga01-init.obj `if test -f 'hdga01/init.c'; then $(CYGPATH_W) 'hdga01/init.c'; else $(CYGPATH_W) '$(srcdir)/hdga01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) hdga01/$(DEPDIR)/hdga01-init.Tpo hdga01/$(DEPDIR)/hdga01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='hdga01/init.c' object='hdga01/hdga01-init.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdga01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hdga01/hdga01-init.obj `if test -f 'hdga01/init.c'; then $(CYGPATH_W) 'hdga01/init.c'; else $(CYGPATH_W) '$(srcdir)/hdga01/init.c'; fi`
+
+mpcp01/mpcp01-init.o: mpcp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpcp01/mpcp01-init.o -MD -MP -MF mpcp01/$(DEPDIR)/mpcp01-init.Tpo -c -o mpcp01/mpcp01-init.o `test -f 'mpcp01/init.c' || echo '$(srcdir)/'`mpcp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) mpcp01/$(DEPDIR)/mpcp01-init.Tpo mpcp01/$(DEPDIR)/mpcp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='mpcp01/init.c' object='mpcp01/mpcp01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpcp01/mpcp01-init.o `test -f 'mpcp01/init.c' || echo '$(srcdir)/'`mpcp01/init.c
+
+mpcp01/mpcp01-init.obj: mpcp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpcp01/mpcp01-init.obj -MD -MP -MF mpcp01/$(DEPDIR)/mpcp01-init.Tpo -c -o mpcp01/mpcp01-init.obj `if test -f 'mpcp01/init.c'; then $(CYGPATH_W) 'mpcp01/init.c'; else $(CYGPATH_W) '$(srcdir)/mpcp01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) mpcp01/$(DEPDIR)/mpcp01-init.Tpo mpcp01/$(DEPDIR)/mpcp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='mpcp01/init.c' object='mpcp01/mpcp01-init.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpcp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpcp01/mpcp01-init.obj `if test -f 'mpcp01/init.c'; then $(CYGPATH_W) 'mpcp01/init.c'; else $(CYGPATH_W) '$(srcdir)/mpcp01/init.c'; fi`
+
+overhead/overhead-init.o: overhead/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(overhead_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT overhead/overhead-init.o -MD -MP -MF overhead/$(DEPDIR)/overhead-init.Tpo -c -o overhead/overhead-init.o `test -f 'overhead/init.c' || echo '$(srcdir)/'`overhead/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) overhead/$(DEPDIR)/overhead-init.Tpo overhead/$(DEPDIR)/overhead-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='overhead/init.c' object='overhead/overhead-init.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(overhead_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o overhead/overhead-init.o `test -f 'overhead/init.c' || echo '$(srcdir)/'`overhead/init.c
+
+overhead/overhead-init.obj: overhead/init.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(overhead_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT overhead/overhead-init.obj -MD -MP -MF overhead/$(DEPDIR)/overhead-init.Tpo -c -o overhead/overhead-init.obj `if test -f 'overhead/init.c'; then $(CYGPATH_W) 'overhead/init.c'; else $(CYGPATH_W) '$(srcdir)/overhead/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) overhead/$(DEPDIR)/overhead-init.Tpo overhead/$(DEPDIR)/overhead-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='overhead/init.c' object='overhead/overhead-init.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(overhead_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o overhead/overhead-init.obj `if test -f 'overhead/init.c'; then $(CYGPATH_W) 'overhead/init.c'; else $(CYGPATH_W) '$(srcdir)/overhead/init.c'; fi`
 
 smp01/smp01-init.o: smp01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-init.o -MD -MP -MF smp01/$(DEPDIR)/smp01-init.Tpo -c -o smp01/smp01-init.o `test -f 'smp01/init.c' || echo '$(srcdir)/'`smp01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smp01/$(DEPDIR)/smp01-init.Tpo smp01/$(DEPDIR)/smp01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp01/init.c' object='smp01/smp01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-init.o -MD -MP -MF smp01/$(DEPDIR)/smp01-init.Tpo -c -o smp01/smp01-init.o `test -f 'smp01/init.c' || echo '$(srcdir)/'`smp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp01/$(DEPDIR)/smp01-init.Tpo smp01/$(DEPDIR)/smp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp01/init.c' object='smp01/smp01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-init.o `test -f 'smp01/init.c' || echo '$(srcdir)/'`smp01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-init.o `test -f 'smp01/init.c' || echo '$(srcdir)/'`smp01/init.c
 
 smp01/smp01-init.obj: smp01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-init.obj -MD -MP -MF smp01/$(DEPDIR)/smp01-init.Tpo -c -o smp01/smp01-init.obj `if test -f 'smp01/init.c'; then $(CYGPATH_W) 'smp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smp01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp01/$(DEPDIR)/smp01-init.Tpo smp01/$(DEPDIR)/smp01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp01/init.c' object='smp01/smp01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-init.obj -MD -MP -MF smp01/$(DEPDIR)/smp01-init.Tpo -c -o smp01/smp01-init.obj `if test -f 'smp01/init.c'; then $(CYGPATH_W) 'smp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smp01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp01/$(DEPDIR)/smp01-init.Tpo smp01/$(DEPDIR)/smp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp01/init.c' object='smp01/smp01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-init.obj `if test -f 'smp01/init.c'; then $(CYGPATH_W) 'smp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smp01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-init.obj `if test -f 'smp01/init.c'; then $(CYGPATH_W) 'smp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smp01/init.c'; fi`
 
 smp01/smp01-tasks.o: smp01/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-tasks.o -MD -MP -MF smp01/$(DEPDIR)/smp01-tasks.Tpo -c -o smp01/smp01-tasks.o `test -f 'smp01/tasks.c' || echo '$(srcdir)/'`smp01/tasks.c
-@am__fastdepCC_TRUE@	$(am__mv) smp01/$(DEPDIR)/smp01-tasks.Tpo smp01/$(DEPDIR)/smp01-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp01/tasks.c' object='smp01/smp01-tasks.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-tasks.o -MD -MP -MF smp01/$(DEPDIR)/smp01-tasks.Tpo -c -o smp01/smp01-tasks.o `test -f 'smp01/tasks.c' || echo '$(srcdir)/'`smp01/tasks.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp01/$(DEPDIR)/smp01-tasks.Tpo smp01/$(DEPDIR)/smp01-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp01/tasks.c' object='smp01/smp01-tasks.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-tasks.o `test -f 'smp01/tasks.c' || echo '$(srcdir)/'`smp01/tasks.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-tasks.o `test -f 'smp01/tasks.c' || echo '$(srcdir)/'`smp01/tasks.c
 
 smp01/smp01-tasks.obj: smp01/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-tasks.obj -MD -MP -MF smp01/$(DEPDIR)/smp01-tasks.Tpo -c -o smp01/smp01-tasks.obj `if test -f 'smp01/tasks.c'; then $(CYGPATH_W) 'smp01/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp01/tasks.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp01/$(DEPDIR)/smp01-tasks.Tpo smp01/$(DEPDIR)/smp01-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp01/tasks.c' object='smp01/smp01-tasks.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp01/smp01-tasks.obj -MD -MP -MF smp01/$(DEPDIR)/smp01-tasks.Tpo -c -o smp01/smp01-tasks.obj `if test -f 'smp01/tasks.c'; then $(CYGPATH_W) 'smp01/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp01/tasks.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp01/$(DEPDIR)/smp01-tasks.Tpo smp01/$(DEPDIR)/smp01-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp01/tasks.c' object='smp01/smp01-tasks.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-tasks.obj `if test -f 'smp01/tasks.c'; then $(CYGPATH_W) 'smp01/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp01/tasks.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp01/smp01-tasks.obj `if test -f 'smp01/tasks.c'; then $(CYGPATH_W) 'smp01/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp01/tasks.c'; fi`
 
 ../support/src/smp01-locked_print.o: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp01-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp01-locked_print.Tpo -c -o ../support/src/smp01-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp01-locked_print.Tpo ../support/src/$(DEPDIR)/smp01-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp01-locked_print.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp01-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp01-locked_print.Tpo -c -o ../support/src/smp01-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp01-locked_print.Tpo ../support/src/$(DEPDIR)/smp01-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp01-locked_print.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp01-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp01-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
 
 ../support/src/smp01-locked_print.obj: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp01-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp01-locked_print.Tpo -c -o ../support/src/smp01-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp01-locked_print.Tpo ../support/src/$(DEPDIR)/smp01-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp01-locked_print.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp01-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp01-locked_print.Tpo -c -o ../support/src/smp01-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp01-locked_print.Tpo ../support/src/$(DEPDIR)/smp01-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp01-locked_print.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp01-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp01-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
 
 smp02/smp02-init.o: smp02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-init.o -MD -MP -MF smp02/$(DEPDIR)/smp02-init.Tpo -c -o smp02/smp02-init.o `test -f 'smp02/init.c' || echo '$(srcdir)/'`smp02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smp02/$(DEPDIR)/smp02-init.Tpo smp02/$(DEPDIR)/smp02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp02/init.c' object='smp02/smp02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-init.o -MD -MP -MF smp02/$(DEPDIR)/smp02-init.Tpo -c -o smp02/smp02-init.o `test -f 'smp02/init.c' || echo '$(srcdir)/'`smp02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp02/$(DEPDIR)/smp02-init.Tpo smp02/$(DEPDIR)/smp02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp02/init.c' object='smp02/smp02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-init.o `test -f 'smp02/init.c' || echo '$(srcdir)/'`smp02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-init.o `test -f 'smp02/init.c' || echo '$(srcdir)/'`smp02/init.c
 
 smp02/smp02-init.obj: smp02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-init.obj -MD -MP -MF smp02/$(DEPDIR)/smp02-init.Tpo -c -o smp02/smp02-init.obj `if test -f 'smp02/init.c'; then $(CYGPATH_W) 'smp02/init.c'; else $(CYGPATH_W) '$(srcdir)/smp02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp02/$(DEPDIR)/smp02-init.Tpo smp02/$(DEPDIR)/smp02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp02/init.c' object='smp02/smp02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-init.obj -MD -MP -MF smp02/$(DEPDIR)/smp02-init.Tpo -c -o smp02/smp02-init.obj `if test -f 'smp02/init.c'; then $(CYGPATH_W) 'smp02/init.c'; else $(CYGPATH_W) '$(srcdir)/smp02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp02/$(DEPDIR)/smp02-init.Tpo smp02/$(DEPDIR)/smp02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp02/init.c' object='smp02/smp02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-init.obj `if test -f 'smp02/init.c'; then $(CYGPATH_W) 'smp02/init.c'; else $(CYGPATH_W) '$(srcdir)/smp02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-init.obj `if test -f 'smp02/init.c'; then $(CYGPATH_W) 'smp02/init.c'; else $(CYGPATH_W) '$(srcdir)/smp02/init.c'; fi`
 
 smp02/smp02-tasks.o: smp02/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-tasks.o -MD -MP -MF smp02/$(DEPDIR)/smp02-tasks.Tpo -c -o smp02/smp02-tasks.o `test -f 'smp02/tasks.c' || echo '$(srcdir)/'`smp02/tasks.c
-@am__fastdepCC_TRUE@	$(am__mv) smp02/$(DEPDIR)/smp02-tasks.Tpo smp02/$(DEPDIR)/smp02-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp02/tasks.c' object='smp02/smp02-tasks.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-tasks.o -MD -MP -MF smp02/$(DEPDIR)/smp02-tasks.Tpo -c -o smp02/smp02-tasks.o `test -f 'smp02/tasks.c' || echo '$(srcdir)/'`smp02/tasks.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp02/$(DEPDIR)/smp02-tasks.Tpo smp02/$(DEPDIR)/smp02-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp02/tasks.c' object='smp02/smp02-tasks.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-tasks.o `test -f 'smp02/tasks.c' || echo '$(srcdir)/'`smp02/tasks.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-tasks.o `test -f 'smp02/tasks.c' || echo '$(srcdir)/'`smp02/tasks.c
 
 smp02/smp02-tasks.obj: smp02/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-tasks.obj -MD -MP -MF smp02/$(DEPDIR)/smp02-tasks.Tpo -c -o smp02/smp02-tasks.obj `if test -f 'smp02/tasks.c'; then $(CYGPATH_W) 'smp02/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp02/tasks.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp02/$(DEPDIR)/smp02-tasks.Tpo smp02/$(DEPDIR)/smp02-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp02/tasks.c' object='smp02/smp02-tasks.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp02/smp02-tasks.obj -MD -MP -MF smp02/$(DEPDIR)/smp02-tasks.Tpo -c -o smp02/smp02-tasks.obj `if test -f 'smp02/tasks.c'; then $(CYGPATH_W) 'smp02/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp02/tasks.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp02/$(DEPDIR)/smp02-tasks.Tpo smp02/$(DEPDIR)/smp02-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp02/tasks.c' object='smp02/smp02-tasks.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-tasks.obj `if test -f 'smp02/tasks.c'; then $(CYGPATH_W) 'smp02/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp02/tasks.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp02/smp02-tasks.obj `if test -f 'smp02/tasks.c'; then $(CYGPATH_W) 'smp02/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp02/tasks.c'; fi`
 
 ../support/src/smp02-locked_print.o: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp02-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp02-locked_print.Tpo -c -o ../support/src/smp02-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp02-locked_print.Tpo ../support/src/$(DEPDIR)/smp02-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp02-locked_print.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp02-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp02-locked_print.Tpo -c -o ../support/src/smp02-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp02-locked_print.Tpo ../support/src/$(DEPDIR)/smp02-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp02-locked_print.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp02-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp02-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
 
 ../support/src/smp02-locked_print.obj: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp02-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp02-locked_print.Tpo -c -o ../support/src/smp02-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp02-locked_print.Tpo ../support/src/$(DEPDIR)/smp02-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp02-locked_print.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp02-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp02-locked_print.Tpo -c -o ../support/src/smp02-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp02-locked_print.Tpo ../support/src/$(DEPDIR)/smp02-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp02-locked_print.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp02-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp02-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
 
 smp03/smp03-init.o: smp03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-init.o -MD -MP -MF smp03/$(DEPDIR)/smp03-init.Tpo -c -o smp03/smp03-init.o `test -f 'smp03/init.c' || echo '$(srcdir)/'`smp03/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smp03/$(DEPDIR)/smp03-init.Tpo smp03/$(DEPDIR)/smp03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp03/init.c' object='smp03/smp03-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-init.o -MD -MP -MF smp03/$(DEPDIR)/smp03-init.Tpo -c -o smp03/smp03-init.o `test -f 'smp03/init.c' || echo '$(srcdir)/'`smp03/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp03/$(DEPDIR)/smp03-init.Tpo smp03/$(DEPDIR)/smp03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp03/init.c' object='smp03/smp03-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-init.o `test -f 'smp03/init.c' || echo '$(srcdir)/'`smp03/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-init.o `test -f 'smp03/init.c' || echo '$(srcdir)/'`smp03/init.c
 
 smp03/smp03-init.obj: smp03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-init.obj -MD -MP -MF smp03/$(DEPDIR)/smp03-init.Tpo -c -o smp03/smp03-init.obj `if test -f 'smp03/init.c'; then $(CYGPATH_W) 'smp03/init.c'; else $(CYGPATH_W) '$(srcdir)/smp03/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp03/$(DEPDIR)/smp03-init.Tpo smp03/$(DEPDIR)/smp03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp03/init.c' object='smp03/smp03-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-init.obj -MD -MP -MF smp03/$(DEPDIR)/smp03-init.Tpo -c -o smp03/smp03-init.obj `if test -f 'smp03/init.c'; then $(CYGPATH_W) 'smp03/init.c'; else $(CYGPATH_W) '$(srcdir)/smp03/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp03/$(DEPDIR)/smp03-init.Tpo smp03/$(DEPDIR)/smp03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp03/init.c' object='smp03/smp03-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-init.obj `if test -f 'smp03/init.c'; then $(CYGPATH_W) 'smp03/init.c'; else $(CYGPATH_W) '$(srcdir)/smp03/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-init.obj `if test -f 'smp03/init.c'; then $(CYGPATH_W) 'smp03/init.c'; else $(CYGPATH_W) '$(srcdir)/smp03/init.c'; fi`
 
 smp03/smp03-tasks.o: smp03/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-tasks.o -MD -MP -MF smp03/$(DEPDIR)/smp03-tasks.Tpo -c -o smp03/smp03-tasks.o `test -f 'smp03/tasks.c' || echo '$(srcdir)/'`smp03/tasks.c
-@am__fastdepCC_TRUE@	$(am__mv) smp03/$(DEPDIR)/smp03-tasks.Tpo smp03/$(DEPDIR)/smp03-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp03/tasks.c' object='smp03/smp03-tasks.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-tasks.o -MD -MP -MF smp03/$(DEPDIR)/smp03-tasks.Tpo -c -o smp03/smp03-tasks.o `test -f 'smp03/tasks.c' || echo '$(srcdir)/'`smp03/tasks.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp03/$(DEPDIR)/smp03-tasks.Tpo smp03/$(DEPDIR)/smp03-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp03/tasks.c' object='smp03/smp03-tasks.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-tasks.o `test -f 'smp03/tasks.c' || echo '$(srcdir)/'`smp03/tasks.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-tasks.o `test -f 'smp03/tasks.c' || echo '$(srcdir)/'`smp03/tasks.c
 
 smp03/smp03-tasks.obj: smp03/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-tasks.obj -MD -MP -MF smp03/$(DEPDIR)/smp03-tasks.Tpo -c -o smp03/smp03-tasks.obj `if test -f 'smp03/tasks.c'; then $(CYGPATH_W) 'smp03/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp03/tasks.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp03/$(DEPDIR)/smp03-tasks.Tpo smp03/$(DEPDIR)/smp03-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp03/tasks.c' object='smp03/smp03-tasks.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp03/smp03-tasks.obj -MD -MP -MF smp03/$(DEPDIR)/smp03-tasks.Tpo -c -o smp03/smp03-tasks.obj `if test -f 'smp03/tasks.c'; then $(CYGPATH_W) 'smp03/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp03/tasks.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp03/$(DEPDIR)/smp03-tasks.Tpo smp03/$(DEPDIR)/smp03-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp03/tasks.c' object='smp03/smp03-tasks.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-tasks.obj `if test -f 'smp03/tasks.c'; then $(CYGPATH_W) 'smp03/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp03/tasks.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp03/smp03-tasks.obj `if test -f 'smp03/tasks.c'; then $(CYGPATH_W) 'smp03/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp03/tasks.c'; fi`
 
 ../support/src/smp03-locked_print.o: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp03-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp03-locked_print.Tpo -c -o ../support/src/smp03-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp03-locked_print.Tpo ../support/src/$(DEPDIR)/smp03-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp03-locked_print.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp03-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp03-locked_print.Tpo -c -o ../support/src/smp03-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp03-locked_print.Tpo ../support/src/$(DEPDIR)/smp03-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp03-locked_print.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp03-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp03-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
 
 ../support/src/smp03-locked_print.obj: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp03-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp03-locked_print.Tpo -c -o ../support/src/smp03-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp03-locked_print.Tpo ../support/src/$(DEPDIR)/smp03-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp03-locked_print.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp03-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp03-locked_print.Tpo -c -o ../support/src/smp03-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp03-locked_print.Tpo ../support/src/$(DEPDIR)/smp03-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp03-locked_print.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp03-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp03-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
 
 smp05/smp05-init.o: smp05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp05/smp05-init.o -MD -MP -MF smp05/$(DEPDIR)/smp05-init.Tpo -c -o smp05/smp05-init.o `test -f 'smp05/init.c' || echo '$(srcdir)/'`smp05/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smp05/$(DEPDIR)/smp05-init.Tpo smp05/$(DEPDIR)/smp05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp05/init.c' object='smp05/smp05-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp05/smp05-init.o -MD -MP -MF smp05/$(DEPDIR)/smp05-init.Tpo -c -o smp05/smp05-init.o `test -f 'smp05/init.c' || echo '$(srcdir)/'`smp05/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp05/$(DEPDIR)/smp05-init.Tpo smp05/$(DEPDIR)/smp05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp05/init.c' object='smp05/smp05-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp05/smp05-init.o `test -f 'smp05/init.c' || echo '$(srcdir)/'`smp05/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp05/smp05-init.o `test -f 'smp05/init.c' || echo '$(srcdir)/'`smp05/init.c
 
 smp05/smp05-init.obj: smp05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp05/smp05-init.obj -MD -MP -MF smp05/$(DEPDIR)/smp05-init.Tpo -c -o smp05/smp05-init.obj `if test -f 'smp05/init.c'; then $(CYGPATH_W) 'smp05/init.c'; else $(CYGPATH_W) '$(srcdir)/smp05/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp05/$(DEPDIR)/smp05-init.Tpo smp05/$(DEPDIR)/smp05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp05/init.c' object='smp05/smp05-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp05/smp05-init.obj -MD -MP -MF smp05/$(DEPDIR)/smp05-init.Tpo -c -o smp05/smp05-init.obj `if test -f 'smp05/init.c'; then $(CYGPATH_W) 'smp05/init.c'; else $(CYGPATH_W) '$(srcdir)/smp05/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp05/$(DEPDIR)/smp05-init.Tpo smp05/$(DEPDIR)/smp05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp05/init.c' object='smp05/smp05-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp05/smp05-init.obj `if test -f 'smp05/init.c'; then $(CYGPATH_W) 'smp05/init.c'; else $(CYGPATH_W) '$(srcdir)/smp05/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp05/smp05-init.obj `if test -f 'smp05/init.c'; then $(CYGPATH_W) 'smp05/init.c'; else $(CYGPATH_W) '$(srcdir)/smp05/init.c'; fi`
 
 ../support/src/smp05-locked_print.o: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp05-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp05-locked_print.Tpo -c -o ../support/src/smp05-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp05-locked_print.Tpo ../support/src/$(DEPDIR)/smp05-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp05-locked_print.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp05-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp05-locked_print.Tpo -c -o ../support/src/smp05-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp05-locked_print.Tpo ../support/src/$(DEPDIR)/smp05-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp05-locked_print.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp05-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp05-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
 
 ../support/src/smp05-locked_print.obj: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp05-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp05-locked_print.Tpo -c -o ../support/src/smp05-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp05-locked_print.Tpo ../support/src/$(DEPDIR)/smp05-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp05-locked_print.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp05-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp05-locked_print.Tpo -c -o ../support/src/smp05-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp05-locked_print.Tpo ../support/src/$(DEPDIR)/smp05-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp05-locked_print.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp05-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp05-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
 
 smp07/smp07-init.o: smp07/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp07/smp07-init.o -MD -MP -MF smp07/$(DEPDIR)/smp07-init.Tpo -c -o smp07/smp07-init.o `test -f 'smp07/init.c' || echo '$(srcdir)/'`smp07/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smp07/$(DEPDIR)/smp07-init.Tpo smp07/$(DEPDIR)/smp07-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp07/init.c' object='smp07/smp07-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp07/smp07-init.o -MD -MP -MF smp07/$(DEPDIR)/smp07-init.Tpo -c -o smp07/smp07-init.o `test -f 'smp07/init.c' || echo '$(srcdir)/'`smp07/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp07/$(DEPDIR)/smp07-init.Tpo smp07/$(DEPDIR)/smp07-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp07/init.c' object='smp07/smp07-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp07/smp07-init.o `test -f 'smp07/init.c' || echo '$(srcdir)/'`smp07/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp07/smp07-init.o `test -f 'smp07/init.c' || echo '$(srcdir)/'`smp07/init.c
 
 smp07/smp07-init.obj: smp07/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp07/smp07-init.obj -MD -MP -MF smp07/$(DEPDIR)/smp07-init.Tpo -c -o smp07/smp07-init.obj `if test -f 'smp07/init.c'; then $(CYGPATH_W) 'smp07/init.c'; else $(CYGPATH_W) '$(srcdir)/smp07/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp07/$(DEPDIR)/smp07-init.Tpo smp07/$(DEPDIR)/smp07-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp07/init.c' object='smp07/smp07-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp07/smp07-init.obj -MD -MP -MF smp07/$(DEPDIR)/smp07-init.Tpo -c -o smp07/smp07-init.obj `if test -f 'smp07/init.c'; then $(CYGPATH_W) 'smp07/init.c'; else $(CYGPATH_W) '$(srcdir)/smp07/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp07/$(DEPDIR)/smp07-init.Tpo smp07/$(DEPDIR)/smp07-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp07/init.c' object='smp07/smp07-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp07/smp07-init.obj `if test -f 'smp07/init.c'; then $(CYGPATH_W) 'smp07/init.c'; else $(CYGPATH_W) '$(srcdir)/smp07/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp07/smp07-init.obj `if test -f 'smp07/init.c'; then $(CYGPATH_W) 'smp07/init.c'; else $(CYGPATH_W) '$(srcdir)/smp07/init.c'; fi`
 
 ../support/src/smp07-locked_print.o: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp07-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp07-locked_print.Tpo -c -o ../support/src/smp07-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp07-locked_print.Tpo ../support/src/$(DEPDIR)/smp07-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp07-locked_print.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp07-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp07-locked_print.Tpo -c -o ../support/src/smp07-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp07-locked_print.Tpo ../support/src/$(DEPDIR)/smp07-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp07-locked_print.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp07-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp07-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
 
 ../support/src/smp07-locked_print.obj: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp07-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp07-locked_print.Tpo -c -o ../support/src/smp07-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp07-locked_print.Tpo ../support/src/$(DEPDIR)/smp07-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp07-locked_print.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp07-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp07-locked_print.Tpo -c -o ../support/src/smp07-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp07-locked_print.Tpo ../support/src/$(DEPDIR)/smp07-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp07-locked_print.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp07-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp07-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
 
 smp08/smp08-init.o: smp08/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-init.o -MD -MP -MF smp08/$(DEPDIR)/smp08-init.Tpo -c -o smp08/smp08-init.o `test -f 'smp08/init.c' || echo '$(srcdir)/'`smp08/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smp08/$(DEPDIR)/smp08-init.Tpo smp08/$(DEPDIR)/smp08-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp08/init.c' object='smp08/smp08-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-init.o -MD -MP -MF smp08/$(DEPDIR)/smp08-init.Tpo -c -o smp08/smp08-init.o `test -f 'smp08/init.c' || echo '$(srcdir)/'`smp08/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp08/$(DEPDIR)/smp08-init.Tpo smp08/$(DEPDIR)/smp08-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp08/init.c' object='smp08/smp08-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-init.o `test -f 'smp08/init.c' || echo '$(srcdir)/'`smp08/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-init.o `test -f 'smp08/init.c' || echo '$(srcdir)/'`smp08/init.c
 
 smp08/smp08-init.obj: smp08/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-init.obj -MD -MP -MF smp08/$(DEPDIR)/smp08-init.Tpo -c -o smp08/smp08-init.obj `if test -f 'smp08/init.c'; then $(CYGPATH_W) 'smp08/init.c'; else $(CYGPATH_W) '$(srcdir)/smp08/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp08/$(DEPDIR)/smp08-init.Tpo smp08/$(DEPDIR)/smp08-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp08/init.c' object='smp08/smp08-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-init.obj -MD -MP -MF smp08/$(DEPDIR)/smp08-init.Tpo -c -o smp08/smp08-init.obj `if test -f 'smp08/init.c'; then $(CYGPATH_W) 'smp08/init.c'; else $(CYGPATH_W) '$(srcdir)/smp08/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp08/$(DEPDIR)/smp08-init.Tpo smp08/$(DEPDIR)/smp08-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp08/init.c' object='smp08/smp08-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-init.obj `if test -f 'smp08/init.c'; then $(CYGPATH_W) 'smp08/init.c'; else $(CYGPATH_W) '$(srcdir)/smp08/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-init.obj `if test -f 'smp08/init.c'; then $(CYGPATH_W) 'smp08/init.c'; else $(CYGPATH_W) '$(srcdir)/smp08/init.c'; fi`
 
 smp08/smp08-tasks.o: smp08/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-tasks.o -MD -MP -MF smp08/$(DEPDIR)/smp08-tasks.Tpo -c -o smp08/smp08-tasks.o `test -f 'smp08/tasks.c' || echo '$(srcdir)/'`smp08/tasks.c
-@am__fastdepCC_TRUE@	$(am__mv) smp08/$(DEPDIR)/smp08-tasks.Tpo smp08/$(DEPDIR)/smp08-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp08/tasks.c' object='smp08/smp08-tasks.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-tasks.o -MD -MP -MF smp08/$(DEPDIR)/smp08-tasks.Tpo -c -o smp08/smp08-tasks.o `test -f 'smp08/tasks.c' || echo '$(srcdir)/'`smp08/tasks.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp08/$(DEPDIR)/smp08-tasks.Tpo smp08/$(DEPDIR)/smp08-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp08/tasks.c' object='smp08/smp08-tasks.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-tasks.o `test -f 'smp08/tasks.c' || echo '$(srcdir)/'`smp08/tasks.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-tasks.o `test -f 'smp08/tasks.c' || echo '$(srcdir)/'`smp08/tasks.c
 
 smp08/smp08-tasks.obj: smp08/tasks.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-tasks.obj -MD -MP -MF smp08/$(DEPDIR)/smp08-tasks.Tpo -c -o smp08/smp08-tasks.obj `if test -f 'smp08/tasks.c'; then $(CYGPATH_W) 'smp08/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp08/tasks.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp08/$(DEPDIR)/smp08-tasks.Tpo smp08/$(DEPDIR)/smp08-tasks.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp08/tasks.c' object='smp08/smp08-tasks.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp08/smp08-tasks.obj -MD -MP -MF smp08/$(DEPDIR)/smp08-tasks.Tpo -c -o smp08/smp08-tasks.obj `if test -f 'smp08/tasks.c'; then $(CYGPATH_W) 'smp08/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp08/tasks.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp08/$(DEPDIR)/smp08-tasks.Tpo smp08/$(DEPDIR)/smp08-tasks.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp08/tasks.c' object='smp08/smp08-tasks.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-tasks.obj `if test -f 'smp08/tasks.c'; then $(CYGPATH_W) 'smp08/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp08/tasks.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp08/smp08-tasks.obj `if test -f 'smp08/tasks.c'; then $(CYGPATH_W) 'smp08/tasks.c'; else $(CYGPATH_W) '$(srcdir)/smp08/tasks.c'; fi`
 
 ../support/src/smp08-locked_print.o: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp08-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp08-locked_print.Tpo -c -o ../support/src/smp08-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp08-locked_print.Tpo ../support/src/$(DEPDIR)/smp08-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp08-locked_print.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp08-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp08-locked_print.Tpo -c -o ../support/src/smp08-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp08-locked_print.Tpo ../support/src/$(DEPDIR)/smp08-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp08-locked_print.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp08-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp08-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
 
 ../support/src/smp08-locked_print.obj: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp08-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp08-locked_print.Tpo -c -o ../support/src/smp08-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp08-locked_print.Tpo ../support/src/$(DEPDIR)/smp08-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp08-locked_print.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp08-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp08-locked_print.Tpo -c -o ../support/src/smp08-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp08-locked_print.Tpo ../support/src/$(DEPDIR)/smp08-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp08-locked_print.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp08-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp08-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
 
 smp09/smp09-init.o: smp09/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp09/smp09-init.o -MD -MP -MF smp09/$(DEPDIR)/smp09-init.Tpo -c -o smp09/smp09-init.o `test -f 'smp09/init.c' || echo '$(srcdir)/'`smp09/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smp09/$(DEPDIR)/smp09-init.Tpo smp09/$(DEPDIR)/smp09-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp09/init.c' object='smp09/smp09-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp09/smp09-init.o -MD -MP -MF smp09/$(DEPDIR)/smp09-init.Tpo -c -o smp09/smp09-init.o `test -f 'smp09/init.c' || echo '$(srcdir)/'`smp09/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp09/$(DEPDIR)/smp09-init.Tpo smp09/$(DEPDIR)/smp09-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp09/init.c' object='smp09/smp09-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp09/smp09-init.o `test -f 'smp09/init.c' || echo '$(srcdir)/'`smp09/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp09/smp09-init.o `test -f 'smp09/init.c' || echo '$(srcdir)/'`smp09/init.c
 
 smp09/smp09-init.obj: smp09/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp09/smp09-init.obj -MD -MP -MF smp09/$(DEPDIR)/smp09-init.Tpo -c -o smp09/smp09-init.obj `if test -f 'smp09/init.c'; then $(CYGPATH_W) 'smp09/init.c'; else $(CYGPATH_W) '$(srcdir)/smp09/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smp09/$(DEPDIR)/smp09-init.Tpo smp09/$(DEPDIR)/smp09-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smp09/init.c' object='smp09/smp09-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smp09/smp09-init.obj -MD -MP -MF smp09/$(DEPDIR)/smp09-init.Tpo -c -o smp09/smp09-init.obj `if test -f 'smp09/init.c'; then $(CYGPATH_W) 'smp09/init.c'; else $(CYGPATH_W) '$(srcdir)/smp09/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smp09/$(DEPDIR)/smp09-init.Tpo smp09/$(DEPDIR)/smp09-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smp09/init.c' object='smp09/smp09-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp09/smp09-init.obj `if test -f 'smp09/init.c'; then $(CYGPATH_W) 'smp09/init.c'; else $(CYGPATH_W) '$(srcdir)/smp09/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smp09/smp09-init.obj `if test -f 'smp09/init.c'; then $(CYGPATH_W) 'smp09/init.c'; else $(CYGPATH_W) '$(srcdir)/smp09/init.c'; fi`
 
 ../support/src/smp09-locked_print.o: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp09-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp09-locked_print.Tpo -c -o ../support/src/smp09-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp09-locked_print.Tpo ../support/src/$(DEPDIR)/smp09-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp09-locked_print.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp09-locked_print.o -MD -MP -MF ../support/src/$(DEPDIR)/smp09-locked_print.Tpo -c -o ../support/src/smp09-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp09-locked_print.Tpo ../support/src/$(DEPDIR)/smp09-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp09-locked_print.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp09-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp09-locked_print.o `test -f '../support/src/locked_print.c' || echo '$(srcdir)/'`../support/src/locked_print.c
 
 ../support/src/smp09-locked_print.obj: ../support/src/locked_print.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp09-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp09-locked_print.Tpo -c -o ../support/src/smp09-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smp09-locked_print.Tpo ../support/src/$(DEPDIR)/smp09-locked_print.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/locked_print.c' object='../support/src/smp09-locked_print.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smp09-locked_print.obj -MD -MP -MF ../support/src/$(DEPDIR)/smp09-locked_print.Tpo -c -o ../support/src/smp09-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smp09-locked_print.Tpo ../support/src/$(DEPDIR)/smp09-locked_print.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/locked_print.c' object='../support/src/smp09-locked_print.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp09-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smp09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smp09-locked_print.obj `if test -f '../support/src/locked_print.c'; then $(CYGPATH_W) '../support/src/locked_print.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/locked_print.c'; fi`
 
 smpaffinity01/smpaffinity01-init.o: smpaffinity01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpaffinity01/smpaffinity01-init.o -MD -MP -MF smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo -c -o smpaffinity01/smpaffinity01-init.o `test -f 'smpaffinity01/init.c' || echo '$(srcdir)/'`smpaffinity01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpaffinity01/init.c' object='smpaffinity01/smpaffinity01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpaffinity01/smpaffinity01-init.o -MD -MP -MF smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo -c -o smpaffinity01/smpaffinity01-init.o `test -f 'smpaffinity01/init.c' || echo '$(srcdir)/'`smpaffinity01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpaffinity01/init.c' object='smpaffinity01/smpaffinity01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpaffinity01/smpaffinity01-init.o `test -f 'smpaffinity01/init.c' || echo '$(srcdir)/'`smpaffinity01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpaffinity01/smpaffinity01-init.o `test -f 'smpaffinity01/init.c' || echo '$(srcdir)/'`smpaffinity01/init.c
 
 smpaffinity01/smpaffinity01-init.obj: smpaffinity01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpaffinity01/smpaffinity01-init.obj -MD -MP -MF smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo -c -o smpaffinity01/smpaffinity01-init.obj `if test -f 'smpaffinity01/init.c'; then $(CYGPATH_W) 'smpaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpaffinity01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpaffinity01/init.c' object='smpaffinity01/smpaffinity01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpaffinity01/smpaffinity01-init.obj -MD -MP -MF smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo -c -o smpaffinity01/smpaffinity01-init.obj `if test -f 'smpaffinity01/init.c'; then $(CYGPATH_W) 'smpaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpaffinity01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpaffinity01/$(DEPDIR)/smpaffinity01-init.Tpo smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpaffinity01/init.c' object='smpaffinity01/smpaffinity01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpaffinity01/smpaffinity01-init.obj `if test -f 'smpaffinity01/init.c'; then $(CYGPATH_W) 'smpaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpaffinity01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpaffinity01/smpaffinity01-init.obj `if test -f 'smpaffinity01/init.c'; then $(CYGPATH_W) 'smpaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpaffinity01/init.c'; fi`
 
 smpatomic01/smpatomic01-init.o: smpatomic01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpatomic01/smpatomic01-init.o -MD -MP -MF smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo -c -o smpatomic01/smpatomic01-init.o `test -f 'smpatomic01/init.c' || echo '$(srcdir)/'`smpatomic01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo smpatomic01/$(DEPDIR)/smpatomic01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpatomic01/init.c' object='smpatomic01/smpatomic01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpatomic01/smpatomic01-init.o -MD -MP -MF smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo -c -o smpatomic01/smpatomic01-init.o `test -f 'smpatomic01/init.c' || echo '$(srcdir)/'`smpatomic01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo smpatomic01/$(DEPDIR)/smpatomic01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpatomic01/init.c' object='smpatomic01/smpatomic01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpatomic01/smpatomic01-init.o `test -f 'smpatomic01/init.c' || echo '$(srcdir)/'`smpatomic01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpatomic01/smpatomic01-init.o `test -f 'smpatomic01/init.c' || echo '$(srcdir)/'`smpatomic01/init.c
 
 smpatomic01/smpatomic01-init.obj: smpatomic01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpatomic01/smpatomic01-init.obj -MD -MP -MF smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo -c -o smpatomic01/smpatomic01-init.obj `if test -f 'smpatomic01/init.c'; then $(CYGPATH_W) 'smpatomic01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpatomic01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo smpatomic01/$(DEPDIR)/smpatomic01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpatomic01/init.c' object='smpatomic01/smpatomic01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpatomic01/smpatomic01-init.obj -MD -MP -MF smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo -c -o smpatomic01/smpatomic01-init.obj `if test -f 'smpatomic01/init.c'; then $(CYGPATH_W) 'smpatomic01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpatomic01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpatomic01/$(DEPDIR)/smpatomic01-init.Tpo smpatomic01/$(DEPDIR)/smpatomic01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpatomic01/init.c' object='smpatomic01/smpatomic01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpatomic01/smpatomic01-init.obj `if test -f 'smpatomic01/init.c'; then $(CYGPATH_W) 'smpatomic01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpatomic01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpatomic01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpatomic01/smpatomic01-init.obj `if test -f 'smpatomic01/init.c'; then $(CYGPATH_W) 'smpatomic01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpatomic01/init.c'; fi`
 
 smpcache01/smpcache01-init.o: smpcache01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcache01/smpcache01-init.o -MD -MP -MF smpcache01/$(DEPDIR)/smpcache01-init.Tpo -c -o smpcache01/smpcache01-init.o `test -f 'smpcache01/init.c' || echo '$(srcdir)/'`smpcache01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpcache01/$(DEPDIR)/smpcache01-init.Tpo smpcache01/$(DEPDIR)/smpcache01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpcache01/init.c' object='smpcache01/smpcache01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcache01/smpcache01-init.o -MD -MP -MF smpcache01/$(DEPDIR)/smpcache01-init.Tpo -c -o smpcache01/smpcache01-init.o `test -f 'smpcache01/init.c' || echo '$(srcdir)/'`smpcache01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpcache01/$(DEPDIR)/smpcache01-init.Tpo smpcache01/$(DEPDIR)/smpcache01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpcache01/init.c' object='smpcache01/smpcache01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcache01/smpcache01-init.o `test -f 'smpcache01/init.c' || echo '$(srcdir)/'`smpcache01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcache01/smpcache01-init.o `test -f 'smpcache01/init.c' || echo '$(srcdir)/'`smpcache01/init.c
 
 smpcache01/smpcache01-init.obj: smpcache01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcache01/smpcache01-init.obj -MD -MP -MF smpcache01/$(DEPDIR)/smpcache01-init.Tpo -c -o smpcache01/smpcache01-init.obj `if test -f 'smpcache01/init.c'; then $(CYGPATH_W) 'smpcache01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcache01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpcache01/$(DEPDIR)/smpcache01-init.Tpo smpcache01/$(DEPDIR)/smpcache01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpcache01/init.c' object='smpcache01/smpcache01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcache01/smpcache01-init.obj -MD -MP -MF smpcache01/$(DEPDIR)/smpcache01-init.Tpo -c -o smpcache01/smpcache01-init.obj `if test -f 'smpcache01/init.c'; then $(CYGPATH_W) 'smpcache01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcache01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpcache01/$(DEPDIR)/smpcache01-init.Tpo smpcache01/$(DEPDIR)/smpcache01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpcache01/init.c' object='smpcache01/smpcache01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcache01/smpcache01-init.obj `if test -f 'smpcache01/init.c'; then $(CYGPATH_W) 'smpcache01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcache01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcache01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcache01/smpcache01-init.obj `if test -f 'smpcache01/init.c'; then $(CYGPATH_W) 'smpcache01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcache01/init.c'; fi`
 
 smpcapture01/smpcapture01-init.o: smpcapture01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture01/smpcapture01-init.o -MD -MP -MF smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo -c -o smpcapture01/smpcapture01-init.o `test -f 'smpcapture01/init.c' || echo '$(srcdir)/'`smpcapture01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo smpcapture01/$(DEPDIR)/smpcapture01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpcapture01/init.c' object='smpcapture01/smpcapture01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture01/smpcapture01-init.o -MD -MP -MF smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo -c -o smpcapture01/smpcapture01-init.o `test -f 'smpcapture01/init.c' || echo '$(srcdir)/'`smpcapture01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo smpcapture01/$(DEPDIR)/smpcapture01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpcapture01/init.c' object='smpcapture01/smpcapture01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture01/smpcapture01-init.o `test -f 'smpcapture01/init.c' || echo '$(srcdir)/'`smpcapture01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture01/smpcapture01-init.o `test -f 'smpcapture01/init.c' || echo '$(srcdir)/'`smpcapture01/init.c
 
 smpcapture01/smpcapture01-init.obj: smpcapture01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture01/smpcapture01-init.obj -MD -MP -MF smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo -c -o smpcapture01/smpcapture01-init.obj `if test -f 'smpcapture01/init.c'; then $(CYGPATH_W) 'smpcapture01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo smpcapture01/$(DEPDIR)/smpcapture01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpcapture01/init.c' object='smpcapture01/smpcapture01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture01/smpcapture01-init.obj -MD -MP -MF smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo -c -o smpcapture01/smpcapture01-init.obj `if test -f 'smpcapture01/init.c'; then $(CYGPATH_W) 'smpcapture01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpcapture01/$(DEPDIR)/smpcapture01-init.Tpo smpcapture01/$(DEPDIR)/smpcapture01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpcapture01/init.c' object='smpcapture01/smpcapture01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture01/smpcapture01-init.obj `if test -f 'smpcapture01/init.c'; then $(CYGPATH_W) 'smpcapture01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture01/smpcapture01-init.obj `if test -f 'smpcapture01/init.c'; then $(CYGPATH_W) 'smpcapture01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture01/init.c'; fi`
 
 smpcapture02/smpcapture02-init.o: smpcapture02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture02/smpcapture02-init.o -MD -MP -MF smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo -c -o smpcapture02/smpcapture02-init.o `test -f 'smpcapture02/init.c' || echo '$(srcdir)/'`smpcapture02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo smpcapture02/$(DEPDIR)/smpcapture02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpcapture02/init.c' object='smpcapture02/smpcapture02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture02/smpcapture02-init.o -MD -MP -MF smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo -c -o smpcapture02/smpcapture02-init.o `test -f 'smpcapture02/init.c' || echo '$(srcdir)/'`smpcapture02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo smpcapture02/$(DEPDIR)/smpcapture02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpcapture02/init.c' object='smpcapture02/smpcapture02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture02/smpcapture02-init.o `test -f 'smpcapture02/init.c' || echo '$(srcdir)/'`smpcapture02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture02/smpcapture02-init.o `test -f 'smpcapture02/init.c' || echo '$(srcdir)/'`smpcapture02/init.c
 
 smpcapture02/smpcapture02-init.obj: smpcapture02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture02/smpcapture02-init.obj -MD -MP -MF smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo -c -o smpcapture02/smpcapture02-init.obj `if test -f 'smpcapture02/init.c'; then $(CYGPATH_W) 'smpcapture02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo smpcapture02/$(DEPDIR)/smpcapture02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpcapture02/init.c' object='smpcapture02/smpcapture02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpcapture02/smpcapture02-init.obj -MD -MP -MF smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo -c -o smpcapture02/smpcapture02-init.obj `if test -f 'smpcapture02/init.c'; then $(CYGPATH_W) 'smpcapture02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpcapture02/$(DEPDIR)/smpcapture02-init.Tpo smpcapture02/$(DEPDIR)/smpcapture02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpcapture02/init.c' object='smpcapture02/smpcapture02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture02/smpcapture02-init.obj `if test -f 'smpcapture02/init.c'; then $(CYGPATH_W) 'smpcapture02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpcapture02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpcapture02/smpcapture02-init.obj `if test -f 'smpcapture02/init.c'; then $(CYGPATH_W) 'smpcapture02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpcapture02/init.c'; fi`
 
 smpclock01/smpclock01-init.o: smpclock01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpclock01/smpclock01-init.o -MD -MP -MF smpclock01/$(DEPDIR)/smpclock01-init.Tpo -c -o smpclock01/smpclock01-init.o `test -f 'smpclock01/init.c' || echo '$(srcdir)/'`smpclock01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpclock01/$(DEPDIR)/smpclock01-init.Tpo smpclock01/$(DEPDIR)/smpclock01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpclock01/init.c' object='smpclock01/smpclock01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpclock01/smpclock01-init.o -MD -MP -MF smpclock01/$(DEPDIR)/smpclock01-init.Tpo -c -o smpclock01/smpclock01-init.o `test -f 'smpclock01/init.c' || echo '$(srcdir)/'`smpclock01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpclock01/$(DEPDIR)/smpclock01-init.Tpo smpclock01/$(DEPDIR)/smpclock01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpclock01/init.c' object='smpclock01/smpclock01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpclock01/smpclock01-init.o `test -f 'smpclock01/init.c' || echo '$(srcdir)/'`smpclock01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpclock01/smpclock01-init.o `test -f 'smpclock01/init.c' || echo '$(srcdir)/'`smpclock01/init.c
 
 smpclock01/smpclock01-init.obj: smpclock01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpclock01/smpclock01-init.obj -MD -MP -MF smpclock01/$(DEPDIR)/smpclock01-init.Tpo -c -o smpclock01/smpclock01-init.obj `if test -f 'smpclock01/init.c'; then $(CYGPATH_W) 'smpclock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpclock01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpclock01/$(DEPDIR)/smpclock01-init.Tpo smpclock01/$(DEPDIR)/smpclock01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpclock01/init.c' object='smpclock01/smpclock01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpclock01/smpclock01-init.obj -MD -MP -MF smpclock01/$(DEPDIR)/smpclock01-init.Tpo -c -o smpclock01/smpclock01-init.obj `if test -f 'smpclock01/init.c'; then $(CYGPATH_W) 'smpclock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpclock01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpclock01/$(DEPDIR)/smpclock01-init.Tpo smpclock01/$(DEPDIR)/smpclock01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpclock01/init.c' object='smpclock01/smpclock01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpclock01/smpclock01-init.obj `if test -f 'smpclock01/init.c'; then $(CYGPATH_W) 'smpclock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpclock01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpclock01/smpclock01-init.obj `if test -f 'smpclock01/init.c'; then $(CYGPATH_W) 'smpclock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpclock01/init.c'; fi`
 
 ../support/src/smpclock01-spin.o: ../support/src/spin.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smpclock01-spin.o -MD -MP -MF ../support/src/$(DEPDIR)/smpclock01-spin.Tpo -c -o ../support/src/smpclock01-spin.o `test -f '../support/src/spin.c' || echo '$(srcdir)/'`../support/src/spin.c
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smpclock01-spin.Tpo ../support/src/$(DEPDIR)/smpclock01-spin.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/spin.c' object='../support/src/smpclock01-spin.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smpclock01-spin.o -MD -MP -MF ../support/src/$(DEPDIR)/smpclock01-spin.Tpo -c -o ../support/src/smpclock01-spin.o `test -f '../support/src/spin.c' || echo '$(srcdir)/'`../support/src/spin.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smpclock01-spin.Tpo ../support/src/$(DEPDIR)/smpclock01-spin.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/spin.c' object='../support/src/smpclock01-spin.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smpclock01-spin.o `test -f '../support/src/spin.c' || echo '$(srcdir)/'`../support/src/spin.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smpclock01-spin.o `test -f '../support/src/spin.c' || echo '$(srcdir)/'`../support/src/spin.c
 
 ../support/src/smpclock01-spin.obj: ../support/src/spin.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smpclock01-spin.obj -MD -MP -MF ../support/src/$(DEPDIR)/smpclock01-spin.Tpo -c -o ../support/src/smpclock01-spin.obj `if test -f '../support/src/spin.c'; then $(CYGPATH_W) '../support/src/spin.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/spin.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) ../support/src/$(DEPDIR)/smpclock01-spin.Tpo ../support/src/$(DEPDIR)/smpclock01-spin.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='../support/src/spin.c' object='../support/src/smpclock01-spin.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ../support/src/smpclock01-spin.obj -MD -MP -MF ../support/src/$(DEPDIR)/smpclock01-spin.Tpo -c -o ../support/src/smpclock01-spin.obj `if test -f '../support/src/spin.c'; then $(CYGPATH_W) '../support/src/spin.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/spin.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) ../support/src/$(DEPDIR)/smpclock01-spin.Tpo ../support/src/$(DEPDIR)/smpclock01-spin.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='../support/src/spin.c' object='../support/src/smpclock01-spin.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smpclock01-spin.obj `if test -f '../support/src/spin.c'; then $(CYGPATH_W) '../support/src/spin.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/spin.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpclock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ../support/src/smpclock01-spin.obj `if test -f '../support/src/spin.c'; then $(CYGPATH_W) '../support/src/spin.c'; else $(CYGPATH_W) '$(srcdir)/../support/src/spin.c'; fi`
 
 smpfatal01/smpfatal01-init.o: smpfatal01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal01/smpfatal01-init.o -MD -MP -MF smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo -c -o smpfatal01/smpfatal01-init.o `test -f 'smpfatal01/init.c' || echo '$(srcdir)/'`smpfatal01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo smpfatal01/$(DEPDIR)/smpfatal01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal01/init.c' object='smpfatal01/smpfatal01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal01/smpfatal01-init.o -MD -MP -MF smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo -c -o smpfatal01/smpfatal01-init.o `test -f 'smpfatal01/init.c' || echo '$(srcdir)/'`smpfatal01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo smpfatal01/$(DEPDIR)/smpfatal01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal01/init.c' object='smpfatal01/smpfatal01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal01/smpfatal01-init.o `test -f 'smpfatal01/init.c' || echo '$(srcdir)/'`smpfatal01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal01/smpfatal01-init.o `test -f 'smpfatal01/init.c' || echo '$(srcdir)/'`smpfatal01/init.c
 
 smpfatal01/smpfatal01-init.obj: smpfatal01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal01/smpfatal01-init.obj -MD -MP -MF smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo -c -o smpfatal01/smpfatal01-init.obj `if test -f 'smpfatal01/init.c'; then $(CYGPATH_W) 'smpfatal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo smpfatal01/$(DEPDIR)/smpfatal01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal01/init.c' object='smpfatal01/smpfatal01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal01/smpfatal01-init.obj -MD -MP -MF smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo -c -o smpfatal01/smpfatal01-init.obj `if test -f 'smpfatal01/init.c'; then $(CYGPATH_W) 'smpfatal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal01/$(DEPDIR)/smpfatal01-init.Tpo smpfatal01/$(DEPDIR)/smpfatal01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal01/init.c' object='smpfatal01/smpfatal01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal01/smpfatal01-init.obj `if test -f 'smpfatal01/init.c'; then $(CYGPATH_W) 'smpfatal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal01/smpfatal01-init.obj `if test -f 'smpfatal01/init.c'; then $(CYGPATH_W) 'smpfatal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal01/init.c'; fi`
 
 smpfatal02/smpfatal02-init.o: smpfatal02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal02/smpfatal02-init.o -MD -MP -MF smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo -c -o smpfatal02/smpfatal02-init.o `test -f 'smpfatal02/init.c' || echo '$(srcdir)/'`smpfatal02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo smpfatal02/$(DEPDIR)/smpfatal02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal02/init.c' object='smpfatal02/smpfatal02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal02/smpfatal02-init.o -MD -MP -MF smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo -c -o smpfatal02/smpfatal02-init.o `test -f 'smpfatal02/init.c' || echo '$(srcdir)/'`smpfatal02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo smpfatal02/$(DEPDIR)/smpfatal02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal02/init.c' object='smpfatal02/smpfatal02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal02/smpfatal02-init.o `test -f 'smpfatal02/init.c' || echo '$(srcdir)/'`smpfatal02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal02/smpfatal02-init.o `test -f 'smpfatal02/init.c' || echo '$(srcdir)/'`smpfatal02/init.c
 
 smpfatal02/smpfatal02-init.obj: smpfatal02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal02/smpfatal02-init.obj -MD -MP -MF smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo -c -o smpfatal02/smpfatal02-init.obj `if test -f 'smpfatal02/init.c'; then $(CYGPATH_W) 'smpfatal02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo smpfatal02/$(DEPDIR)/smpfatal02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal02/init.c' object='smpfatal02/smpfatal02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal02/smpfatal02-init.obj -MD -MP -MF smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo -c -o smpfatal02/smpfatal02-init.obj `if test -f 'smpfatal02/init.c'; then $(CYGPATH_W) 'smpfatal02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal02/$(DEPDIR)/smpfatal02-init.Tpo smpfatal02/$(DEPDIR)/smpfatal02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal02/init.c' object='smpfatal02/smpfatal02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal02/smpfatal02-init.obj `if test -f 'smpfatal02/init.c'; then $(CYGPATH_W) 'smpfatal02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal02/smpfatal02-init.obj `if test -f 'smpfatal02/init.c'; then $(CYGPATH_W) 'smpfatal02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal02/init.c'; fi`
 
 smpfatal03/smpfatal03-init.o: smpfatal03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal03/smpfatal03-init.o -MD -MP -MF smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo -c -o smpfatal03/smpfatal03-init.o `test -f 'smpfatal03/init.c' || echo '$(srcdir)/'`smpfatal03/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo smpfatal03/$(DEPDIR)/smpfatal03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal03/init.c' object='smpfatal03/smpfatal03-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal03/smpfatal03-init.o -MD -MP -MF smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo -c -o smpfatal03/smpfatal03-init.o `test -f 'smpfatal03/init.c' || echo '$(srcdir)/'`smpfatal03/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo smpfatal03/$(DEPDIR)/smpfatal03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal03/init.c' object='smpfatal03/smpfatal03-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal03/smpfatal03-init.o `test -f 'smpfatal03/init.c' || echo '$(srcdir)/'`smpfatal03/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal03/smpfatal03-init.o `test -f 'smpfatal03/init.c' || echo '$(srcdir)/'`smpfatal03/init.c
 
 smpfatal03/smpfatal03-init.obj: smpfatal03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal03/smpfatal03-init.obj -MD -MP -MF smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo -c -o smpfatal03/smpfatal03-init.obj `if test -f 'smpfatal03/init.c'; then $(CYGPATH_W) 'smpfatal03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal03/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo smpfatal03/$(DEPDIR)/smpfatal03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal03/init.c' object='smpfatal03/smpfatal03-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal03/smpfatal03-init.obj -MD -MP -MF smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo -c -o smpfatal03/smpfatal03-init.obj `if test -f 'smpfatal03/init.c'; then $(CYGPATH_W) 'smpfatal03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal03/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal03/$(DEPDIR)/smpfatal03-init.Tpo smpfatal03/$(DEPDIR)/smpfatal03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal03/init.c' object='smpfatal03/smpfatal03-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal03/smpfatal03-init.obj `if test -f 'smpfatal03/init.c'; then $(CYGPATH_W) 'smpfatal03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal03/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal03/smpfatal03-init.obj `if test -f 'smpfatal03/init.c'; then $(CYGPATH_W) 'smpfatal03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal03/init.c'; fi`
 
 smpfatal04/smpfatal04-init.o: smpfatal04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal04/smpfatal04-init.o -MD -MP -MF smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo -c -o smpfatal04/smpfatal04-init.o `test -f 'smpfatal04/init.c' || echo '$(srcdir)/'`smpfatal04/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo smpfatal04/$(DEPDIR)/smpfatal04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal04/init.c' object='smpfatal04/smpfatal04-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal04/smpfatal04-init.o -MD -MP -MF smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo -c -o smpfatal04/smpfatal04-init.o `test -f 'smpfatal04/init.c' || echo '$(srcdir)/'`smpfatal04/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo smpfatal04/$(DEPDIR)/smpfatal04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal04/init.c' object='smpfatal04/smpfatal04-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal04/smpfatal04-init.o `test -f 'smpfatal04/init.c' || echo '$(srcdir)/'`smpfatal04/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal04/smpfatal04-init.o `test -f 'smpfatal04/init.c' || echo '$(srcdir)/'`smpfatal04/init.c
 
 smpfatal04/smpfatal04-init.obj: smpfatal04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal04/smpfatal04-init.obj -MD -MP -MF smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo -c -o smpfatal04/smpfatal04-init.obj `if test -f 'smpfatal04/init.c'; then $(CYGPATH_W) 'smpfatal04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal04/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo smpfatal04/$(DEPDIR)/smpfatal04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal04/init.c' object='smpfatal04/smpfatal04-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal04/smpfatal04-init.obj -MD -MP -MF smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo -c -o smpfatal04/smpfatal04-init.obj `if test -f 'smpfatal04/init.c'; then $(CYGPATH_W) 'smpfatal04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal04/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal04/$(DEPDIR)/smpfatal04-init.Tpo smpfatal04/$(DEPDIR)/smpfatal04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal04/init.c' object='smpfatal04/smpfatal04-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal04/smpfatal04-init.obj `if test -f 'smpfatal04/init.c'; then $(CYGPATH_W) 'smpfatal04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal04/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal04/smpfatal04-init.obj `if test -f 'smpfatal04/init.c'; then $(CYGPATH_W) 'smpfatal04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal04/init.c'; fi`
 
 smpfatal05/smpfatal05-init.o: smpfatal05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal05/smpfatal05-init.o -MD -MP -MF smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo -c -o smpfatal05/smpfatal05-init.o `test -f 'smpfatal05/init.c' || echo '$(srcdir)/'`smpfatal05/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo smpfatal05/$(DEPDIR)/smpfatal05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal05/init.c' object='smpfatal05/smpfatal05-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal05/smpfatal05-init.o -MD -MP -MF smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo -c -o smpfatal05/smpfatal05-init.o `test -f 'smpfatal05/init.c' || echo '$(srcdir)/'`smpfatal05/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo smpfatal05/$(DEPDIR)/smpfatal05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal05/init.c' object='smpfatal05/smpfatal05-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal05/smpfatal05-init.o `test -f 'smpfatal05/init.c' || echo '$(srcdir)/'`smpfatal05/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal05/smpfatal05-init.o `test -f 'smpfatal05/init.c' || echo '$(srcdir)/'`smpfatal05/init.c
 
 smpfatal05/smpfatal05-init.obj: smpfatal05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal05/smpfatal05-init.obj -MD -MP -MF smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo -c -o smpfatal05/smpfatal05-init.obj `if test -f 'smpfatal05/init.c'; then $(CYGPATH_W) 'smpfatal05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal05/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo smpfatal05/$(DEPDIR)/smpfatal05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal05/init.c' object='smpfatal05/smpfatal05-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal05/smpfatal05-init.obj -MD -MP -MF smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo -c -o smpfatal05/smpfatal05-init.obj `if test -f 'smpfatal05/init.c'; then $(CYGPATH_W) 'smpfatal05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal05/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal05/$(DEPDIR)/smpfatal05-init.Tpo smpfatal05/$(DEPDIR)/smpfatal05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal05/init.c' object='smpfatal05/smpfatal05-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal05/smpfatal05-init.obj `if test -f 'smpfatal05/init.c'; then $(CYGPATH_W) 'smpfatal05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal05/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal05/smpfatal05-init.obj `if test -f 'smpfatal05/init.c'; then $(CYGPATH_W) 'smpfatal05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal05/init.c'; fi`
 
 smpfatal06/smpfatal06-init.o: smpfatal06/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal06/smpfatal06-init.o -MD -MP -MF smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo -c -o smpfatal06/smpfatal06-init.o `test -f 'smpfatal06/init.c' || echo '$(srcdir)/'`smpfatal06/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo smpfatal06/$(DEPDIR)/smpfatal06-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal06/init.c' object='smpfatal06/smpfatal06-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal06/smpfatal06-init.o -MD -MP -MF smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo -c -o smpfatal06/smpfatal06-init.o `test -f 'smpfatal06/init.c' || echo '$(srcdir)/'`smpfatal06/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo smpfatal06/$(DEPDIR)/smpfatal06-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal06/init.c' object='smpfatal06/smpfatal06-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal06/smpfatal06-init.o `test -f 'smpfatal06/init.c' || echo '$(srcdir)/'`smpfatal06/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal06/smpfatal06-init.o `test -f 'smpfatal06/init.c' || echo '$(srcdir)/'`smpfatal06/init.c
 
 smpfatal06/smpfatal06-init.obj: smpfatal06/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal06/smpfatal06-init.obj -MD -MP -MF smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo -c -o smpfatal06/smpfatal06-init.obj `if test -f 'smpfatal06/init.c'; then $(CYGPATH_W) 'smpfatal06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal06/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo smpfatal06/$(DEPDIR)/smpfatal06-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal06/init.c' object='smpfatal06/smpfatal06-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal06/smpfatal06-init.obj -MD -MP -MF smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo -c -o smpfatal06/smpfatal06-init.obj `if test -f 'smpfatal06/init.c'; then $(CYGPATH_W) 'smpfatal06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal06/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal06/$(DEPDIR)/smpfatal06-init.Tpo smpfatal06/$(DEPDIR)/smpfatal06-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal06/init.c' object='smpfatal06/smpfatal06-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal06/smpfatal06-init.obj `if test -f 'smpfatal06/init.c'; then $(CYGPATH_W) 'smpfatal06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal06/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal06/smpfatal06-init.obj `if test -f 'smpfatal06/init.c'; then $(CYGPATH_W) 'smpfatal06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal06/init.c'; fi`
 
 smpfatal08/smpfatal08-init.o: smpfatal08/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal08/smpfatal08-init.o -MD -MP -MF smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo -c -o smpfatal08/smpfatal08-init.o `test -f 'smpfatal08/init.c' || echo '$(srcdir)/'`smpfatal08/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo smpfatal08/$(DEPDIR)/smpfatal08-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal08/init.c' object='smpfatal08/smpfatal08-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal08/smpfatal08-init.o -MD -MP -MF smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo -c -o smpfatal08/smpfatal08-init.o `test -f 'smpfatal08/init.c' || echo '$(srcdir)/'`smpfatal08/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo smpfatal08/$(DEPDIR)/smpfatal08-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal08/init.c' object='smpfatal08/smpfatal08-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal08/smpfatal08-init.o `test -f 'smpfatal08/init.c' || echo '$(srcdir)/'`smpfatal08/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal08/smpfatal08-init.o `test -f 'smpfatal08/init.c' || echo '$(srcdir)/'`smpfatal08/init.c
 
 smpfatal08/smpfatal08-init.obj: smpfatal08/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal08/smpfatal08-init.obj -MD -MP -MF smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo -c -o smpfatal08/smpfatal08-init.obj `if test -f 'smpfatal08/init.c'; then $(CYGPATH_W) 'smpfatal08/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal08/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo smpfatal08/$(DEPDIR)/smpfatal08-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal08/init.c' object='smpfatal08/smpfatal08-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal08/smpfatal08-init.obj -MD -MP -MF smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo -c -o smpfatal08/smpfatal08-init.obj `if test -f 'smpfatal08/init.c'; then $(CYGPATH_W) 'smpfatal08/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal08/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal08/$(DEPDIR)/smpfatal08-init.Tpo smpfatal08/$(DEPDIR)/smpfatal08-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal08/init.c' object='smpfatal08/smpfatal08-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal08/smpfatal08-init.obj `if test -f 'smpfatal08/init.c'; then $(CYGPATH_W) 'smpfatal08/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal08/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal08_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal08/smpfatal08-init.obj `if test -f 'smpfatal08/init.c'; then $(CYGPATH_W) 'smpfatal08/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal08/init.c'; fi`
 
 smpfatal09/smpfatal09-init.o: smpfatal09/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal09/smpfatal09-init.o -MD -MP -MF smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo -c -o smpfatal09/smpfatal09-init.o `test -f 'smpfatal09/init.c' || echo '$(srcdir)/'`smpfatal09/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo smpfatal09/$(DEPDIR)/smpfatal09-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal09/init.c' object='smpfatal09/smpfatal09-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal09/smpfatal09-init.o -MD -MP -MF smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo -c -o smpfatal09/smpfatal09-init.o `test -f 'smpfatal09/init.c' || echo '$(srcdir)/'`smpfatal09/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo smpfatal09/$(DEPDIR)/smpfatal09-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal09/init.c' object='smpfatal09/smpfatal09-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal09/smpfatal09-init.o `test -f 'smpfatal09/init.c' || echo '$(srcdir)/'`smpfatal09/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal09/smpfatal09-init.o `test -f 'smpfatal09/init.c' || echo '$(srcdir)/'`smpfatal09/init.c
 
 smpfatal09/smpfatal09-init.obj: smpfatal09/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal09/smpfatal09-init.obj -MD -MP -MF smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo -c -o smpfatal09/smpfatal09-init.obj `if test -f 'smpfatal09/init.c'; then $(CYGPATH_W) 'smpfatal09/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal09/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo smpfatal09/$(DEPDIR)/smpfatal09-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpfatal09/init.c' object='smpfatal09/smpfatal09-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpfatal09/smpfatal09-init.obj -MD -MP -MF smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo -c -o smpfatal09/smpfatal09-init.obj `if test -f 'smpfatal09/init.c'; then $(CYGPATH_W) 'smpfatal09/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal09/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpfatal09/$(DEPDIR)/smpfatal09-init.Tpo smpfatal09/$(DEPDIR)/smpfatal09-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpfatal09/init.c' object='smpfatal09/smpfatal09-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal09/smpfatal09-init.obj `if test -f 'smpfatal09/init.c'; then $(CYGPATH_W) 'smpfatal09/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal09/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpfatal09_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpfatal09/smpfatal09-init.obj `if test -f 'smpfatal09/init.c'; then $(CYGPATH_W) 'smpfatal09/init.c'; else $(CYGPATH_W) '$(srcdir)/smpfatal09/init.c'; fi`
 
 smpipi01/smpipi01-init.o: smpipi01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpipi01/smpipi01-init.o -MD -MP -MF smpipi01/$(DEPDIR)/smpipi01-init.Tpo -c -o smpipi01/smpipi01-init.o `test -f 'smpipi01/init.c' || echo '$(srcdir)/'`smpipi01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpipi01/$(DEPDIR)/smpipi01-init.Tpo smpipi01/$(DEPDIR)/smpipi01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpipi01/init.c' object='smpipi01/smpipi01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpipi01/smpipi01-init.o -MD -MP -MF smpipi01/$(DEPDIR)/smpipi01-init.Tpo -c -o smpipi01/smpipi01-init.o `test -f 'smpipi01/init.c' || echo '$(srcdir)/'`smpipi01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpipi01/$(DEPDIR)/smpipi01-init.Tpo smpipi01/$(DEPDIR)/smpipi01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpipi01/init.c' object='smpipi01/smpipi01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpipi01/smpipi01-init.o `test -f 'smpipi01/init.c' || echo '$(srcdir)/'`smpipi01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpipi01/smpipi01-init.o `test -f 'smpipi01/init.c' || echo '$(srcdir)/'`smpipi01/init.c
 
 smpipi01/smpipi01-init.obj: smpipi01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpipi01/smpipi01-init.obj -MD -MP -MF smpipi01/$(DEPDIR)/smpipi01-init.Tpo -c -o smpipi01/smpipi01-init.obj `if test -f 'smpipi01/init.c'; then $(CYGPATH_W) 'smpipi01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpipi01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpipi01/$(DEPDIR)/smpipi01-init.Tpo smpipi01/$(DEPDIR)/smpipi01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpipi01/init.c' object='smpipi01/smpipi01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpipi01/smpipi01-init.obj -MD -MP -MF smpipi01/$(DEPDIR)/smpipi01-init.Tpo -c -o smpipi01/smpipi01-init.obj `if test -f 'smpipi01/init.c'; then $(CYGPATH_W) 'smpipi01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpipi01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpipi01/$(DEPDIR)/smpipi01-init.Tpo smpipi01/$(DEPDIR)/smpipi01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpipi01/init.c' object='smpipi01/smpipi01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpipi01/smpipi01-init.obj `if test -f 'smpipi01/init.c'; then $(CYGPATH_W) 'smpipi01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpipi01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpipi01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpipi01/smpipi01-init.obj `if test -f 'smpipi01/init.c'; then $(CYGPATH_W) 'smpipi01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpipi01/init.c'; fi`
 
 smpload01/smpload01-init.o: smpload01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpload01/smpload01-init.o -MD -MP -MF smpload01/$(DEPDIR)/smpload01-init.Tpo -c -o smpload01/smpload01-init.o `test -f 'smpload01/init.c' || echo '$(srcdir)/'`smpload01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpload01/$(DEPDIR)/smpload01-init.Tpo smpload01/$(DEPDIR)/smpload01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpload01/init.c' object='smpload01/smpload01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpload01/smpload01-init.o -MD -MP -MF smpload01/$(DEPDIR)/smpload01-init.Tpo -c -o smpload01/smpload01-init.o `test -f 'smpload01/init.c' || echo '$(srcdir)/'`smpload01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpload01/$(DEPDIR)/smpload01-init.Tpo smpload01/$(DEPDIR)/smpload01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpload01/init.c' object='smpload01/smpload01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpload01/smpload01-init.o `test -f 'smpload01/init.c' || echo '$(srcdir)/'`smpload01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpload01/smpload01-init.o `test -f 'smpload01/init.c' || echo '$(srcdir)/'`smpload01/init.c
 
 smpload01/smpload01-init.obj: smpload01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpload01/smpload01-init.obj -MD -MP -MF smpload01/$(DEPDIR)/smpload01-init.Tpo -c -o smpload01/smpload01-init.obj `if test -f 'smpload01/init.c'; then $(CYGPATH_W) 'smpload01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpload01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpload01/$(DEPDIR)/smpload01-init.Tpo smpload01/$(DEPDIR)/smpload01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpload01/init.c' object='smpload01/smpload01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpload01/smpload01-init.obj -MD -MP -MF smpload01/$(DEPDIR)/smpload01-init.Tpo -c -o smpload01/smpload01-init.obj `if test -f 'smpload01/init.c'; then $(CYGPATH_W) 'smpload01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpload01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpload01/$(DEPDIR)/smpload01-init.Tpo smpload01/$(DEPDIR)/smpload01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpload01/init.c' object='smpload01/smpload01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpload01/smpload01-init.obj `if test -f 'smpload01/init.c'; then $(CYGPATH_W) 'smpload01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpload01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpload01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpload01/smpload01-init.obj `if test -f 'smpload01/init.c'; then $(CYGPATH_W) 'smpload01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpload01/init.c'; fi`
 
 smplock01/smplock01-init.o: smplock01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smplock01/smplock01-init.o -MD -MP -MF smplock01/$(DEPDIR)/smplock01-init.Tpo -c -o smplock01/smplock01-init.o `test -f 'smplock01/init.c' || echo '$(srcdir)/'`smplock01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smplock01/$(DEPDIR)/smplock01-init.Tpo smplock01/$(DEPDIR)/smplock01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smplock01/init.c' object='smplock01/smplock01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smplock01/smplock01-init.o -MD -MP -MF smplock01/$(DEPDIR)/smplock01-init.Tpo -c -o smplock01/smplock01-init.o `test -f 'smplock01/init.c' || echo '$(srcdir)/'`smplock01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smplock01/$(DEPDIR)/smplock01-init.Tpo smplock01/$(DEPDIR)/smplock01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smplock01/init.c' object='smplock01/smplock01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smplock01/smplock01-init.o `test -f 'smplock01/init.c' || echo '$(srcdir)/'`smplock01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smplock01/smplock01-init.o `test -f 'smplock01/init.c' || echo '$(srcdir)/'`smplock01/init.c
 
 smplock01/smplock01-init.obj: smplock01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smplock01/smplock01-init.obj -MD -MP -MF smplock01/$(DEPDIR)/smplock01-init.Tpo -c -o smplock01/smplock01-init.obj `if test -f 'smplock01/init.c'; then $(CYGPATH_W) 'smplock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smplock01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smplock01/$(DEPDIR)/smplock01-init.Tpo smplock01/$(DEPDIR)/smplock01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smplock01/init.c' object='smplock01/smplock01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smplock01/smplock01-init.obj -MD -MP -MF smplock01/$(DEPDIR)/smplock01-init.Tpo -c -o smplock01/smplock01-init.obj `if test -f 'smplock01/init.c'; then $(CYGPATH_W) 'smplock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smplock01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smplock01/$(DEPDIR)/smplock01-init.Tpo smplock01/$(DEPDIR)/smplock01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smplock01/init.c' object='smplock01/smplock01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smplock01/smplock01-init.obj `if test -f 'smplock01/init.c'; then $(CYGPATH_W) 'smplock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smplock01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smplock01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smplock01/smplock01-init.obj `if test -f 'smplock01/init.c'; then $(CYGPATH_W) 'smplock01/init.c'; else $(CYGPATH_W) '$(srcdir)/smplock01/init.c'; fi`
 
 smpmigration01/smpmigration01-init.o: smpmigration01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration01/smpmigration01-init.o -MD -MP -MF smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo -c -o smpmigration01/smpmigration01-init.o `test -f 'smpmigration01/init.c' || echo '$(srcdir)/'`smpmigration01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo smpmigration01/$(DEPDIR)/smpmigration01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmigration01/init.c' object='smpmigration01/smpmigration01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration01/smpmigration01-init.o -MD -MP -MF smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo -c -o smpmigration01/smpmigration01-init.o `test -f 'smpmigration01/init.c' || echo '$(srcdir)/'`smpmigration01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo smpmigration01/$(DEPDIR)/smpmigration01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmigration01/init.c' object='smpmigration01/smpmigration01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration01/smpmigration01-init.o `test -f 'smpmigration01/init.c' || echo '$(srcdir)/'`smpmigration01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration01/smpmigration01-init.o `test -f 'smpmigration01/init.c' || echo '$(srcdir)/'`smpmigration01/init.c
 
 smpmigration01/smpmigration01-init.obj: smpmigration01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration01/smpmigration01-init.obj -MD -MP -MF smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo -c -o smpmigration01/smpmigration01-init.obj `if test -f 'smpmigration01/init.c'; then $(CYGPATH_W) 'smpmigration01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo smpmigration01/$(DEPDIR)/smpmigration01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmigration01/init.c' object='smpmigration01/smpmigration01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration01/smpmigration01-init.obj -MD -MP -MF smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo -c -o smpmigration01/smpmigration01-init.obj `if test -f 'smpmigration01/init.c'; then $(CYGPATH_W) 'smpmigration01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmigration01/$(DEPDIR)/smpmigration01-init.Tpo smpmigration01/$(DEPDIR)/smpmigration01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmigration01/init.c' object='smpmigration01/smpmigration01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration01/smpmigration01-init.obj `if test -f 'smpmigration01/init.c'; then $(CYGPATH_W) 'smpmigration01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration01/smpmigration01-init.obj `if test -f 'smpmigration01/init.c'; then $(CYGPATH_W) 'smpmigration01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration01/init.c'; fi`
 
 smpmigration02/smpmigration02-init.o: smpmigration02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration02/smpmigration02-init.o -MD -MP -MF smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo -c -o smpmigration02/smpmigration02-init.o `test -f 'smpmigration02/init.c' || echo '$(srcdir)/'`smpmigration02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo smpmigration02/$(DEPDIR)/smpmigration02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmigration02/init.c' object='smpmigration02/smpmigration02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration02/smpmigration02-init.o -MD -MP -MF smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo -c -o smpmigration02/smpmigration02-init.o `test -f 'smpmigration02/init.c' || echo '$(srcdir)/'`smpmigration02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo smpmigration02/$(DEPDIR)/smpmigration02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmigration02/init.c' object='smpmigration02/smpmigration02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration02/smpmigration02-init.o `test -f 'smpmigration02/init.c' || echo '$(srcdir)/'`smpmigration02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration02/smpmigration02-init.o `test -f 'smpmigration02/init.c' || echo '$(srcdir)/'`smpmigration02/init.c
 
 smpmigration02/smpmigration02-init.obj: smpmigration02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration02/smpmigration02-init.obj -MD -MP -MF smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo -c -o smpmigration02/smpmigration02-init.obj `if test -f 'smpmigration02/init.c'; then $(CYGPATH_W) 'smpmigration02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo smpmigration02/$(DEPDIR)/smpmigration02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmigration02/init.c' object='smpmigration02/smpmigration02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmigration02/smpmigration02-init.obj -MD -MP -MF smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo -c -o smpmigration02/smpmigration02-init.obj `if test -f 'smpmigration02/init.c'; then $(CYGPATH_W) 'smpmigration02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmigration02/$(DEPDIR)/smpmigration02-init.Tpo smpmigration02/$(DEPDIR)/smpmigration02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmigration02/init.c' object='smpmigration02/smpmigration02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration02/smpmigration02-init.obj `if test -f 'smpmigration02/init.c'; then $(CYGPATH_W) 'smpmigration02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmigration02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmigration02/smpmigration02-init.obj `if test -f 'smpmigration02/init.c'; then $(CYGPATH_W) 'smpmigration02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmigration02/init.c'; fi`
 
 smpmrsp01/smpmrsp01-init.o: smpmrsp01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmrsp01/smpmrsp01-init.o -MD -MP -MF smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo -c -o smpmrsp01/smpmrsp01-init.o `test -f 'smpmrsp01/init.c' || echo '$(srcdir)/'`smpmrsp01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmrsp01/init.c' object='smpmrsp01/smpmrsp01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmrsp01/smpmrsp01-init.o -MD -MP -MF smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo -c -o smpmrsp01/smpmrsp01-init.o `test -f 'smpmrsp01/init.c' || echo '$(srcdir)/'`smpmrsp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmrsp01/init.c' object='smpmrsp01/smpmrsp01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmrsp01/smpmrsp01-init.o `test -f 'smpmrsp01/init.c' || echo '$(srcdir)/'`smpmrsp01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmrsp01/smpmrsp01-init.o `test -f 'smpmrsp01/init.c' || echo '$(srcdir)/'`smpmrsp01/init.c
 
 smpmrsp01/smpmrsp01-init.obj: smpmrsp01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmrsp01/smpmrsp01-init.obj -MD -MP -MF smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo -c -o smpmrsp01/smpmrsp01-init.obj `if test -f 'smpmrsp01/init.c'; then $(CYGPATH_W) 'smpmrsp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmrsp01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmrsp01/init.c' object='smpmrsp01/smpmrsp01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmrsp01/smpmrsp01-init.obj -MD -MP -MF smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo -c -o smpmrsp01/smpmrsp01-init.obj `if test -f 'smpmrsp01/init.c'; then $(CYGPATH_W) 'smpmrsp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmrsp01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmrsp01/$(DEPDIR)/smpmrsp01-init.Tpo smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmrsp01/init.c' object='smpmrsp01/smpmrsp01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmrsp01/smpmrsp01-init.obj `if test -f 'smpmrsp01/init.c'; then $(CYGPATH_W) 'smpmrsp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmrsp01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmrsp01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmrsp01/smpmrsp01-init.obj `if test -f 'smpmrsp01/init.c'; then $(CYGPATH_W) 'smpmrsp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmrsp01/init.c'; fi`
 
 smpmulticast01/smpmulticast01-init.o: smpmulticast01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmulticast01/smpmulticast01-init.o -MD -MP -MF smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo -c -o smpmulticast01/smpmulticast01-init.o `test -f 'smpmulticast01/init.c' || echo '$(srcdir)/'`smpmulticast01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmulticast01/init.c' object='smpmulticast01/smpmulticast01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmulticast01/smpmulticast01-init.o -MD -MP -MF smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo -c -o smpmulticast01/smpmulticast01-init.o `test -f 'smpmulticast01/init.c' || echo '$(srcdir)/'`smpmulticast01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmulticast01/init.c' object='smpmulticast01/smpmulticast01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmulticast01/smpmulticast01-init.o `test -f 'smpmulticast01/init.c' || echo '$(srcdir)/'`smpmulticast01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmulticast01/smpmulticast01-init.o `test -f 'smpmulticast01/init.c' || echo '$(srcdir)/'`smpmulticast01/init.c
 
 smpmulticast01/smpmulticast01-init.obj: smpmulticast01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmulticast01/smpmulticast01-init.obj -MD -MP -MF smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo -c -o smpmulticast01/smpmulticast01-init.obj `if test -f 'smpmulticast01/init.c'; then $(CYGPATH_W) 'smpmulticast01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmulticast01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmulticast01/init.c' object='smpmulticast01/smpmulticast01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmulticast01/smpmulticast01-init.obj -MD -MP -MF smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo -c -o smpmulticast01/smpmulticast01-init.obj `if test -f 'smpmulticast01/init.c'; then $(CYGPATH_W) 'smpmulticast01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmulticast01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmulticast01/$(DEPDIR)/smpmulticast01-init.Tpo smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmulticast01/init.c' object='smpmulticast01/smpmulticast01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmulticast01/smpmulticast01-init.obj `if test -f 'smpmulticast01/init.c'; then $(CYGPATH_W) 'smpmulticast01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmulticast01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmulticast01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmulticast01/smpmulticast01-init.obj `if test -f 'smpmulticast01/init.c'; then $(CYGPATH_W) 'smpmulticast01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmulticast01/init.c'; fi`
 
 smpmutex01/smpmutex01-init.o: smpmutex01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex01/smpmutex01-init.o -MD -MP -MF smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo -c -o smpmutex01/smpmutex01-init.o `test -f 'smpmutex01/init.c' || echo '$(srcdir)/'`smpmutex01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo smpmutex01/$(DEPDIR)/smpmutex01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmutex01/init.c' object='smpmutex01/smpmutex01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex01/smpmutex01-init.o -MD -MP -MF smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo -c -o smpmutex01/smpmutex01-init.o `test -f 'smpmutex01/init.c' || echo '$(srcdir)/'`smpmutex01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo smpmutex01/$(DEPDIR)/smpmutex01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmutex01/init.c' object='smpmutex01/smpmutex01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex01/smpmutex01-init.o `test -f 'smpmutex01/init.c' || echo '$(srcdir)/'`smpmutex01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex01/smpmutex01-init.o `test -f 'smpmutex01/init.c' || echo '$(srcdir)/'`smpmutex01/init.c
 
 smpmutex01/smpmutex01-init.obj: smpmutex01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex01/smpmutex01-init.obj -MD -MP -MF smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo -c -o smpmutex01/smpmutex01-init.obj `if test -f 'smpmutex01/init.c'; then $(CYGPATH_W) 'smpmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo smpmutex01/$(DEPDIR)/smpmutex01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmutex01/init.c' object='smpmutex01/smpmutex01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex01/smpmutex01-init.obj -MD -MP -MF smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo -c -o smpmutex01/smpmutex01-init.obj `if test -f 'smpmutex01/init.c'; then $(CYGPATH_W) 'smpmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmutex01/$(DEPDIR)/smpmutex01-init.Tpo smpmutex01/$(DEPDIR)/smpmutex01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmutex01/init.c' object='smpmutex01/smpmutex01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex01/smpmutex01-init.obj `if test -f 'smpmutex01/init.c'; then $(CYGPATH_W) 'smpmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex01/smpmutex01-init.obj `if test -f 'smpmutex01/init.c'; then $(CYGPATH_W) 'smpmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex01/init.c'; fi`
 
 smpmutex02/smpmutex02-init.o: smpmutex02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex02/smpmutex02-init.o -MD -MP -MF smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo -c -o smpmutex02/smpmutex02-init.o `test -f 'smpmutex02/init.c' || echo '$(srcdir)/'`smpmutex02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo smpmutex02/$(DEPDIR)/smpmutex02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmutex02/init.c' object='smpmutex02/smpmutex02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex02/smpmutex02-init.o -MD -MP -MF smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo -c -o smpmutex02/smpmutex02-init.o `test -f 'smpmutex02/init.c' || echo '$(srcdir)/'`smpmutex02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo smpmutex02/$(DEPDIR)/smpmutex02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmutex02/init.c' object='smpmutex02/smpmutex02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex02/smpmutex02-init.o `test -f 'smpmutex02/init.c' || echo '$(srcdir)/'`smpmutex02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex02/smpmutex02-init.o `test -f 'smpmutex02/init.c' || echo '$(srcdir)/'`smpmutex02/init.c
 
 smpmutex02/smpmutex02-init.obj: smpmutex02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex02/smpmutex02-init.obj -MD -MP -MF smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo -c -o smpmutex02/smpmutex02-init.obj `if test -f 'smpmutex02/init.c'; then $(CYGPATH_W) 'smpmutex02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo smpmutex02/$(DEPDIR)/smpmutex02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpmutex02/init.c' object='smpmutex02/smpmutex02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpmutex02/smpmutex02-init.obj -MD -MP -MF smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo -c -o smpmutex02/smpmutex02-init.obj `if test -f 'smpmutex02/init.c'; then $(CYGPATH_W) 'smpmutex02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpmutex02/$(DEPDIR)/smpmutex02-init.Tpo smpmutex02/$(DEPDIR)/smpmutex02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpmutex02/init.c' object='smpmutex02/smpmutex02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex02/smpmutex02-init.obj `if test -f 'smpmutex02/init.c'; then $(CYGPATH_W) 'smpmutex02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpmutex02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpmutex02/smpmutex02-init.obj `if test -f 'smpmutex02/init.c'; then $(CYGPATH_W) 'smpmutex02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpmutex02/init.c'; fi`
 
 smpopenmp01/smpopenmp01-init.o: smpopenmp01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -MT smpopenmp01/smpopenmp01-init.o -MD -MP -MF smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo -c -o smpopenmp01/smpopenmp01-init.o `test -f 'smpopenmp01/init.c' || echo '$(srcdir)/'`smpopenmp01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpopenmp01/init.c' object='smpopenmp01/smpopenmp01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -MT smpopenmp01/smpopenmp01-init.o -MD -MP -MF smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo -c -o smpopenmp01/smpopenmp01-init.o `test -f 'smpopenmp01/init.c' || echo '$(srcdir)/'`smpopenmp01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpopenmp01/init.c' object='smpopenmp01/smpopenmp01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -c -o smpopenmp01/smpopenmp01-init.o `test -f 'smpopenmp01/init.c' || echo '$(srcdir)/'`smpopenmp01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -c -o smpopenmp01/smpopenmp01-init.o `test -f 'smpopenmp01/init.c' || echo '$(srcdir)/'`smpopenmp01/init.c
 
 smpopenmp01/smpopenmp01-init.obj: smpopenmp01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -MT smpopenmp01/smpopenmp01-init.obj -MD -MP -MF smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo -c -o smpopenmp01/smpopenmp01-init.obj `if test -f 'smpopenmp01/init.c'; then $(CYGPATH_W) 'smpopenmp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpopenmp01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpopenmp01/init.c' object='smpopenmp01/smpopenmp01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -MT smpopenmp01/smpopenmp01-init.obj -MD -MP -MF smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo -c -o smpopenmp01/smpopenmp01-init.obj `if test -f 'smpopenmp01/init.c'; then $(CYGPATH_W) 'smpopenmp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpopenmp01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpopenmp01/$(DEPDIR)/smpopenmp01-init.Tpo smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpopenmp01/init.c' object='smpopenmp01/smpopenmp01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -c -o smpopenmp01/smpopenmp01-init.obj `if test -f 'smpopenmp01/init.c'; then $(CYGPATH_W) 'smpopenmp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpopenmp01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpopenmp01_CPPFLAGS) $(CPPFLAGS) $(smpopenmp01_CFLAGS) $(CFLAGS) -c -o smpopenmp01/smpopenmp01-init.obj `if test -f 'smpopenmp01/init.c'; then $(CYGPATH_W) 'smpopenmp01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpopenmp01/init.c'; fi`
 
 smppsxaffinity01/smppsxaffinity01-init.o: smppsxaffinity01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity01/smppsxaffinity01-init.o -MD -MP -MF smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo -c -o smppsxaffinity01/smppsxaffinity01-init.o `test -f 'smppsxaffinity01/init.c' || echo '$(srcdir)/'`smppsxaffinity01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxaffinity01/init.c' object='smppsxaffinity01/smppsxaffinity01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity01/smppsxaffinity01-init.o -MD -MP -MF smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo -c -o smppsxaffinity01/smppsxaffinity01-init.o `test -f 'smppsxaffinity01/init.c' || echo '$(srcdir)/'`smppsxaffinity01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxaffinity01/init.c' object='smppsxaffinity01/smppsxaffinity01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity01/smppsxaffinity01-init.o `test -f 'smppsxaffinity01/init.c' || echo '$(srcdir)/'`smppsxaffinity01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity01/smppsxaffinity01-init.o `test -f 'smppsxaffinity01/init.c' || echo '$(srcdir)/'`smppsxaffinity01/init.c
 
 smppsxaffinity01/smppsxaffinity01-init.obj: smppsxaffinity01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity01/smppsxaffinity01-init.obj -MD -MP -MF smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo -c -o smppsxaffinity01/smppsxaffinity01-init.obj `if test -f 'smppsxaffinity01/init.c'; then $(CYGPATH_W) 'smppsxaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxaffinity01/init.c' object='smppsxaffinity01/smppsxaffinity01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity01/smppsxaffinity01-init.obj -MD -MP -MF smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo -c -o smppsxaffinity01/smppsxaffinity01-init.obj `if test -f 'smppsxaffinity01/init.c'; then $(CYGPATH_W) 'smppsxaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Tpo smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxaffinity01/init.c' object='smppsxaffinity01/smppsxaffinity01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity01/smppsxaffinity01-init.obj `if test -f 'smppsxaffinity01/init.c'; then $(CYGPATH_W) 'smppsxaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity01/smppsxaffinity01-init.obj `if test -f 'smppsxaffinity01/init.c'; then $(CYGPATH_W) 'smppsxaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity01/init.c'; fi`
 
 smppsxaffinity02/smppsxaffinity02-init.o: smppsxaffinity02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity02/smppsxaffinity02-init.o -MD -MP -MF smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo -c -o smppsxaffinity02/smppsxaffinity02-init.o `test -f 'smppsxaffinity02/init.c' || echo '$(srcdir)/'`smppsxaffinity02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxaffinity02/init.c' object='smppsxaffinity02/smppsxaffinity02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity02/smppsxaffinity02-init.o -MD -MP -MF smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo -c -o smppsxaffinity02/smppsxaffinity02-init.o `test -f 'smppsxaffinity02/init.c' || echo '$(srcdir)/'`smppsxaffinity02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxaffinity02/init.c' object='smppsxaffinity02/smppsxaffinity02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity02/smppsxaffinity02-init.o `test -f 'smppsxaffinity02/init.c' || echo '$(srcdir)/'`smppsxaffinity02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity02/smppsxaffinity02-init.o `test -f 'smppsxaffinity02/init.c' || echo '$(srcdir)/'`smppsxaffinity02/init.c
 
 smppsxaffinity02/smppsxaffinity02-init.obj: smppsxaffinity02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity02/smppsxaffinity02-init.obj -MD -MP -MF smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo -c -o smppsxaffinity02/smppsxaffinity02-init.obj `if test -f 'smppsxaffinity02/init.c'; then $(CYGPATH_W) 'smppsxaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxaffinity02/init.c' object='smppsxaffinity02/smppsxaffinity02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxaffinity02/smppsxaffinity02-init.obj -MD -MP -MF smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo -c -o smppsxaffinity02/smppsxaffinity02-init.obj `if test -f 'smppsxaffinity02/init.c'; then $(CYGPATH_W) 'smppsxaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Tpo smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxaffinity02/init.c' object='smppsxaffinity02/smppsxaffinity02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity02/smppsxaffinity02-init.obj `if test -f 'smppsxaffinity02/init.c'; then $(CYGPATH_W) 'smppsxaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxaffinity02/smppsxaffinity02-init.obj `if test -f 'smppsxaffinity02/init.c'; then $(CYGPATH_W) 'smppsxaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxaffinity02/init.c'; fi`
 
 smppsxmutex01/smppsxmutex01-init.o: smppsxmutex01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxmutex01/smppsxmutex01-init.o -MD -MP -MF smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo -c -o smppsxmutex01/smppsxmutex01-init.o `test -f 'smppsxmutex01/init.c' || echo '$(srcdir)/'`smppsxmutex01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxmutex01/init.c' object='smppsxmutex01/smppsxmutex01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxmutex01/smppsxmutex01-init.o -MD -MP -MF smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo -c -o smppsxmutex01/smppsxmutex01-init.o `test -f 'smppsxmutex01/init.c' || echo '$(srcdir)/'`smppsxmutex01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxmutex01/init.c' object='smppsxmutex01/smppsxmutex01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxmutex01/smppsxmutex01-init.o `test -f 'smppsxmutex01/init.c' || echo '$(srcdir)/'`smppsxmutex01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxmutex01/smppsxmutex01-init.o `test -f 'smppsxmutex01/init.c' || echo '$(srcdir)/'`smppsxmutex01/init.c
 
 smppsxmutex01/smppsxmutex01-init.obj: smppsxmutex01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxmutex01/smppsxmutex01-init.obj -MD -MP -MF smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo -c -o smppsxmutex01/smppsxmutex01-init.obj `if test -f 'smppsxmutex01/init.c'; then $(CYGPATH_W) 'smppsxmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxmutex01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxmutex01/init.c' object='smppsxmutex01/smppsxmutex01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxmutex01/smppsxmutex01-init.obj -MD -MP -MF smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo -c -o smppsxmutex01/smppsxmutex01-init.obj `if test -f 'smppsxmutex01/init.c'; then $(CYGPATH_W) 'smppsxmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxmutex01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Tpo smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxmutex01/init.c' object='smppsxmutex01/smppsxmutex01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxmutex01/smppsxmutex01-init.obj `if test -f 'smppsxmutex01/init.c'; then $(CYGPATH_W) 'smppsxmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxmutex01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxmutex01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxmutex01/smppsxmutex01-init.obj `if test -f 'smppsxmutex01/init.c'; then $(CYGPATH_W) 'smppsxmutex01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxmutex01/init.c'; fi`
 
 smppsxsignal01/smppsxsignal01-init.o: smppsxsignal01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxsignal01/smppsxsignal01-init.o -MD -MP -MF smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo -c -o smppsxsignal01/smppsxsignal01-init.o `test -f 'smppsxsignal01/init.c' || echo '$(srcdir)/'`smppsxsignal01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxsignal01/init.c' object='smppsxsignal01/smppsxsignal01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxsignal01/smppsxsignal01-init.o -MD -MP -MF smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo -c -o smppsxsignal01/smppsxsignal01-init.o `test -f 'smppsxsignal01/init.c' || echo '$(srcdir)/'`smppsxsignal01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxsignal01/init.c' object='smppsxsignal01/smppsxsignal01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxsignal01/smppsxsignal01-init.o `test -f 'smppsxsignal01/init.c' || echo '$(srcdir)/'`smppsxsignal01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxsignal01/smppsxsignal01-init.o `test -f 'smppsxsignal01/init.c' || echo '$(srcdir)/'`smppsxsignal01/init.c
 
 smppsxsignal01/smppsxsignal01-init.obj: smppsxsignal01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxsignal01/smppsxsignal01-init.obj -MD -MP -MF smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo -c -o smppsxsignal01/smppsxsignal01-init.obj `if test -f 'smppsxsignal01/init.c'; then $(CYGPATH_W) 'smppsxsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxsignal01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smppsxsignal01/init.c' object='smppsxsignal01/smppsxsignal01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smppsxsignal01/smppsxsignal01-init.obj -MD -MP -MF smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo -c -o smppsxsignal01/smppsxsignal01-init.obj `if test -f 'smppsxsignal01/init.c'; then $(CYGPATH_W) 'smppsxsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxsignal01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Tpo smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smppsxsignal01/init.c' object='smppsxsignal01/smppsxsignal01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxsignal01/smppsxsignal01-init.obj `if test -f 'smppsxsignal01/init.c'; then $(CYGPATH_W) 'smppsxsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxsignal01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smppsxsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smppsxsignal01/smppsxsignal01-init.obj `if test -f 'smppsxsignal01/init.c'; then $(CYGPATH_W) 'smppsxsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smppsxsignal01/init.c'; fi`
 
 smpschedaffinity01/smpschedaffinity01-init.o: smpschedaffinity01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity01/smpschedaffinity01-init.o -MD -MP -MF smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo -c -o smpschedaffinity01/smpschedaffinity01-init.o `test -f 'smpschedaffinity01/init.c' || echo '$(srcdir)/'`smpschedaffinity01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity01/init.c' object='smpschedaffinity01/smpschedaffinity01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity01/smpschedaffinity01-init.o -MD -MP -MF smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo -c -o smpschedaffinity01/smpschedaffinity01-init.o `test -f 'smpschedaffinity01/init.c' || echo '$(srcdir)/'`smpschedaffinity01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity01/init.c' object='smpschedaffinity01/smpschedaffinity01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity01/smpschedaffinity01-init.o `test -f 'smpschedaffinity01/init.c' || echo '$(srcdir)/'`smpschedaffinity01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity01/smpschedaffinity01-init.o `test -f 'smpschedaffinity01/init.c' || echo '$(srcdir)/'`smpschedaffinity01/init.c
 
 smpschedaffinity01/smpschedaffinity01-init.obj: smpschedaffinity01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity01/smpschedaffinity01-init.obj -MD -MP -MF smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo -c -o smpschedaffinity01/smpschedaffinity01-init.obj `if test -f 'smpschedaffinity01/init.c'; then $(CYGPATH_W) 'smpschedaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity01/init.c' object='smpschedaffinity01/smpschedaffinity01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity01/smpschedaffinity01-init.obj -MD -MP -MF smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo -c -o smpschedaffinity01/smpschedaffinity01-init.obj `if test -f 'smpschedaffinity01/init.c'; then $(CYGPATH_W) 'smpschedaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Tpo smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity01/init.c' object='smpschedaffinity01/smpschedaffinity01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity01/smpschedaffinity01-init.obj `if test -f 'smpschedaffinity01/init.c'; then $(CYGPATH_W) 'smpschedaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity01/smpschedaffinity01-init.obj `if test -f 'smpschedaffinity01/init.c'; then $(CYGPATH_W) 'smpschedaffinity01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity01/init.c'; fi`
 
 smpschedaffinity02/smpschedaffinity02-init.o: smpschedaffinity02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity02/smpschedaffinity02-init.o -MD -MP -MF smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo -c -o smpschedaffinity02/smpschedaffinity02-init.o `test -f 'smpschedaffinity02/init.c' || echo '$(srcdir)/'`smpschedaffinity02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity02/init.c' object='smpschedaffinity02/smpschedaffinity02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity02/smpschedaffinity02-init.o -MD -MP -MF smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo -c -o smpschedaffinity02/smpschedaffinity02-init.o `test -f 'smpschedaffinity02/init.c' || echo '$(srcdir)/'`smpschedaffinity02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity02/init.c' object='smpschedaffinity02/smpschedaffinity02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity02/smpschedaffinity02-init.o `test -f 'smpschedaffinity02/init.c' || echo '$(srcdir)/'`smpschedaffinity02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity02/smpschedaffinity02-init.o `test -f 'smpschedaffinity02/init.c' || echo '$(srcdir)/'`smpschedaffinity02/init.c
 
 smpschedaffinity02/smpschedaffinity02-init.obj: smpschedaffinity02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity02/smpschedaffinity02-init.obj -MD -MP -MF smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo -c -o smpschedaffinity02/smpschedaffinity02-init.obj `if test -f 'smpschedaffinity02/init.c'; then $(CYGPATH_W) 'smpschedaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity02/init.c' object='smpschedaffinity02/smpschedaffinity02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity02/smpschedaffinity02-init.obj -MD -MP -MF smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo -c -o smpschedaffinity02/smpschedaffinity02-init.obj `if test -f 'smpschedaffinity02/init.c'; then $(CYGPATH_W) 'smpschedaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Tpo smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity02/init.c' object='smpschedaffinity02/smpschedaffinity02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity02/smpschedaffinity02-init.obj `if test -f 'smpschedaffinity02/init.c'; then $(CYGPATH_W) 'smpschedaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity02/smpschedaffinity02-init.obj `if test -f 'smpschedaffinity02/init.c'; then $(CYGPATH_W) 'smpschedaffinity02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity02/init.c'; fi`
 
 smpschedaffinity03/smpschedaffinity03-init.o: smpschedaffinity03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity03/smpschedaffinity03-init.o -MD -MP -MF smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo -c -o smpschedaffinity03/smpschedaffinity03-init.o `test -f 'smpschedaffinity03/init.c' || echo '$(srcdir)/'`smpschedaffinity03/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity03/init.c' object='smpschedaffinity03/smpschedaffinity03-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity03/smpschedaffinity03-init.o -MD -MP -MF smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo -c -o smpschedaffinity03/smpschedaffinity03-init.o `test -f 'smpschedaffinity03/init.c' || echo '$(srcdir)/'`smpschedaffinity03/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity03/init.c' object='smpschedaffinity03/smpschedaffinity03-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity03/smpschedaffinity03-init.o `test -f 'smpschedaffinity03/init.c' || echo '$(srcdir)/'`smpschedaffinity03/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity03/smpschedaffinity03-init.o `test -f 'smpschedaffinity03/init.c' || echo '$(srcdir)/'`smpschedaffinity03/init.c
 
 smpschedaffinity03/smpschedaffinity03-init.obj: smpschedaffinity03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity03/smpschedaffinity03-init.obj -MD -MP -MF smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo -c -o smpschedaffinity03/smpschedaffinity03-init.obj `if test -f 'smpschedaffinity03/init.c'; then $(CYGPATH_W) 'smpschedaffinity03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity03/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity03/init.c' object='smpschedaffinity03/smpschedaffinity03-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity03/smpschedaffinity03-init.obj -MD -MP -MF smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo -c -o smpschedaffinity03/smpschedaffinity03-init.obj `if test -f 'smpschedaffinity03/init.c'; then $(CYGPATH_W) 'smpschedaffinity03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity03/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Tpo smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity03/init.c' object='smpschedaffinity03/smpschedaffinity03-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity03/smpschedaffinity03-init.obj `if test -f 'smpschedaffinity03/init.c'; then $(CYGPATH_W) 'smpschedaffinity03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity03/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity03/smpschedaffinity03-init.obj `if test -f 'smpschedaffinity03/init.c'; then $(CYGPATH_W) 'smpschedaffinity03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity03/init.c'; fi`
 
 smpschedaffinity04/smpschedaffinity04-init.o: smpschedaffinity04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity04/smpschedaffinity04-init.o -MD -MP -MF smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo -c -o smpschedaffinity04/smpschedaffinity04-init.o `test -f 'smpschedaffinity04/init.c' || echo '$(srcdir)/'`smpschedaffinity04/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity04/init.c' object='smpschedaffinity04/smpschedaffinity04-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity04/smpschedaffinity04-init.o -MD -MP -MF smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo -c -o smpschedaffinity04/smpschedaffinity04-init.o `test -f 'smpschedaffinity04/init.c' || echo '$(srcdir)/'`smpschedaffinity04/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity04/init.c' object='smpschedaffinity04/smpschedaffinity04-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity04/smpschedaffinity04-init.o `test -f 'smpschedaffinity04/init.c' || echo '$(srcdir)/'`smpschedaffinity04/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity04/smpschedaffinity04-init.o `test -f 'smpschedaffinity04/init.c' || echo '$(srcdir)/'`smpschedaffinity04/init.c
 
 smpschedaffinity04/smpschedaffinity04-init.obj: smpschedaffinity04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity04/smpschedaffinity04-init.obj -MD -MP -MF smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo -c -o smpschedaffinity04/smpschedaffinity04-init.obj `if test -f 'smpschedaffinity04/init.c'; then $(CYGPATH_W) 'smpschedaffinity04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity04/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity04/init.c' object='smpschedaffinity04/smpschedaffinity04-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity04/smpschedaffinity04-init.obj -MD -MP -MF smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo -c -o smpschedaffinity04/smpschedaffinity04-init.obj `if test -f 'smpschedaffinity04/init.c'; then $(CYGPATH_W) 'smpschedaffinity04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity04/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Tpo smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity04/init.c' object='smpschedaffinity04/smpschedaffinity04-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity04/smpschedaffinity04-init.obj `if test -f 'smpschedaffinity04/init.c'; then $(CYGPATH_W) 'smpschedaffinity04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity04/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity04/smpschedaffinity04-init.obj `if test -f 'smpschedaffinity04/init.c'; then $(CYGPATH_W) 'smpschedaffinity04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity04/init.c'; fi`
 
 smpschedaffinity05/smpschedaffinity05-init.o: smpschedaffinity05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity05/smpschedaffinity05-init.o -MD -MP -MF smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo -c -o smpschedaffinity05/smpschedaffinity05-init.o `test -f 'smpschedaffinity05/init.c' || echo '$(srcdir)/'`smpschedaffinity05/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity05/init.c' object='smpschedaffinity05/smpschedaffinity05-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity05/smpschedaffinity05-init.o -MD -MP -MF smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo -c -o smpschedaffinity05/smpschedaffinity05-init.o `test -f 'smpschedaffinity05/init.c' || echo '$(srcdir)/'`smpschedaffinity05/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity05/init.c' object='smpschedaffinity05/smpschedaffinity05-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity05/smpschedaffinity05-init.o `test -f 'smpschedaffinity05/init.c' || echo '$(srcdir)/'`smpschedaffinity05/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity05/smpschedaffinity05-init.o `test -f 'smpschedaffinity05/init.c' || echo '$(srcdir)/'`smpschedaffinity05/init.c
 
 smpschedaffinity05/smpschedaffinity05-init.obj: smpschedaffinity05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity05/smpschedaffinity05-init.obj -MD -MP -MF smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo -c -o smpschedaffinity05/smpschedaffinity05-init.obj `if test -f 'smpschedaffinity05/init.c'; then $(CYGPATH_W) 'smpschedaffinity05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity05/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedaffinity05/init.c' object='smpschedaffinity05/smpschedaffinity05-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedaffinity05/smpschedaffinity05-init.obj -MD -MP -MF smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo -c -o smpschedaffinity05/smpschedaffinity05-init.obj `if test -f 'smpschedaffinity05/init.c'; then $(CYGPATH_W) 'smpschedaffinity05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity05/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Tpo smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedaffinity05/init.c' object='smpschedaffinity05/smpschedaffinity05-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity05/smpschedaffinity05-init.obj `if test -f 'smpschedaffinity05/init.c'; then $(CYGPATH_W) 'smpschedaffinity05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity05/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedaffinity05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedaffinity05/smpschedaffinity05-init.obj `if test -f 'smpschedaffinity05/init.c'; then $(CYGPATH_W) 'smpschedaffinity05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedaffinity05/init.c'; fi`
 
 smpschededf01/smpschededf01-init.o: smpschededf01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf01/smpschededf01-init.o -MD -MP -MF smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo -c -o smpschededf01/smpschededf01-init.o `test -f 'smpschededf01/init.c' || echo '$(srcdir)/'`smpschededf01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo smpschededf01/$(DEPDIR)/smpschededf01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf01/init.c' object='smpschededf01/smpschededf01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf01/smpschededf01-init.o -MD -MP -MF smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo -c -o smpschededf01/smpschededf01-init.o `test -f 'smpschededf01/init.c' || echo '$(srcdir)/'`smpschededf01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo smpschededf01/$(DEPDIR)/smpschededf01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf01/init.c' object='smpschededf01/smpschededf01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf01/smpschededf01-init.o `test -f 'smpschededf01/init.c' || echo '$(srcdir)/'`smpschededf01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf01/smpschededf01-init.o `test -f 'smpschededf01/init.c' || echo '$(srcdir)/'`smpschededf01/init.c
 
 smpschededf01/smpschededf01-init.obj: smpschededf01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf01/smpschededf01-init.obj -MD -MP -MF smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo -c -o smpschededf01/smpschededf01-init.obj `if test -f 'smpschededf01/init.c'; then $(CYGPATH_W) 'smpschededf01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo smpschededf01/$(DEPDIR)/smpschededf01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf01/init.c' object='smpschededf01/smpschededf01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf01/smpschededf01-init.obj -MD -MP -MF smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo -c -o smpschededf01/smpschededf01-init.obj `if test -f 'smpschededf01/init.c'; then $(CYGPATH_W) 'smpschededf01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf01/$(DEPDIR)/smpschededf01-init.Tpo smpschededf01/$(DEPDIR)/smpschededf01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf01/init.c' object='smpschededf01/smpschededf01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf01/smpschededf01-init.obj `if test -f 'smpschededf01/init.c'; then $(CYGPATH_W) 'smpschededf01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf01/smpschededf01-init.obj `if test -f 'smpschededf01/init.c'; then $(CYGPATH_W) 'smpschededf01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf01/init.c'; fi`
 
 smpschededf02/smpschededf02-init.o: smpschededf02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf02/smpschededf02-init.o -MD -MP -MF smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo -c -o smpschededf02/smpschededf02-init.o `test -f 'smpschededf02/init.c' || echo '$(srcdir)/'`smpschededf02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo smpschededf02/$(DEPDIR)/smpschededf02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf02/init.c' object='smpschededf02/smpschededf02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf02/smpschededf02-init.o -MD -MP -MF smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo -c -o smpschededf02/smpschededf02-init.o `test -f 'smpschededf02/init.c' || echo '$(srcdir)/'`smpschededf02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo smpschededf02/$(DEPDIR)/smpschededf02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf02/init.c' object='smpschededf02/smpschededf02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf02/smpschededf02-init.o `test -f 'smpschededf02/init.c' || echo '$(srcdir)/'`smpschededf02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf02/smpschededf02-init.o `test -f 'smpschededf02/init.c' || echo '$(srcdir)/'`smpschededf02/init.c
 
 smpschededf02/smpschededf02-init.obj: smpschededf02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf02/smpschededf02-init.obj -MD -MP -MF smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo -c -o smpschededf02/smpschededf02-init.obj `if test -f 'smpschededf02/init.c'; then $(CYGPATH_W) 'smpschededf02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo smpschededf02/$(DEPDIR)/smpschededf02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf02/init.c' object='smpschededf02/smpschededf02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf02/smpschededf02-init.obj -MD -MP -MF smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo -c -o smpschededf02/smpschededf02-init.obj `if test -f 'smpschededf02/init.c'; then $(CYGPATH_W) 'smpschededf02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf02/$(DEPDIR)/smpschededf02-init.Tpo smpschededf02/$(DEPDIR)/smpschededf02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf02/init.c' object='smpschededf02/smpschededf02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf02/smpschededf02-init.obj `if test -f 'smpschededf02/init.c'; then $(CYGPATH_W) 'smpschededf02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf02/smpschededf02-init.obj `if test -f 'smpschededf02/init.c'; then $(CYGPATH_W) 'smpschededf02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf02/init.c'; fi`
 
 smpschededf03/smpschededf03-init.o: smpschededf03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf03/smpschededf03-init.o -MD -MP -MF smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo -c -o smpschededf03/smpschededf03-init.o `test -f 'smpschededf03/init.c' || echo '$(srcdir)/'`smpschededf03/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo smpschededf03/$(DEPDIR)/smpschededf03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf03/init.c' object='smpschededf03/smpschededf03-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf03/smpschededf03-init.o -MD -MP -MF smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo -c -o smpschededf03/smpschededf03-init.o `test -f 'smpschededf03/init.c' || echo '$(srcdir)/'`smpschededf03/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo smpschededf03/$(DEPDIR)/smpschededf03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf03/init.c' object='smpschededf03/smpschededf03-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf03/smpschededf03-init.o `test -f 'smpschededf03/init.c' || echo '$(srcdir)/'`smpschededf03/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf03/smpschededf03-init.o `test -f 'smpschededf03/init.c' || echo '$(srcdir)/'`smpschededf03/init.c
 
 smpschededf03/smpschededf03-init.obj: smpschededf03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf03/smpschededf03-init.obj -MD -MP -MF smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo -c -o smpschededf03/smpschededf03-init.obj `if test -f 'smpschededf03/init.c'; then $(CYGPATH_W) 'smpschededf03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf03/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo smpschededf03/$(DEPDIR)/smpschededf03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf03/init.c' object='smpschededf03/smpschededf03-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf03/smpschededf03-init.obj -MD -MP -MF smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo -c -o smpschededf03/smpschededf03-init.obj `if test -f 'smpschededf03/init.c'; then $(CYGPATH_W) 'smpschededf03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf03/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf03/$(DEPDIR)/smpschededf03-init.Tpo smpschededf03/$(DEPDIR)/smpschededf03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf03/init.c' object='smpschededf03/smpschededf03-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf03/smpschededf03-init.obj `if test -f 'smpschededf03/init.c'; then $(CYGPATH_W) 'smpschededf03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf03/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf03/smpschededf03-init.obj `if test -f 'smpschededf03/init.c'; then $(CYGPATH_W) 'smpschededf03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf03/init.c'; fi`
 
 smpschededf04/smpschededf04-init.o: smpschededf04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf04/smpschededf04-init.o -MD -MP -MF smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo -c -o smpschededf04/smpschededf04-init.o `test -f 'smpschededf04/init.c' || echo '$(srcdir)/'`smpschededf04/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo smpschededf04/$(DEPDIR)/smpschededf04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf04/init.c' object='smpschededf04/smpschededf04-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf04/smpschededf04-init.o -MD -MP -MF smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo -c -o smpschededf04/smpschededf04-init.o `test -f 'smpschededf04/init.c' || echo '$(srcdir)/'`smpschededf04/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo smpschededf04/$(DEPDIR)/smpschededf04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf04/init.c' object='smpschededf04/smpschededf04-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf04/smpschededf04-init.o `test -f 'smpschededf04/init.c' || echo '$(srcdir)/'`smpschededf04/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf04/smpschededf04-init.o `test -f 'smpschededf04/init.c' || echo '$(srcdir)/'`smpschededf04/init.c
 
 smpschededf04/smpschededf04-init.obj: smpschededf04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf04/smpschededf04-init.obj -MD -MP -MF smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo -c -o smpschededf04/smpschededf04-init.obj `if test -f 'smpschededf04/init.c'; then $(CYGPATH_W) 'smpschededf04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf04/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo smpschededf04/$(DEPDIR)/smpschededf04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschededf04/init.c' object='smpschededf04/smpschededf04-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschededf04/smpschededf04-init.obj -MD -MP -MF smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo -c -o smpschededf04/smpschededf04-init.obj `if test -f 'smpschededf04/init.c'; then $(CYGPATH_W) 'smpschededf04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf04/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschededf04/$(DEPDIR)/smpschededf04-init.Tpo smpschededf04/$(DEPDIR)/smpschededf04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschededf04/init.c' object='smpschededf04/smpschededf04-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf04/smpschededf04-init.obj `if test -f 'smpschededf04/init.c'; then $(CYGPATH_W) 'smpschededf04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf04/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschededf04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschededf04/smpschededf04-init.obj `if test -f 'smpschededf04/init.c'; then $(CYGPATH_W) 'smpschededf04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschededf04/init.c'; fi`
 
 smpschedsem01/smpschedsem01-init.o: smpschedsem01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedsem01/smpschedsem01-init.o -MD -MP -MF smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo -c -o smpschedsem01/smpschedsem01-init.o `test -f 'smpschedsem01/init.c' || echo '$(srcdir)/'`smpschedsem01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedsem01/init.c' object='smpschedsem01/smpschedsem01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedsem01/smpschedsem01-init.o -MD -MP -MF smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo -c -o smpschedsem01/smpschedsem01-init.o `test -f 'smpschedsem01/init.c' || echo '$(srcdir)/'`smpschedsem01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedsem01/init.c' object='smpschedsem01/smpschedsem01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedsem01/smpschedsem01-init.o `test -f 'smpschedsem01/init.c' || echo '$(srcdir)/'`smpschedsem01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedsem01/smpschedsem01-init.o `test -f 'smpschedsem01/init.c' || echo '$(srcdir)/'`smpschedsem01/init.c
 
 smpschedsem01/smpschedsem01-init.obj: smpschedsem01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedsem01/smpschedsem01-init.obj -MD -MP -MF smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo -c -o smpschedsem01/smpschedsem01-init.obj `if test -f 'smpschedsem01/init.c'; then $(CYGPATH_W) 'smpschedsem01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedsem01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpschedsem01/init.c' object='smpschedsem01/smpschedsem01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpschedsem01/smpschedsem01-init.obj -MD -MP -MF smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo -c -o smpschedsem01/smpschedsem01-init.obj `if test -f 'smpschedsem01/init.c'; then $(CYGPATH_W) 'smpschedsem01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedsem01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpschedsem01/$(DEPDIR)/smpschedsem01-init.Tpo smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpschedsem01/init.c' object='smpschedsem01/smpschedsem01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedsem01/smpschedsem01-init.obj `if test -f 'smpschedsem01/init.c'; then $(CYGPATH_W) 'smpschedsem01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedsem01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpschedsem01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpschedsem01/smpschedsem01-init.obj `if test -f 'smpschedsem01/init.c'; then $(CYGPATH_W) 'smpschedsem01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpschedsem01/init.c'; fi`
 
 smpscheduler01/smpscheduler01-init.o: smpscheduler01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler01/smpscheduler01-init.o -MD -MP -MF smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo -c -o smpscheduler01/smpscheduler01-init.o `test -f 'smpscheduler01/init.c' || echo '$(srcdir)/'`smpscheduler01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler01/init.c' object='smpscheduler01/smpscheduler01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler01/smpscheduler01-init.o -MD -MP -MF smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo -c -o smpscheduler01/smpscheduler01-init.o `test -f 'smpscheduler01/init.c' || echo '$(srcdir)/'`smpscheduler01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler01/init.c' object='smpscheduler01/smpscheduler01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler01/smpscheduler01-init.o `test -f 'smpscheduler01/init.c' || echo '$(srcdir)/'`smpscheduler01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler01/smpscheduler01-init.o `test -f 'smpscheduler01/init.c' || echo '$(srcdir)/'`smpscheduler01/init.c
 
 smpscheduler01/smpscheduler01-init.obj: smpscheduler01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler01/smpscheduler01-init.obj -MD -MP -MF smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo -c -o smpscheduler01/smpscheduler01-init.obj `if test -f 'smpscheduler01/init.c'; then $(CYGPATH_W) 'smpscheduler01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler01/init.c' object='smpscheduler01/smpscheduler01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler01/smpscheduler01-init.obj -MD -MP -MF smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo -c -o smpscheduler01/smpscheduler01-init.obj `if test -f 'smpscheduler01/init.c'; then $(CYGPATH_W) 'smpscheduler01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler01/$(DEPDIR)/smpscheduler01-init.Tpo smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler01/init.c' object='smpscheduler01/smpscheduler01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler01/smpscheduler01-init.obj `if test -f 'smpscheduler01/init.c'; then $(CYGPATH_W) 'smpscheduler01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler01/smpscheduler01-init.obj `if test -f 'smpscheduler01/init.c'; then $(CYGPATH_W) 'smpscheduler01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler01/init.c'; fi`
 
 smpscheduler02/smpscheduler02-init.o: smpscheduler02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler02/smpscheduler02-init.o -MD -MP -MF smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo -c -o smpscheduler02/smpscheduler02-init.o `test -f 'smpscheduler02/init.c' || echo '$(srcdir)/'`smpscheduler02/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler02/init.c' object='smpscheduler02/smpscheduler02-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler02/smpscheduler02-init.o -MD -MP -MF smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo -c -o smpscheduler02/smpscheduler02-init.o `test -f 'smpscheduler02/init.c' || echo '$(srcdir)/'`smpscheduler02/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler02/init.c' object='smpscheduler02/smpscheduler02-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler02/smpscheduler02-init.o `test -f 'smpscheduler02/init.c' || echo '$(srcdir)/'`smpscheduler02/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler02/smpscheduler02-init.o `test -f 'smpscheduler02/init.c' || echo '$(srcdir)/'`smpscheduler02/init.c
 
 smpscheduler02/smpscheduler02-init.obj: smpscheduler02/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler02/smpscheduler02-init.obj -MD -MP -MF smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo -c -o smpscheduler02/smpscheduler02-init.obj `if test -f 'smpscheduler02/init.c'; then $(CYGPATH_W) 'smpscheduler02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler02/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler02/init.c' object='smpscheduler02/smpscheduler02-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler02/smpscheduler02-init.obj -MD -MP -MF smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo -c -o smpscheduler02/smpscheduler02-init.obj `if test -f 'smpscheduler02/init.c'; then $(CYGPATH_W) 'smpscheduler02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler02/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler02/$(DEPDIR)/smpscheduler02-init.Tpo smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler02/init.c' object='smpscheduler02/smpscheduler02-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler02/smpscheduler02-init.obj `if test -f 'smpscheduler02/init.c'; then $(CYGPATH_W) 'smpscheduler02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler02/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler02_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler02/smpscheduler02-init.obj `if test -f 'smpscheduler02/init.c'; then $(CYGPATH_W) 'smpscheduler02/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler02/init.c'; fi`
 
 smpscheduler03/smpscheduler03-init.o: smpscheduler03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-init.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo -c -o smpscheduler03/smpscheduler03-init.o `test -f 'smpscheduler03/init.c' || echo '$(srcdir)/'`smpscheduler03/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/init.c' object='smpscheduler03/smpscheduler03-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-init.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo -c -o smpscheduler03/smpscheduler03-init.o `test -f 'smpscheduler03/init.c' || echo '$(srcdir)/'`smpscheduler03/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/init.c' object='smpscheduler03/smpscheduler03-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-init.o `test -f 'smpscheduler03/init.c' || echo '$(srcdir)/'`smpscheduler03/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-init.o `test -f 'smpscheduler03/init.c' || echo '$(srcdir)/'`smpscheduler03/init.c
 
 smpscheduler03/smpscheduler03-init.obj: smpscheduler03/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-init.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo -c -o smpscheduler03/smpscheduler03-init.obj `if test -f 'smpscheduler03/init.c'; then $(CYGPATH_W) 'smpscheduler03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/init.c' object='smpscheduler03/smpscheduler03-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-init.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo -c -o smpscheduler03/smpscheduler03-init.obj `if test -f 'smpscheduler03/init.c'; then $(CYGPATH_W) 'smpscheduler03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-init.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/init.c' object='smpscheduler03/smpscheduler03-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-init.obj `if test -f 'smpscheduler03/init.c'; then $(CYGPATH_W) 'smpscheduler03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-init.obj `if test -f 'smpscheduler03/init.c'; then $(CYGPATH_W) 'smpscheduler03/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/init.c'; fi`
 
 smpscheduler03/smpscheduler03-test.o: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo -c -o smpscheduler03/smpscheduler03-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler03-test.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo -c -o smpscheduler03/smpscheduler03-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler03-test.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
 
 smpscheduler03/smpscheduler03-test.obj: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo -c -o smpscheduler03/smpscheduler03-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler03-test.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler03-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo -c -o smpscheduler03/smpscheduler03-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler03-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler03-test.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler03_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler03-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
 
 smpscheduler04/smpscheduler04-init.o: smpscheduler04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler04/smpscheduler04-init.o -MD -MP -MF smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo -c -o smpscheduler04/smpscheduler04-init.o `test -f 'smpscheduler04/init.c' || echo '$(srcdir)/'`smpscheduler04/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler04/init.c' object='smpscheduler04/smpscheduler04-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler04/smpscheduler04-init.o -MD -MP -MF smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo -c -o smpscheduler04/smpscheduler04-init.o `test -f 'smpscheduler04/init.c' || echo '$(srcdir)/'`smpscheduler04/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler04/init.c' object='smpscheduler04/smpscheduler04-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler04/smpscheduler04-init.o `test -f 'smpscheduler04/init.c' || echo '$(srcdir)/'`smpscheduler04/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler04/smpscheduler04-init.o `test -f 'smpscheduler04/init.c' || echo '$(srcdir)/'`smpscheduler04/init.c
 
 smpscheduler04/smpscheduler04-init.obj: smpscheduler04/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler04/smpscheduler04-init.obj -MD -MP -MF smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo -c -o smpscheduler04/smpscheduler04-init.obj `if test -f 'smpscheduler04/init.c'; then $(CYGPATH_W) 'smpscheduler04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler04/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler04/init.c' object='smpscheduler04/smpscheduler04-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler04/smpscheduler04-init.obj -MD -MP -MF smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo -c -o smpscheduler04/smpscheduler04-init.obj `if test -f 'smpscheduler04/init.c'; then $(CYGPATH_W) 'smpscheduler04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler04/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler04/$(DEPDIR)/smpscheduler04-init.Tpo smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler04/init.c' object='smpscheduler04/smpscheduler04-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler04/smpscheduler04-init.obj `if test -f 'smpscheduler04/init.c'; then $(CYGPATH_W) 'smpscheduler04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler04/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler04_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler04/smpscheduler04-init.obj `if test -f 'smpscheduler04/init.c'; then $(CYGPATH_W) 'smpscheduler04/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler04/init.c'; fi`
 
 smpscheduler05/smpscheduler05-init.o: smpscheduler05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler05/smpscheduler05-init.o -MD -MP -MF smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo -c -o smpscheduler05/smpscheduler05-init.o `test -f 'smpscheduler05/init.c' || echo '$(srcdir)/'`smpscheduler05/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler05/init.c' object='smpscheduler05/smpscheduler05-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler05/smpscheduler05-init.o -MD -MP -MF smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo -c -o smpscheduler05/smpscheduler05-init.o `test -f 'smpscheduler05/init.c' || echo '$(srcdir)/'`smpscheduler05/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler05/init.c' object='smpscheduler05/smpscheduler05-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler05/smpscheduler05-init.o `test -f 'smpscheduler05/init.c' || echo '$(srcdir)/'`smpscheduler05/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler05/smpscheduler05-init.o `test -f 'smpscheduler05/init.c' || echo '$(srcdir)/'`smpscheduler05/init.c
 
 smpscheduler05/smpscheduler05-init.obj: smpscheduler05/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler05/smpscheduler05-init.obj -MD -MP -MF smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo -c -o smpscheduler05/smpscheduler05-init.obj `if test -f 'smpscheduler05/init.c'; then $(CYGPATH_W) 'smpscheduler05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler05/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler05/init.c' object='smpscheduler05/smpscheduler05-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler05/smpscheduler05-init.obj -MD -MP -MF smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo -c -o smpscheduler05/smpscheduler05-init.obj `if test -f 'smpscheduler05/init.c'; then $(CYGPATH_W) 'smpscheduler05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler05/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler05/$(DEPDIR)/smpscheduler05-init.Tpo smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler05/init.c' object='smpscheduler05/smpscheduler05-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler05/smpscheduler05-init.obj `if test -f 'smpscheduler05/init.c'; then $(CYGPATH_W) 'smpscheduler05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler05/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler05/smpscheduler05-init.obj `if test -f 'smpscheduler05/init.c'; then $(CYGPATH_W) 'smpscheduler05/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler05/init.c'; fi`
 
 smpscheduler03/smpscheduler05-test.o: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler05-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo -c -o smpscheduler03/smpscheduler05-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler05-test.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler05-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo -c -o smpscheduler03/smpscheduler05-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler05-test.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler05-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler05-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
 
 smpscheduler03/smpscheduler05-test.obj: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler05-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo -c -o smpscheduler03/smpscheduler05-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler05-test.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler05-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo -c -o smpscheduler03/smpscheduler05-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler05-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler05-test.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler05-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler05_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler05-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
 
 smpscheduler06/smpscheduler06-init.o: smpscheduler06/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler06/smpscheduler06-init.o -MD -MP -MF smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo -c -o smpscheduler06/smpscheduler06-init.o `test -f 'smpscheduler06/init.c' || echo '$(srcdir)/'`smpscheduler06/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler06/init.c' object='smpscheduler06/smpscheduler06-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler06/smpscheduler06-init.o -MD -MP -MF smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo -c -o smpscheduler06/smpscheduler06-init.o `test -f 'smpscheduler06/init.c' || echo '$(srcdir)/'`smpscheduler06/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler06/init.c' object='smpscheduler06/smpscheduler06-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler06/smpscheduler06-init.o `test -f 'smpscheduler06/init.c' || echo '$(srcdir)/'`smpscheduler06/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler06/smpscheduler06-init.o `test -f 'smpscheduler06/init.c' || echo '$(srcdir)/'`smpscheduler06/init.c
 
 smpscheduler06/smpscheduler06-init.obj: smpscheduler06/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler06/smpscheduler06-init.obj -MD -MP -MF smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo -c -o smpscheduler06/smpscheduler06-init.obj `if test -f 'smpscheduler06/init.c'; then $(CYGPATH_W) 'smpscheduler06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler06/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler06/init.c' object='smpscheduler06/smpscheduler06-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler06/smpscheduler06-init.obj -MD -MP -MF smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo -c -o smpscheduler06/smpscheduler06-init.obj `if test -f 'smpscheduler06/init.c'; then $(CYGPATH_W) 'smpscheduler06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler06/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler06/$(DEPDIR)/smpscheduler06-init.Tpo smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler06/init.c' object='smpscheduler06/smpscheduler06-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler06/smpscheduler06-init.obj `if test -f 'smpscheduler06/init.c'; then $(CYGPATH_W) 'smpscheduler06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler06/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler06/smpscheduler06-init.obj `if test -f 'smpscheduler06/init.c'; then $(CYGPATH_W) 'smpscheduler06/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler06/init.c'; fi`
 
 smpscheduler03/smpscheduler06-test.o: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler06-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo -c -o smpscheduler03/smpscheduler06-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler06-test.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler06-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo -c -o smpscheduler03/smpscheduler06-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler06-test.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler06-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler06-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
 
 smpscheduler03/smpscheduler06-test.obj: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler06-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo -c -o smpscheduler03/smpscheduler06-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler06-test.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler06-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo -c -o smpscheduler03/smpscheduler06-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler06-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler06-test.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler06-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler06_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler06-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
 
 smpscheduler07/smpscheduler07-init.o: smpscheduler07/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler07/smpscheduler07-init.o -MD -MP -MF smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo -c -o smpscheduler07/smpscheduler07-init.o `test -f 'smpscheduler07/init.c' || echo '$(srcdir)/'`smpscheduler07/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler07/init.c' object='smpscheduler07/smpscheduler07-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler07/smpscheduler07-init.o -MD -MP -MF smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo -c -o smpscheduler07/smpscheduler07-init.o `test -f 'smpscheduler07/init.c' || echo '$(srcdir)/'`smpscheduler07/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler07/init.c' object='smpscheduler07/smpscheduler07-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler07/smpscheduler07-init.o `test -f 'smpscheduler07/init.c' || echo '$(srcdir)/'`smpscheduler07/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler07/smpscheduler07-init.o `test -f 'smpscheduler07/init.c' || echo '$(srcdir)/'`smpscheduler07/init.c
 
 smpscheduler07/smpscheduler07-init.obj: smpscheduler07/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler07/smpscheduler07-init.obj -MD -MP -MF smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo -c -o smpscheduler07/smpscheduler07-init.obj `if test -f 'smpscheduler07/init.c'; then $(CYGPATH_W) 'smpscheduler07/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler07/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler07/init.c' object='smpscheduler07/smpscheduler07-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler07/smpscheduler07-init.obj -MD -MP -MF smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo -c -o smpscheduler07/smpscheduler07-init.obj `if test -f 'smpscheduler07/init.c'; then $(CYGPATH_W) 'smpscheduler07/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler07/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler07/$(DEPDIR)/smpscheduler07-init.Tpo smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler07/init.c' object='smpscheduler07/smpscheduler07-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler07/smpscheduler07-init.obj `if test -f 'smpscheduler07/init.c'; then $(CYGPATH_W) 'smpscheduler07/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler07/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler07/smpscheduler07-init.obj `if test -f 'smpscheduler07/init.c'; then $(CYGPATH_W) 'smpscheduler07/init.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler07/init.c'; fi`
 
 smpscheduler03/smpscheduler07-test.o: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler07-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo -c -o smpscheduler03/smpscheduler07-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler07-test.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler07-test.o -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo -c -o smpscheduler03/smpscheduler07-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler07-test.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler07-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler07-test.o `test -f 'smpscheduler03/test.c' || echo '$(srcdir)/'`smpscheduler03/test.c
 
 smpscheduler03/smpscheduler07-test.obj: smpscheduler03/test.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler07-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo -c -o smpscheduler03/smpscheduler07-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler07-test.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpscheduler03/smpscheduler07-test.obj -MD -MP -MF smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo -c -o smpscheduler03/smpscheduler07-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpscheduler03/$(DEPDIR)/smpscheduler07-test.Tpo smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpscheduler03/test.c' object='smpscheduler03/smpscheduler07-test.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler07-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpscheduler07_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpscheduler03/smpscheduler07-test.obj `if test -f 'smpscheduler03/test.c'; then $(CYGPATH_W) 'smpscheduler03/test.c'; else $(CYGPATH_W) '$(srcdir)/smpscheduler03/test.c'; fi`
 
 smpsignal01/smpsignal01-init.o: smpsignal01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpsignal01/smpsignal01-init.o -MD -MP -MF smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo -c -o smpsignal01/smpsignal01-init.o `test -f 'smpsignal01/init.c' || echo '$(srcdir)/'`smpsignal01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo smpsignal01/$(DEPDIR)/smpsignal01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpsignal01/init.c' object='smpsignal01/smpsignal01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpsignal01/smpsignal01-init.o -MD -MP -MF smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo -c -o smpsignal01/smpsignal01-init.o `test -f 'smpsignal01/init.c' || echo '$(srcdir)/'`smpsignal01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo smpsignal01/$(DEPDIR)/smpsignal01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpsignal01/init.c' object='smpsignal01/smpsignal01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpsignal01/smpsignal01-init.o `test -f 'smpsignal01/init.c' || echo '$(srcdir)/'`smpsignal01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpsignal01/smpsignal01-init.o `test -f 'smpsignal01/init.c' || echo '$(srcdir)/'`smpsignal01/init.c
 
 smpsignal01/smpsignal01-init.obj: smpsignal01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpsignal01/smpsignal01-init.obj -MD -MP -MF smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo -c -o smpsignal01/smpsignal01-init.obj `if test -f 'smpsignal01/init.c'; then $(CYGPATH_W) 'smpsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpsignal01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo smpsignal01/$(DEPDIR)/smpsignal01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpsignal01/init.c' object='smpsignal01/smpsignal01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpsignal01/smpsignal01-init.obj -MD -MP -MF smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo -c -o smpsignal01/smpsignal01-init.obj `if test -f 'smpsignal01/init.c'; then $(CYGPATH_W) 'smpsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpsignal01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpsignal01/$(DEPDIR)/smpsignal01-init.Tpo smpsignal01/$(DEPDIR)/smpsignal01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpsignal01/init.c' object='smpsignal01/smpsignal01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpsignal01/smpsignal01-init.obj `if test -f 'smpsignal01/init.c'; then $(CYGPATH_W) 'smpsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpsignal01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpsignal01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpsignal01/smpsignal01-init.obj `if test -f 'smpsignal01/init.c'; then $(CYGPATH_W) 'smpsignal01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpsignal01/init.c'; fi`
 
 smpstrongapa01/smpstrongapa01-init.o: smpstrongapa01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpstrongapa01/smpstrongapa01-init.o -MD -MP -MF smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo -c -o smpstrongapa01/smpstrongapa01-init.o `test -f 'smpstrongapa01/init.c' || echo '$(srcdir)/'`smpstrongapa01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpstrongapa01/init.c' object='smpstrongapa01/smpstrongapa01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpstrongapa01/smpstrongapa01-init.o -MD -MP -MF smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo -c -o smpstrongapa01/smpstrongapa01-init.o `test -f 'smpstrongapa01/init.c' || echo '$(srcdir)/'`smpstrongapa01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpstrongapa01/init.c' object='smpstrongapa01/smpstrongapa01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpstrongapa01/smpstrongapa01-init.o `test -f 'smpstrongapa01/init.c' || echo '$(srcdir)/'`smpstrongapa01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpstrongapa01/smpstrongapa01-init.o `test -f 'smpstrongapa01/init.c' || echo '$(srcdir)/'`smpstrongapa01/init.c
 
 smpstrongapa01/smpstrongapa01-init.obj: smpstrongapa01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpstrongapa01/smpstrongapa01-init.obj -MD -MP -MF smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo -c -o smpstrongapa01/smpstrongapa01-init.obj `if test -f 'smpstrongapa01/init.c'; then $(CYGPATH_W) 'smpstrongapa01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpstrongapa01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpstrongapa01/init.c' object='smpstrongapa01/smpstrongapa01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpstrongapa01/smpstrongapa01-init.obj -MD -MP -MF smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo -c -o smpstrongapa01/smpstrongapa01-init.obj `if test -f 'smpstrongapa01/init.c'; then $(CYGPATH_W) 'smpstrongapa01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpstrongapa01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Tpo smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpstrongapa01/init.c' object='smpstrongapa01/smpstrongapa01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpstrongapa01/smpstrongapa01-init.obj `if test -f 'smpstrongapa01/init.c'; then $(CYGPATH_W) 'smpstrongapa01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpstrongapa01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpstrongapa01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpstrongapa01/smpstrongapa01-init.obj `if test -f 'smpstrongapa01/init.c'; then $(CYGPATH_W) 'smpstrongapa01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpstrongapa01/init.c'; fi`
 
 smpswitchextension01/smpswitchextension01-init.o: smpswitchextension01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpswitchextension01/smpswitchextension01-init.o -MD -MP -MF smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo -c -o smpswitchextension01/smpswitchextension01-init.o `test -f 'smpswitchextension01/init.c' || echo '$(srcdir)/'`smpswitchextension01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpswitchextension01/init.c' object='smpswitchextension01/smpswitchextension01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpswitchextension01/smpswitchextension01-init.o -MD -MP -MF smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo -c -o smpswitchextension01/smpswitchextension01-init.o `test -f 'smpswitchextension01/init.c' || echo '$(srcdir)/'`smpswitchextension01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpswitchextension01/init.c' object='smpswitchextension01/smpswitchextension01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpswitchextension01/smpswitchextension01-init.o `test -f 'smpswitchextension01/init.c' || echo '$(srcdir)/'`smpswitchextension01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpswitchextension01/smpswitchextension01-init.o `test -f 'smpswitchextension01/init.c' || echo '$(srcdir)/'`smpswitchextension01/init.c
 
 smpswitchextension01/smpswitchextension01-init.obj: smpswitchextension01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpswitchextension01/smpswitchextension01-init.obj -MD -MP -MF smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo -c -o smpswitchextension01/smpswitchextension01-init.obj `if test -f 'smpswitchextension01/init.c'; then $(CYGPATH_W) 'smpswitchextension01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpswitchextension01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpswitchextension01/init.c' object='smpswitchextension01/smpswitchextension01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpswitchextension01/smpswitchextension01-init.obj -MD -MP -MF smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo -c -o smpswitchextension01/smpswitchextension01-init.obj `if test -f 'smpswitchextension01/init.c'; then $(CYGPATH_W) 'smpswitchextension01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpswitchextension01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Tpo smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpswitchextension01/init.c' object='smpswitchextension01/smpswitchextension01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpswitchextension01/smpswitchextension01-init.obj `if test -f 'smpswitchextension01/init.c'; then $(CYGPATH_W) 'smpswitchextension01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpswitchextension01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpswitchextension01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpswitchextension01/smpswitchextension01-init.obj `if test -f 'smpswitchextension01/init.c'; then $(CYGPATH_W) 'smpswitchextension01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpswitchextension01/init.c'; fi`
 
 smpthreadlife01/smpthreadlife01-init.o: smpthreadlife01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadlife01/smpthreadlife01-init.o -MD -MP -MF smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo -c -o smpthreadlife01/smpthreadlife01-init.o `test -f 'smpthreadlife01/init.c' || echo '$(srcdir)/'`smpthreadlife01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpthreadlife01/init.c' object='smpthreadlife01/smpthreadlife01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadlife01/smpthreadlife01-init.o -MD -MP -MF smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo -c -o smpthreadlife01/smpthreadlife01-init.o `test -f 'smpthreadlife01/init.c' || echo '$(srcdir)/'`smpthreadlife01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpthreadlife01/init.c' object='smpthreadlife01/smpthreadlife01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadlife01/smpthreadlife01-init.o `test -f 'smpthreadlife01/init.c' || echo '$(srcdir)/'`smpthreadlife01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadlife01/smpthreadlife01-init.o `test -f 'smpthreadlife01/init.c' || echo '$(srcdir)/'`smpthreadlife01/init.c
 
 smpthreadlife01/smpthreadlife01-init.obj: smpthreadlife01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadlife01/smpthreadlife01-init.obj -MD -MP -MF smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo -c -o smpthreadlife01/smpthreadlife01-init.obj `if test -f 'smpthreadlife01/init.c'; then $(CYGPATH_W) 'smpthreadlife01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadlife01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpthreadlife01/init.c' object='smpthreadlife01/smpthreadlife01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadlife01/smpthreadlife01-init.obj -MD -MP -MF smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo -c -o smpthreadlife01/smpthreadlife01-init.obj `if test -f 'smpthreadlife01/init.c'; then $(CYGPATH_W) 'smpthreadlife01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadlife01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Tpo smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpthreadlife01/init.c' object='smpthreadlife01/smpthreadlife01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadlife01/smpthreadlife01-init.obj `if test -f 'smpthreadlife01/init.c'; then $(CYGPATH_W) 'smpthreadlife01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadlife01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadlife01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadlife01/smpthreadlife01-init.obj `if test -f 'smpthreadlife01/init.c'; then $(CYGPATH_W) 'smpthreadlife01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadlife01/init.c'; fi`
 
 smpthreadpin01/smpthreadpin01-init.o: smpthreadpin01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadpin01/smpthreadpin01-init.o -MD -MP -MF smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo -c -o smpthreadpin01/smpthreadpin01-init.o `test -f 'smpthreadpin01/init.c' || echo '$(srcdir)/'`smpthreadpin01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpthreadpin01/init.c' object='smpthreadpin01/smpthreadpin01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadpin01/smpthreadpin01-init.o -MD -MP -MF smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo -c -o smpthreadpin01/smpthreadpin01-init.o `test -f 'smpthreadpin01/init.c' || echo '$(srcdir)/'`smpthreadpin01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpthreadpin01/init.c' object='smpthreadpin01/smpthreadpin01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadpin01/smpthreadpin01-init.o `test -f 'smpthreadpin01/init.c' || echo '$(srcdir)/'`smpthreadpin01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadpin01/smpthreadpin01-init.o `test -f 'smpthreadpin01/init.c' || echo '$(srcdir)/'`smpthreadpin01/init.c
 
 smpthreadpin01/smpthreadpin01-init.obj: smpthreadpin01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadpin01/smpthreadpin01-init.obj -MD -MP -MF smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo -c -o smpthreadpin01/smpthreadpin01-init.obj `if test -f 'smpthreadpin01/init.c'; then $(CYGPATH_W) 'smpthreadpin01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadpin01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpthreadpin01/init.c' object='smpthreadpin01/smpthreadpin01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpthreadpin01/smpthreadpin01-init.obj -MD -MP -MF smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo -c -o smpthreadpin01/smpthreadpin01-init.obj `if test -f 'smpthreadpin01/init.c'; then $(CYGPATH_W) 'smpthreadpin01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadpin01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Tpo smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpthreadpin01/init.c' object='smpthreadpin01/smpthreadpin01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadpin01/smpthreadpin01-init.obj `if test -f 'smpthreadpin01/init.c'; then $(CYGPATH_W) 'smpthreadpin01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadpin01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpthreadpin01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpthreadpin01/smpthreadpin01-init.obj `if test -f 'smpthreadpin01/init.c'; then $(CYGPATH_W) 'smpthreadpin01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpthreadpin01/init.c'; fi`
 
 smpunsupported01/smpunsupported01-init.o: smpunsupported01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpunsupported01/smpunsupported01-init.o -MD -MP -MF smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo -c -o smpunsupported01/smpunsupported01-init.o `test -f 'smpunsupported01/init.c' || echo '$(srcdir)/'`smpunsupported01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpunsupported01/init.c' object='smpunsupported01/smpunsupported01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpunsupported01/smpunsupported01-init.o -MD -MP -MF smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo -c -o smpunsupported01/smpunsupported01-init.o `test -f 'smpunsupported01/init.c' || echo '$(srcdir)/'`smpunsupported01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpunsupported01/init.c' object='smpunsupported01/smpunsupported01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpunsupported01/smpunsupported01-init.o `test -f 'smpunsupported01/init.c' || echo '$(srcdir)/'`smpunsupported01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpunsupported01/smpunsupported01-init.o `test -f 'smpunsupported01/init.c' || echo '$(srcdir)/'`smpunsupported01/init.c
 
 smpunsupported01/smpunsupported01-init.obj: smpunsupported01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpunsupported01/smpunsupported01-init.obj -MD -MP -MF smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo -c -o smpunsupported01/smpunsupported01-init.obj `if test -f 'smpunsupported01/init.c'; then $(CYGPATH_W) 'smpunsupported01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpunsupported01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpunsupported01/init.c' object='smpunsupported01/smpunsupported01-init.obj' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpunsupported01/smpunsupported01-init.obj -MD -MP -MF smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo -c -o smpunsupported01/smpunsupported01-init.obj `if test -f 'smpunsupported01/init.c'; then $(CYGPATH_W) 'smpunsupported01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpunsupported01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpunsupported01/$(DEPDIR)/smpunsupported01-init.Tpo smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpunsupported01/init.c' object='smpunsupported01/smpunsupported01-init.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpunsupported01/smpunsupported01-init.obj `if test -f 'smpunsupported01/init.c'; then $(CYGPATH_W) 'smpunsupported01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpunsupported01/init.c'; fi`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpunsupported01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpunsupported01/smpunsupported01-init.obj `if test -f 'smpunsupported01/init.c'; then $(CYGPATH_W) 'smpunsupported01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpunsupported01/init.c'; fi`
 
 smpwakeafter01/smpwakeafter01-init.o: smpwakeafter01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpwakeafter01/smpwakeafter01-init.o -MD -MP -MF smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo -c -o smpwakeafter01/smpwakeafter01-init.o `test -f 'smpwakeafter01/init.c' || echo '$(srcdir)/'`smpwakeafter01/init.c
-@am__fastdepCC_TRUE@	$(am__mv) smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpwakeafter01/init.c' object='smpwakeafter01/smpwakeafter01-init.o' libtool=no @AMDEPBACKSLASH@
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpwakeafter01/smpwakeafter01-init.o -MD -MP -MF smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo -c -o smpwakeafter01/smpwakeafter01-init.o `test -f 'smpwakeafter01/init.c' || echo '$(srcdir)/'`smpwakeafter01/init.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpwakeafter01/init.c' object='smpwakeafter01/smpwakeafter01-init.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpwakeafter01/smpwakeafter01-init.o `test -f 'smpwakeafter01/init.c' || echo '$(srcdir)/'`smpwakeafter01/init.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpwakeafter01/smpwakeafter01-init.o `test -f 'smpwakeafter01/init.c' || echo '$(srcdir)/'`smpwakeafter01/init.c
 
 smpwakeafter01/smpwakeafter01-init.obj: smpwakeafter01/init.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpwakeafter01/smpwakeafter01-init.obj -MD -MP -MF smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo -c -o smpwakeafter01/smpwakeafter01-init.obj `if test -f 'smpwakeafter01/init.c'; then $(CYGPATH_W) 'smpwakeafter01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpwakeafter01/init.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smpwakeafter01/init.c' object='smpwakeafter01/smpwakeafter01-init.obj' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpwakeafter01/smpwakeafter01-init.obj `if test -f 'smpwakeafter01/init.c'; then $(CYGPATH_W) 'smpwakeafter01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpwakeafter01/init.c'; fi`
-
-ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
-	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
-	unique=`for i in $$list; do \
-	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
-	  done | \
-	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
-	      END { if (nonempty) { for (i in files) print i; }; }'`; \
-	mkid -fID $$unique
-tags: TAGS
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smpwakeafter01/smpwakeafter01-init.obj -MD -MP -MF smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo -c -o smpwakeafter01/smpwakeafter01-init.obj `if test -f 'smpwakeafter01/init.c'; then $(CYGPATH_W) 'smpwakeafter01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpwakeafter01/init.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Tpo smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smpwakeafter01/init.c' object='smpwakeafter01/smpwakeafter01-init.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(smpwakeafter01_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smpwakeafter01/smpwakeafter01-init.obj `if test -f 'smpwakeafter01/init.c'; then $(CYGPATH_W) 'smpwakeafter01/init.c'; else $(CYGPATH_W) '$(srcdir)/smpwakeafter01/init.c'; fi`
+
+ID: $(am__tagged_files)
+	$(am__define_uniq_tagged_files); mkid -fID $$unique
+tags: tags-am
+TAGS: tags
 
-TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
-		$(TAGS_FILES) $(LISP)
+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
 	set x; \
 	here=`pwd`; \
-	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
-	unique=`for i in $$list; do \
-	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
-	  done | \
-	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
-	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	$(am__define_uniq_tagged_files); \
 	shift; \
 	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
 	  test -n "$$unique" || unique=$$empty_fix; \
@@ -3700,6 +4190,18 @@
 	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
 	-rm -f ../support/src/$(DEPDIR)/$(am__dirstamp)
 	-rm -f ../support/src/$(am__dirstamp)
+	-rm -f dpcp01/$(DEPDIR)/$(am__dirstamp)
+	-rm -f dpcp01/$(am__dirstamp)
+	-rm -f dpcp02/$(DEPDIR)/$(am__dirstamp)
+	-rm -f dpcp02/$(am__dirstamp)
+	-rm -f fmlp01/$(DEPDIR)/$(am__dirstamp)
+	-rm -f fmlp01/$(am__dirstamp)
+	-rm -f hdga01/$(DEPDIR)/$(am__dirstamp)
+	-rm -f hdga01/$(am__dirstamp)
+	-rm -f mpcp01/$(DEPDIR)/$(am__dirstamp)
+	-rm -f mpcp01/$(am__dirstamp)
+	-rm -f overhead/$(DEPDIR)/$(am__dirstamp)
+	-rm -f overhead/$(am__dirstamp)
 	-rm -f smp01/$(DEPDIR)/$(am__dirstamp)
 	-rm -f smp01/$(am__dirstamp)
 	-rm -f smp02/$(DEPDIR)/$(am__dirstamp)
@@ -3828,7 +4330,87 @@
 
 distclean: distclean-am
 	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
-	-rm -rf ../support/src/$(DEPDIR) smp01/$(DEPDIR) smp02/$(DEPDIR) smp03/$(DEPDIR) smp05/$(DEPDIR) smp07/$(DEPDIR) smp08/$(DEPDIR) smp09/$(DEPDIR) smpaffinity01/$(DEPDIR) smpatomic01/$(DEPDIR) smpcache01/$(DEPDIR) smpcapture01/$(DEPDIR) smpcapture02/$(DEPDIR) smpclock01/$(DEPDIR) smpfatal01/$(DEPDIR) smpfatal02/$(DEPDIR) smpfatal03/$(DEPDIR) smpfatal04/$(DEPDIR) smpfatal05/$(DEPDIR) smpfatal06/$(DEPDIR) smpfatal08/$(DEPDIR) smpfatal09/$(DEPDIR) smpipi01/$(DEPDIR) smpload01/$(DEPDIR) smplock01/$(DEPDIR) smpmigration01/$(DEPDIR) smpmigration02/$(DEPDIR) smpmrsp01/$(DEPDIR) smpmulticast01/$(DEPDIR) smpmutex01/$(DEPDIR) smpmutex02/$(DEPDIR) smpopenmp01/$(DEPDIR) smppsxaffinity01/$(DEPDIR) smppsxaffinity02/$(DEPDIR) smppsxmutex01/$(DEPDIR) smppsxsignal01/$(DEPDIR) smpschedaffinity01/$(DEPDIR) smpschedaffinity02/$(DEPDIR) smpschedaffinity03/$(DEPDIR) smpschedaffinity04/$(DEPDIR) smpschedaffinity05/$(DEPDIR) smpschededf01/$(DEPDIR) smpschededf02/$(DEPDIR) smpschededf03/$(DEPDIR) smpschededf04/$(DEPDIR) smpschedsem01/$(DEPDIR) smpscheduler01/$(DEPDIR) smpscheduler02/$(DEPDIR) smpscheduler03/$(DEPDIR) smpscheduler04/$(DEPDIR) smpscheduler05/$(DEPDIR) smpscheduler06/$(DEPDIR) smpscheduler07/$(DEPDIR) smpsignal01/$(DEPDIR) smpstrongapa01/$(DEPDIR) smpswitchextension01/$(DEPDIR) smpthreadlife01/$(DEPDIR) smpthreadpin01/$(DEPDIR) smpunsupported01/$(DEPDIR) smpwakeafter01/$(DEPDIR)
+		-rm -f ../support/src/$(DEPDIR)/smp01-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp02-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp03-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp05-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp07-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp08-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp09-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smpclock01-spin.Po
+	-rm -f dpcp01/$(DEPDIR)/dpcp01-init.Po
+	-rm -f dpcp02/$(DEPDIR)/dpcp02-init.Po
+	-rm -f fmlp01/$(DEPDIR)/fmlp01-init.Po
+	-rm -f hdga01/$(DEPDIR)/hdga01-init.Po
+	-rm -f mpcp01/$(DEPDIR)/mpcp01-init.Po
+	-rm -f overhead/$(DEPDIR)/overhead-init.Po
+	-rm -f smp01/$(DEPDIR)/smp01-init.Po
+	-rm -f smp01/$(DEPDIR)/smp01-tasks.Po
+	-rm -f smp02/$(DEPDIR)/smp02-init.Po
+	-rm -f smp02/$(DEPDIR)/smp02-tasks.Po
+	-rm -f smp03/$(DEPDIR)/smp03-init.Po
+	-rm -f smp03/$(DEPDIR)/smp03-tasks.Po
+	-rm -f smp05/$(DEPDIR)/smp05-init.Po
+	-rm -f smp07/$(DEPDIR)/smp07-init.Po
+	-rm -f smp08/$(DEPDIR)/smp08-init.Po
+	-rm -f smp08/$(DEPDIR)/smp08-tasks.Po
+	-rm -f smp09/$(DEPDIR)/smp09-init.Po
+	-rm -f smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po
+	-rm -f smpatomic01/$(DEPDIR)/smpatomic01-init.Po
+	-rm -f smpcache01/$(DEPDIR)/smpcache01-init.Po
+	-rm -f smpcapture01/$(DEPDIR)/smpcapture01-init.Po
+	-rm -f smpcapture02/$(DEPDIR)/smpcapture02-init.Po
+	-rm -f smpclock01/$(DEPDIR)/smpclock01-init.Po
+	-rm -f smpfatal01/$(DEPDIR)/smpfatal01-init.Po
+	-rm -f smpfatal02/$(DEPDIR)/smpfatal02-init.Po
+	-rm -f smpfatal03/$(DEPDIR)/smpfatal03-init.Po
+	-rm -f smpfatal04/$(DEPDIR)/smpfatal04-init.Po
+	-rm -f smpfatal05/$(DEPDIR)/smpfatal05-init.Po
+	-rm -f smpfatal06/$(DEPDIR)/smpfatal06-init.Po
+	-rm -f smpfatal08/$(DEPDIR)/smpfatal08-init.Po
+	-rm -f smpfatal09/$(DEPDIR)/smpfatal09-init.Po
+	-rm -f smpipi01/$(DEPDIR)/smpipi01-init.Po
+	-rm -f smpload01/$(DEPDIR)/smpload01-init.Po
+	-rm -f smplock01/$(DEPDIR)/smplock01-init.Po
+	-rm -f smpmigration01/$(DEPDIR)/smpmigration01-init.Po
+	-rm -f smpmigration02/$(DEPDIR)/smpmigration02-init.Po
+	-rm -f smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po
+	-rm -f smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po
+	-rm -f smpmutex01/$(DEPDIR)/smpmutex01-init.Po
+	-rm -f smpmutex02/$(DEPDIR)/smpmutex02-init.Po
+	-rm -f smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po
+	-rm -f smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po
+	-rm -f smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po
+	-rm -f smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po
+	-rm -f smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po
+	-rm -f smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po
+	-rm -f smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po
+	-rm -f smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po
+	-rm -f smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po
+	-rm -f smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po
+	-rm -f smpschededf01/$(DEPDIR)/smpschededf01-init.Po
+	-rm -f smpschededf02/$(DEPDIR)/smpschededf02-init.Po
+	-rm -f smpschededf03/$(DEPDIR)/smpschededf03-init.Po
+	-rm -f smpschededf04/$(DEPDIR)/smpschededf04-init.Po
+	-rm -f smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po
+	-rm -f smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po
+	-rm -f smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po
+	-rm -f smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po
+	-rm -f smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po
+	-rm -f smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po
+	-rm -f smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po
+	-rm -f smpsignal01/$(DEPDIR)/smpsignal01-init.Po
+	-rm -f smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po
+	-rm -f smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po
+	-rm -f smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po
+	-rm -f smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po
+	-rm -f smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po
+	-rm -f smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-hdr distclean-tags
@@ -3876,7 +4458,87 @@
 maintainer-clean: maintainer-clean-am
 	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
 	-rm -rf $(top_srcdir)/autom4te.cache
-	-rm -rf ../support/src/$(DEPDIR) smp01/$(DEPDIR) smp02/$(DEPDIR) smp03/$(DEPDIR) smp05/$(DEPDIR) smp07/$(DEPDIR) smp08/$(DEPDIR) smp09/$(DEPDIR) smpaffinity01/$(DEPDIR) smpatomic01/$(DEPDIR) smpcache01/$(DEPDIR) smpcapture01/$(DEPDIR) smpcapture02/$(DEPDIR) smpclock01/$(DEPDIR) smpfatal01/$(DEPDIR) smpfatal02/$(DEPDIR) smpfatal03/$(DEPDIR) smpfatal04/$(DEPDIR) smpfatal05/$(DEPDIR) smpfatal06/$(DEPDIR) smpfatal08/$(DEPDIR) smpfatal09/$(DEPDIR) smpipi01/$(DEPDIR) smpload01/$(DEPDIR) smplock01/$(DEPDIR) smpmigration01/$(DEPDIR) smpmigration02/$(DEPDIR) smpmrsp01/$(DEPDIR) smpmulticast01/$(DEPDIR) smpmutex01/$(DEPDIR) smpmutex02/$(DEPDIR) smpopenmp01/$(DEPDIR) smppsxaffinity01/$(DEPDIR) smppsxaffinity02/$(DEPDIR) smppsxmutex01/$(DEPDIR) smppsxsignal01/$(DEPDIR) smpschedaffinity01/$(DEPDIR) smpschedaffinity02/$(DEPDIR) smpschedaffinity03/$(DEPDIR) smpschedaffinity04/$(DEPDIR) smpschedaffinity05/$(DEPDIR) smpschededf01/$(DEPDIR) smpschededf02/$(DEPDIR) smpschededf03/$(DEPDIR) smpschededf04/$(DEPDIR) smpschedsem01/$(DEPDIR) smpscheduler01/$(DEPDIR) smpscheduler02/$(DEPDIR) smpscheduler03/$(DEPDIR) smpscheduler04/$(DEPDIR) smpscheduler05/$(DEPDIR) smpscheduler06/$(DEPDIR) smpscheduler07/$(DEPDIR) smpsignal01/$(DEPDIR) smpstrongapa01/$(DEPDIR) smpswitchextension01/$(DEPDIR) smpthreadlife01/$(DEPDIR) smpthreadpin01/$(DEPDIR) smpunsupported01/$(DEPDIR) smpwakeafter01/$(DEPDIR)
+		-rm -f ../support/src/$(DEPDIR)/smp01-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp02-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp03-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp05-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp07-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp08-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smp09-locked_print.Po
+	-rm -f ../support/src/$(DEPDIR)/smpclock01-spin.Po
+	-rm -f dpcp01/$(DEPDIR)/dpcp01-init.Po
+	-rm -f dpcp02/$(DEPDIR)/dpcp02-init.Po
+	-rm -f fmlp01/$(DEPDIR)/fmlp01-init.Po
+	-rm -f hdga01/$(DEPDIR)/hdga01-init.Po
+	-rm -f mpcp01/$(DEPDIR)/mpcp01-init.Po
+	-rm -f overhead/$(DEPDIR)/overhead-init.Po
+	-rm -f smp01/$(DEPDIR)/smp01-init.Po
+	-rm -f smp01/$(DEPDIR)/smp01-tasks.Po
+	-rm -f smp02/$(DEPDIR)/smp02-init.Po
+	-rm -f smp02/$(DEPDIR)/smp02-tasks.Po
+	-rm -f smp03/$(DEPDIR)/smp03-init.Po
+	-rm -f smp03/$(DEPDIR)/smp03-tasks.Po
+	-rm -f smp05/$(DEPDIR)/smp05-init.Po
+	-rm -f smp07/$(DEPDIR)/smp07-init.Po
+	-rm -f smp08/$(DEPDIR)/smp08-init.Po
+	-rm -f smp08/$(DEPDIR)/smp08-tasks.Po
+	-rm -f smp09/$(DEPDIR)/smp09-init.Po
+	-rm -f smpaffinity01/$(DEPDIR)/smpaffinity01-init.Po
+	-rm -f smpatomic01/$(DEPDIR)/smpatomic01-init.Po
+	-rm -f smpcache01/$(DEPDIR)/smpcache01-init.Po
+	-rm -f smpcapture01/$(DEPDIR)/smpcapture01-init.Po
+	-rm -f smpcapture02/$(DEPDIR)/smpcapture02-init.Po
+	-rm -f smpclock01/$(DEPDIR)/smpclock01-init.Po
+	-rm -f smpfatal01/$(DEPDIR)/smpfatal01-init.Po
+	-rm -f smpfatal02/$(DEPDIR)/smpfatal02-init.Po
+	-rm -f smpfatal03/$(DEPDIR)/smpfatal03-init.Po
+	-rm -f smpfatal04/$(DEPDIR)/smpfatal04-init.Po
+	-rm -f smpfatal05/$(DEPDIR)/smpfatal05-init.Po
+	-rm -f smpfatal06/$(DEPDIR)/smpfatal06-init.Po
+	-rm -f smpfatal08/$(DEPDIR)/smpfatal08-init.Po
+	-rm -f smpfatal09/$(DEPDIR)/smpfatal09-init.Po
+	-rm -f smpipi01/$(DEPDIR)/smpipi01-init.Po
+	-rm -f smpload01/$(DEPDIR)/smpload01-init.Po
+	-rm -f smplock01/$(DEPDIR)/smplock01-init.Po
+	-rm -f smpmigration01/$(DEPDIR)/smpmigration01-init.Po
+	-rm -f smpmigration02/$(DEPDIR)/smpmigration02-init.Po
+	-rm -f smpmrsp01/$(DEPDIR)/smpmrsp01-init.Po
+	-rm -f smpmulticast01/$(DEPDIR)/smpmulticast01-init.Po
+	-rm -f smpmutex01/$(DEPDIR)/smpmutex01-init.Po
+	-rm -f smpmutex02/$(DEPDIR)/smpmutex02-init.Po
+	-rm -f smpopenmp01/$(DEPDIR)/smpopenmp01-init.Po
+	-rm -f smppsxaffinity01/$(DEPDIR)/smppsxaffinity01-init.Po
+	-rm -f smppsxaffinity02/$(DEPDIR)/smppsxaffinity02-init.Po
+	-rm -f smppsxmutex01/$(DEPDIR)/smppsxmutex01-init.Po
+	-rm -f smppsxsignal01/$(DEPDIR)/smppsxsignal01-init.Po
+	-rm -f smpschedaffinity01/$(DEPDIR)/smpschedaffinity01-init.Po
+	-rm -f smpschedaffinity02/$(DEPDIR)/smpschedaffinity02-init.Po
+	-rm -f smpschedaffinity03/$(DEPDIR)/smpschedaffinity03-init.Po
+	-rm -f smpschedaffinity04/$(DEPDIR)/smpschedaffinity04-init.Po
+	-rm -f smpschedaffinity05/$(DEPDIR)/smpschedaffinity05-init.Po
+	-rm -f smpschededf01/$(DEPDIR)/smpschededf01-init.Po
+	-rm -f smpschededf02/$(DEPDIR)/smpschededf02-init.Po
+	-rm -f smpschededf03/$(DEPDIR)/smpschededf03-init.Po
+	-rm -f smpschededf04/$(DEPDIR)/smpschededf04-init.Po
+	-rm -f smpschedsem01/$(DEPDIR)/smpschedsem01-init.Po
+	-rm -f smpscheduler01/$(DEPDIR)/smpscheduler01-init.Po
+	-rm -f smpscheduler02/$(DEPDIR)/smpscheduler02-init.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler03-init.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler03-test.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler05-test.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler06-test.Po
+	-rm -f smpscheduler03/$(DEPDIR)/smpscheduler07-test.Po
+	-rm -f smpscheduler04/$(DEPDIR)/smpscheduler04-init.Po
+	-rm -f smpscheduler05/$(DEPDIR)/smpscheduler05-init.Po
+	-rm -f smpscheduler06/$(DEPDIR)/smpscheduler06-init.Po
+	-rm -f smpscheduler07/$(DEPDIR)/smpscheduler07-init.Po
+	-rm -f smpsignal01/$(DEPDIR)/smpsignal01-init.Po
+	-rm -f smpstrongapa01/$(DEPDIR)/smpstrongapa01-init.Po
+	-rm -f smpswitchextension01/$(DEPDIR)/smpswitchextension01-init.Po
+	-rm -f smpthreadlife01/$(DEPDIR)/smpthreadlife01-init.Po
+	-rm -f smpthreadpin01/$(DEPDIR)/smpthreadpin01-init.Po
+	-rm -f smpunsupported01/$(DEPDIR)/smpunsupported01-init.Po
+	-rm -f smpwakeafter01/$(DEPDIR)/smpwakeafter01-init.Po
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
diff -Naur original/testsuites/smptests/mpcp01/init.c modified/testsuites/smptests/mpcp01/init.c
--- original/testsuites/smptests/mpcp01/init.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/mpcp01/init.c	2023-02-10 21:18:43.231437000 +0100
@@ -0,0 +1,232 @@
+
+#define CONFIGURE_INIT
+#define CONFIGURE_MAXIMUM_USER_EXTENSIONS 1
+#include "system.h"
+#include "stdio.h"
+#include <assert.h>
+#include "tmacros.h"
+
+const char rtems_test_name[] = "MPCP 1";
+rtems_id sid;   // Semaphore ID
+rtems_id tasks[4];
+rtems_status_code rsc; //tmp variable for status code
+rtems_id scheds[2]; //scheduler ids
+rtems_id schid;
+
+rtems_task task0_entry(rtems_task_argument argument);
+rtems_task task1_entry(rtems_task_argument argument);
+rtems_task task2_entry(rtems_task_argument argument);
+rtems_task task_loop_entry(rtems_task_argument argument);  
+
+void busy_wait();
+void print_name( rtems_id id );
+void init_sched();
+
+void init_sched(
+)
+{
+  uint32_t cpu_index;
+  printf( "PROCESSOR COUNT: %d\n",rtems_scheduler_get_processor_maximum() );
+    
+  for ( cpu_index = 0; cpu_index < 2; cpu_index++ ) {
+    rsc = rtems_scheduler_ident_by_processor( cpu_index, &scheds[cpu_index] );
+    printf( "rtems_scheduler_by_processor(%d, &scheds[%d]): %s\n", cpu_index,cpu_index, rtems_status_text( rsc )  );
+    printf( "%d\n",scheds[cpu_index] );
+  }
+}
+
+rtems_task init(
+rtems_task_argument argument
+)
+{
+  TEST_BEGIN();
+  printf("TEST START:\n");
+  /*init_extensions();*/
+  init_sched();
+  
+  /* Normal Task: */
+  rsc = rtems_task_create(
+    rtems_build_name( 'T', 'A', 'S', '0' ), 
+    1,
+    RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT,
+    &tasks[0]
+  );
+  printf( "Create task: %s\n", rtems_status_text( rsc ) );
+
+  rsc = rtems_task_create(
+    rtems_build_name( 'T', 'A', 'S', '1' ),
+    69,
+    RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &tasks[1]
+  );
+  printf( "Create task: %s\n", rtems_status_text( rsc ) );
+
+  rsc = rtems_task_create(
+    rtems_build_name( 'T', 'A', 'S', '2' ),
+    1,
+    RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, 
+    &tasks[2]
+  );
+  printf( "Create task: %s\n", rtems_status_text( rsc ) );
+
+  rsc = rtems_task_create(
+    rtems_build_name( 'T', 'A', 'S', '3' ), 
+    69,
+    RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT,
+    RTEMS_NO_FLOATING_POINT, &tasks[3]
+  );
+  printf( "Create task: %s\n", rtems_status_text( rsc ) );
+
+  rsc = rtems_semaphore_create(
+    rtems_build_name( 'M', 'P', 'C', 'P' ),
+    1,
+    ( RTEMS_BINARY_SEMAPHORE | RTEMS_MULTIPROCESSOR_PRIORITY_CEILING ),
+    1,
+    &sid
+  );
+  printf( "Create MPCP Semaphore: %s\n", rtems_status_text( rsc ) );
+
+  /* Binding tasks to processor */
+  rtems_task_set_scheduler( tasks[0], scheds[0], 2 );
+  rtems_task_set_scheduler( tasks[1], scheds[0], 69 );
+  rtems_task_set_scheduler( tasks[2], scheds[1], 2 );
+  rtems_task_set_scheduler( tasks[3], scheds[1], 69 );
+
+  /* Starting loops */
+  rsc = rtems_task_start( tasks[1], task1_entry, 1 );
+  rsc = rtems_task_start( tasks[3], task_loop_entry, 3 );
+
+  printf( "INIT COMPLETE\n" );
+  rsc = rtems_task_delete( RTEMS_SELF );    /* should not return */
+}
+
+rtems_task task0_entry(
+rtems_task_argument i
+)
+{  
+  rtems_status_code code;
+  printf( "Task %d started\n", i );
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 75000000; i++) {
+        asm volatile("nop"::);
+    }
+  }
+    
+  code = rtems_semaphore_obtain( sid, RTEMS_WAIT, RTEMS_NO_TIMEOUT );   
+  printf( "Obtain MPCP task0: %s\n", rtems_status_text( code ) );  
+  
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 75000000; i++ ) {
+        asm volatile( "nop"::);
+    }
+  }
+  code = rtems_task_start( tasks[2], task2_entry, 2 );
+  printf( "Starting task2 in task0: %s\n", rtems_status_text( code ) );  
+  
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 75000000; i++ ) {
+        asm volatile( "nop":: );
+    }
+  }
+  code = rtems_semaphore_release(sid);  
+  printf( "Release MPCP task0: %s\n", rtems_status_text( code ) ); 
+  
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+/*task1 task1 only busy waits and starts task0*/
+rtems_task task1_entry(
+rtems_task_argument i
+)
+{  
+  printf( "Task %d started\n", i );
+  
+  for ( int j = 0; j < 20; j++ ) {
+    for ( int i = 0; i < 75000000; i++ ) {
+      asm volatile( "nop":: );
+    }
+  }
+      
+  rsc = rtems_task_start( tasks[0], task0_entry, 0 );
+  
+  while ( 1 ) {
+    for( int j = 0; j < 20; j++ ) {
+        for ( int i = 0; i < 75000000; i++ ) {
+          asm volatile( "nop"::);
+        }
+    }
+  }
+  rtems_task_suspend(RTEMS_SELF);
+}
+
+rtems_task task2_entry(
+  rtems_task_argument i 
+)
+{  
+  rtems_status_code code;
+  printf( "Task %d started\n", i );
+  
+  for ( int j = 0; j < 20; j++ ) {
+      for ( int i = 0; i < 75000000; i++) {
+          asm volatile( "nop":: );
+      }
+  }
+  
+  printf( "task2 will try to obtain the MPCP semaphore, but gets suspendend.\n" );
+  code = rtems_semaphore_obtain( sid, RTEMS_WAIT, RTEMS_NO_TIMEOUT );
+  printf( "Obtain MPCP task2: %s\n", rtems_status_text( code ) );
+  
+  for ( int j = 0; j < 20; j++) {
+    for ( int i = 0; i < 75000000; i++) {
+      asm volatile( "nop":: );
+    }
+  }
+  
+  code = rtems_semaphore_release( sid );  
+  printf( "Release MPCP task2: %s\n", rtems_status_text( code ) );
+  rsc = rtems_semaphore_delete(sid);
+  rtems_test_assert(rsc == RTEMS_SUCCESSFUL);
+  TEST_END();
+  rtems_test_exit(0);
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+rtems_task task_loop_entry(
+rtems_task_argument i
+)
+{  
+  printf( "Task %d started\n", i );
+
+  while ( 1337>69 ) {
+    for ( int j = 0; j < 20; j++ ) {
+      for ( int i = 0; i < 75000000; i++ ) {
+        asm volatile( "nop":: );
+      }
+    }
+  }
+  rtems_task_suspend( RTEMS_SELF );
+}
+
+void busy_wait(
+)
+{
+  for(int j = 0; j < 20; j++) {
+    for (int i = 0; i < 75000000; i++) {
+      asm volatile ("nop"::);
+    }
+  }
+}
+
+void print_name(
+rtems_id id
+)
+{
+  char  buffer[10];   /* name assumed to be 10 characters or less */
+  char *result;
+  result = rtems_object_get_name( id, sizeof(buffer), buffer );
+  printk( "ID=0x%08x name=%s\n", id, ((result) ? result : "no name") );
+}
+
diff -Naur original/testsuites/smptests/mpcp01/mpcp01.doc modified/testsuites/smptests/mpcp01/mpcp01.doc
--- original/testsuites/smptests/mpcp01/mpcp01.doc	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/mpcp01/mpcp01.doc	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,12 @@
+﻿This file describes the directives and concepts tested by this test set.
+
+test set name: overhead
+
+directives:
+
+  - MPCP functions (lock/unlock)
+
+concepts:
+
+  - Testing functionality of the MPCP implementation
+  - t_0 and t_2 obtain the semaphore in that order. t_2 gets suspended first.
diff -Naur original/testsuites/smptests/mpcp01/system.h modified/testsuites/smptests/mpcp01/system.h
--- original/testsuites/smptests/mpcp01/system.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/mpcp01/system.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,47 @@
+#ifndef SYSTEM_H_
+#define SYSTEM_H_
+
+#include <bsp.h> /* for device driver prototypes */
+#define CONFIGURE_APPLICATION_NEEDS_CLOCK_DRIVER
+#define CONFIGURE_APPLICATION_NEEDS_CONSOLE_DRIVER
+#define CONFIGURE_MAXIMUM_TASKS 10
+#define CONFIGURE_MAXIMUM_PROCESSORS 2 
+#define CONFIGURE_MAXIMUM_PRIORITY 255
+#define CONFIGURE_INIT_TASK_NAME rtems_build_name( 'I', 'N', 'I', 'T' )
+#define CONFIGURE_MAXIMUM_SEMAPHORES        2 
+#define CONFIGURE_MAXIMUM_MPCP_SEMAPHORES 1
+#define CONFIGURE_RTEMS_INIT_TASKS_TABLE
+#define CONFIGURE_INIT
+#define CONFIGURE_EXTRA_TASK_STACKS         (3 * RTEMS_MINIMUM_STACK_SIZE)
+#define CONFIGURE_INIT_TASK_PRIORITY 2
+rtems_task init(rtems_task_argument argument);
+#define CONFIGURE_INIT_TASK_ENTRY_POINT init
+
+/* Configuration Step 1 - Scheduler Algorithms */
+#define CONFIGURE_SCHEDULER_PRIORITY_SMP
+#include <rtems/scheduler.h>
+
+/* Configuration Step 2 - Schedulers */
+RTEMS_SCHEDULER_PRIORITY_SMP(app, CONFIGURE_MAXIMUM_PRIORITY + 1);
+RTEMS_SCHEDULER_PRIORITY_SMP(sync, CONFIGURE_MAXIMUM_PRIORITY + 1);
+
+/* Configuration Step 3 - Scheduler Table */
+#define CONFIGURE_SCHEDULER_TABLE_ENTRIES \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    app, \
+     rtems_build_name('A', 'P', 'P', ' ')\
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sync, \
+    rtems_build_name('S', 'Y', 'N', 'C') \
+  )
+
+/* Configuration Step 4 - Processor to Scheduler Assignment */
+#define CONFIGURE_SCHEDULER_ASSIGNMENTS \
+  RTEMS_SCHEDULER_ASSIGN(0, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(1, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY)
+
+
+
+#include <rtems/confdefs.h>
+#endif /* SYSTEM_H_ */
diff -Naur original/testsuites/smptests/overhead/init.c modified/testsuites/smptests/overhead/init.c
--- original/testsuites/smptests/overhead/init.c	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/overhead/init.c	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,318 @@
+/*
+ *
+*/
+
+#define CONFIGURE_INIT
+#include "system.h"
+#include "stdio.h"
+#include <assert.h>
+
+int counter = 0;
+rtems_id sid[3];
+rtems_id tasks[15];
+rtems_id periods[15];
+int priorities[15] = {10,10,10,9,9,9,8,8,8,7,7,7,6,6,6};
+
+rtems_status_code rsc; //tmp variable for status code
+rtems_id scheds[4]; //scheduler ids
+
+void print_name( rtems_id id );
+void init_sched();
+void create_and_set_task( int i, rtems_task_entry entry_point, rtems_id scheduler_id, int priority );
+int get_priority_self();
+int get_priority_by_id( rtems_id id );
+
+rtems_task task_entry( rtems_task_argument i );
+rtems_task task_entry1( rtems_task_argument i );
+rtems_task task_entry2( rtems_task_argument i );
+rtems_task_entry entry_points[3] = {task_entry, task_entry1, task_entry2};
+
+
+void create_and_set_task( 
+  int              i, 
+  rtems_task_entry entry_point, 
+  rtems_id         scheduler_id,
+  int              priority
+) 
+{
+  rsc = rtems_task_create(
+    rtems_build_name ('T', 'A', 'S', '0' + i), 
+    1+i, 
+    RTEMS_MINIMUM_STACK_SIZE, RTEMS_PREEMPT, 
+    RTEMS_NO_FLOATING_POINT,
+    &tasks[i]
+  );
+  
+  //printf( "create task %d: %s\n", i, rtems_status_text( rsc ) );
+  rtems_task_set_scheduler( 
+    tasks[i],
+    scheduler_id,
+    priority
+  );
+  
+  rtems_task_start( tasks[i], entry_point, i );
+  rtems_task_wake_after( 100 );
+}
+
+int get_priority_self(
+)
+{
+  return get_priority_by_id( RTEMS_SELF );
+}
+
+int get_priority_by_id(
+  rtems_id id
+)
+{
+  rtems_task_priority rtp;
+  rtems_id sched;
+  rtems_task_get_scheduler( id, &sched );
+  rtems_task_get_priority( id, sched, &rtp);
+  return ( int ) rtp;
+}
+
+void init_sched(
+) 
+{
+  uint32_t cpu_index;
+  printf( "PROCESSOR COUNT: %d\n", rtems_scheduler_get_processor_maximum() );
+  for ( cpu_index = 0; cpu_index < 4; cpu_index++ ) {
+    rsc = rtems_scheduler_ident_by_processor( cpu_index, &scheds[cpu_index] );
+    printf( "rtems_scheduler_by_processor( %d, &scheds[%d] ): %s\n", 
+      cpu_index,cpu_index, 
+      rtems_status_text( rsc )
+    );
+    printf( "%d\n", scheds[cpu_index] );
+  }
+}
+
+rtems_task init 
+(
+  rtems_task_argument argument
+)
+{
+  printf( "TEST START:\n" );
+  init_sched();
+  /* Creating semaphores */
+  for ( int i = 0; i < 3; i++ ) {
+    /*
+    rsc = rtems_semaphore_create(
+      rtems_build_name( 'D', 'P', 'C', '0' + i ), 
+      1,
+      ( RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_PRIORITY_CEILING | RTEMS_GLOBAL ), 
+      1, 
+      &sid[i]
+    );
+    printf( "Create DPCP Semaphore: %s\n", rtems_status_text( rsc ) );
+    */
+    
+    /*
+    rsc = rtems_semaphore_create(
+      rtems_build_name( 'D', 'F', 'L', '0' + i ), 
+      1, 
+      ( RTEMS_BINARY_SEMAPHORE | RTEMS_DISTRIBUTED_FLEXIBLE_LOCKING_LONG |RTEMS_GLOBAL),
+      1, 
+      &sid[i]
+    );    
+    printf ( "Create DFLPL Semaphore: %s\n", rtems_status_text( rsc ) );
+    */
+    
+    /*
+    rsc = rtems_semaphore_create(
+      rtems_build_name( 'M', 'R', 'S', '0' + i ), 
+      1,
+      ( RTEMS_BINARY_SEMAPHORE | RTEMS_MULTIPROCESSOR_RESOURCE_SHARING ), 
+      1, 
+      &sid[i]
+    );
+    printf( "Create MRSP Semaphore: %s\n", rtems_status_text( rsc ) );
+    */
+    
+    /*
+    rsc = rtems_semaphore_create(
+      rtems_build_name ( 'M', 'P', 'C', '0' + i ), 1,
+      ( RTEMS_BINARY_SEMAPHORE | RTEMS_MULTIPROCESSOR_PRIORITY_CEILING ), 
+      1, 
+      &sid[i]
+    );
+    printf( "Create MPCP Semaphore: %s\n", rtems_status_text( rsc ) );
+    */
+    
+    rsc = rtems_semaphore_create(
+      rtems_build_name ( 'F', 'M', 'P', '0' + i ),
+      1,
+      ( RTEMS_BINARY_SEMAPHORE | RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_LONG | RTEMS_FIFO | RTEMS_GLOBAL ), 
+      1, 
+      &sid[i]
+    );
+    printf( "Create FLPL Semaphore: %s\n", rtems_status_text( rsc ) );
+    
+    /*
+    rsc = rtems_semaphore_create(
+      rtems_build_name ( 'F', 'L', 'P', '0' + i ), 
+      1,
+      ( RTEMS_BINARY_SEMAPHORE | RTEMS_FLEXIBLE_MULTIPROCESSOR_LOCKING_SHORT | RTEMS_FIFO | RTEMS_GLOBAL ), 
+      1, 
+      &sid[i]
+    );
+    printf( "Create FLPS Semaphore: %s\n", rtems_status_text( rsc ) );
+    */
+  }
+    
+  /*Tier 1 tasks */  
+  create_and_set_task( 0, task_entry, scheds[0], priorities[0] );
+  create_and_set_task( 1, task_entry1, scheds[2], priorities[1] );
+  create_and_set_task( 2, task_entry2, scheds[3], priorities[2] );
+
+  /*Tier 2 tasks */   
+  create_and_set_task( 3, task_entry1, scheds[0], priorities[3] );
+  create_and_set_task( 4, task_entry2, scheds[2], priorities[4] );
+  create_and_set_task( 5, task_entry, scheds[3], priorities[5] );
+
+  /*Tier 3 tasks */  
+  create_and_set_task( 6, task_entry2, scheds[0], priorities[6] );
+  create_and_set_task( 7, task_entry, scheds[2], priorities[7] );
+  create_and_set_task( 8, task_entry1, scheds[3], priorities[8] );
+
+  /*Tier 4 tasks */
+  create_and_set_task( 9, task_entry1, scheds[0], priorities[9]);
+  create_and_set_task( 10, task_entry2, scheds[2], priorities[10]);
+  create_and_set_task( 11, task_entry, scheds[3], priorities[11]);
+
+  /*Tier 5 tasks */ 
+  create_and_set_task( 12, task_entry2, scheds[0], priorities[12] );
+  create_and_set_task( 13, task_entry, scheds[2], priorities[13] );
+  create_and_set_task( 14, task_entry1, scheds[3], priorities[14] );
+
+  rsc = rtems_task_delete( RTEMS_SELF ); 
+}
+
+rtems_task task_entry(
+  rtems_task_argument i
+)
+{
+  //printf( "Task %d started\n", i );
+  rtems_name name;
+  rtems_status_code status;
+  name = rtems_build_name( 'P', 'E', 'R', '0' + i );
+  status = rtems_rate_monotonic_create( name, &periods[i] );
+  //printf( "create monotonic: %d: %s\n", i, rtems_status_text( status ) );
+  int period;
+  period = priorities[i];
+  period = period * 15;
+        
+  while ( 1 ) {
+    if (rtems_rate_monotonic_period( periods[i], period ) == RTEMS_TIMEOUT) {
+      printf( "missed period. task %d.\n", i );
+      break;
+    }
+    status = rtems_semaphore_obtain( sid[0], RTEMS_WAIT, RTEMS_NO_TIMEOUT );
+    //printf( "L;%d\n", status );
+        
+    for ( int j = 0; j < 1000000; j++ ) {
+      asm volatile( "nop" );
+    }
+    status = rtems_semaphore_release( sid[0] );
+    //printf( "U;%d\n", status );
+    //printf( "Task %d:N P:%d\n", i, get_priority_self( ) );
+  }
+  status = rtems_rate_monotonic_delete( periods[i] );
+        
+  if ( status != RTEMS_SUCCESSFUL ) {
+    printf( "rtems_rate_monotonic_delete failed with status of %d.\n", status );
+  }
+  status = rtems_task_delete( RTEMS_SELF );    /* should not return */
+  printf( "rtems_task_delete returned with status of %d.\n", status );
+}
+
+rtems_task task_entry1( 
+  rtems_task_argument i 
+)
+{
+  //printf( "Task %d started\n", i );
+  rtems_name name;
+  rtems_status_code status;
+  rtems_status_code unlock = 0;
+  rtems_status_code lock = 0;
+  name = rtems_build_name ('P', 'E', 'R', '0' + i);
+  status = rtems_rate_monotonic_create ( name, &periods[i] );
+  //printf( "create monotonic: %d: %s\n", i, rtems_status_text( status ) );
+  int period;
+  period = priorities[i];
+  period = period * 15;
+        
+  while ( 1 ) {
+    if ( rtems_rate_monotonic_period( periods[i], period ) == RTEMS_TIMEOUT ) {
+      printf( "missed period. task %d.\n", i );
+      break;
+    }
+                
+    lock = rtems_semaphore_obtain( sid[1], RTEMS_WAIT, RTEMS_NO_TIMEOUT );
+    printf( "U%d,%d;%d\n", counter, i, unlock );
+    printf( "L%d,%d;%d\n", counter, i, lock );
+    for ( int j = 0; j < 1000000; j++ ) {
+       asm volatile( "nop" );
+    }
+    counter =  counter + 1;
+    unlock = rtems_semaphore_release( sid[1] );
+                
+    //printf( "release: %s\n", rtems_status_text( status ) );
+    //printf( "U;%d\n", status );
+    //printf( "Task %d:N P:%d\n", i, get_priority_self() );
+  }
+        
+  status = rtems_rate_monotonic_delete ( periods[i] );
+  if ( status != RTEMS_SUCCESSFUL ) {
+    printf( "rtems_rate_monotonic_delete failed with status of %d.\n", status );
+  }
+  status = rtems_task_delete( RTEMS_SELF );    /* should not return */
+  printf( "rtems_task_delete returned with status of %d.\n", status );
+}
+
+rtems_task task_entry2(
+  rtems_task_argument i
+)
+{
+  //printf( "Task %d started\n", i );
+  rtems_name name;
+  rtems_status_code status;
+  name = rtems_build_name( 'P', 'E', 'R', '0' + i );
+  status = rtems_rate_monotonic_create( name, &periods[i] );
+  //printf( "create monotonic: %d: %s\n", i, rtems_status_text( status ) );
+  int period;
+  period = priorities[i];
+  period = period * 15;
+        
+  while ( 1 ) {
+    if ( rtems_rate_monotonic_period( periods[i], period ) == RTEMS_TIMEOUT ) {
+      printf( "missed period. task %d.\n", i );
+      break;
+    }
+    status = rtems_semaphore_obtain( sid[2], RTEMS_WAIT, RTEMS_NO_TIMEOUT );
+    //printf( "L;%d\n", status );
+    for ( int j = 0; j < 1000000; j++ ) {
+      asm volatile( "nop" );
+    }
+    status = rtems_semaphore_release( sid[2] );
+    //printf( "release: %s\n", rtems_status_text( status ) );
+    //printf( "U;%d\n", status);
+    //printf( "Task %d:N P:%d\n", i, get_priority_self() );
+  }
+        
+  status = rtems_rate_monotonic_delete( periods[i] );
+  if ( status != RTEMS_SUCCESSFUL ) {
+    printf( "rtems_rate_monotonic_delete failed with status of %d.\n", status );
+  }
+  status = rtems_task_delete( RTEMS_SELF );    /* should not return */
+  printf( "rtems_task_delete returned with status of %d.\n", status );
+}
+void print_name(
+  rtems_id id
+)
+{
+  char  buffer[10];   /* name assumed to be 10 characters or less */
+  char *result;
+  result = rtems_object_get_name( id, sizeof ( buffer ), buffer );
+  printk( "ID=0x%08x name=%s\n", id, ( ( result ) ? result : "no name" ) );
+}
+
diff -Naur original/testsuites/smptests/overhead/overhead.doc modified/testsuites/smptests/overhead/overhead.doc
--- original/testsuites/smptests/overhead/overhead.doc	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/overhead/overhead.doc	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,11 @@
+﻿This file describes the directives and concepts tested by this test set.
+
+test set name: overhead
+
+directives:
+
+  - Everything related to lock/unlock of the implemented protocols.
+
+concepts:
+
+  - Timestamps before and after code execution.
diff -Naur original/testsuites/smptests/overhead/system.h modified/testsuites/smptests/overhead/system.h
--- original/testsuites/smptests/overhead/system.h	1970-01-01 01:00:00.000000000 +0100
+++ modified/testsuites/smptests/overhead/system.h	2022-11-11 16:52:30.000000000 +0100
@@ -0,0 +1,60 @@
+#ifndef SYSTEM_H_
+#define SYSTEM_H_
+
+#include <bsp.h> /* for device driver prototypes */
+#define CONFIGURE_APPLICATION_NEEDS_CLOCK_DRIVER
+#define CONFIGURE_APPLICATION_NEEDS_CONSOLE_DRIVER
+#define CONFIGURE_MAXIMUM_TASKS 18
+#define CONFIGURE_MAXIMUM_PROCESSORS 4 
+#define CONFIGURE_MAXIMUM_PRIORITY 255
+#define CONFIGURE_INIT_TASK_NAME rtems_build_name( 'I', 'N', 'I', 'T' )
+#define CONFIGURE_MAXIMUM_SEMAPHORES        4 
+#define CONFIGURE_MAXIMUM_DFLPL_SEMAPHORES 4
+#define CONFIGURE_MAXIMUM_FMLPL_SEMAPHORES        4 
+#define CONFIGURE_MAXIMUM_MRSP_SEMAPHORES        4 
+#define CONFIGURE_MAXIMUM_PERIODS           18
+#define CONFIGURE_RTEMS_INIT_TASKS_TABLE
+#define CONFIGURE_INIT
+#define CONFIGURE_EXTRA_TASK_STACKS         (3 * RTEMS_MINIMUM_STACK_SIZE)
+rtems_task init(rtems_task_argument argument);
+#define CONFIGURE_INIT_TASK_ENTRY_POINT init
+
+/* Configuration Step 1 - Scheduler Algorithms */
+#define CONFIGURE_SCHEDULER_PRIORITY_SMP
+#include <rtems/scheduler.h>
+
+/* Configuration Step 2 - Schedulers */
+RTEMS_SCHEDULER_PRIORITY_SMP(sched0, 256);
+RTEMS_SCHEDULER_PRIORITY_SMP(sched1, 256);
+RTEMS_SCHEDULER_PRIORITY_SMP(sched2, 256);
+RTEMS_SCHEDULER_PRIORITY_SMP(sched3, 256);
+
+/* Configuration Step 3 - Scheduler Table */
+#define CONFIGURE_SCHEDULER_TABLE_ENTRIES \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sched0, \
+    rtems_build_name('S', 'C', 'D', '0') \
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sched1, \
+    rtems_build_name('S', 'C', 'D', '1') \
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sched2, \
+    rtems_build_name('S', 'C', 'D', '2') \
+  ), \
+  RTEMS_SCHEDULER_TABLE_PRIORITY_SMP( \
+    sched3, \
+    rtems_build_name('S', 'C', 'D', '3') \
+  )
+
+/* Configuration Step 4 - Processor to Scheduler Assignment */
+#define CONFIGURE_SCHEDULER_ASSIGNMENTS \
+  RTEMS_SCHEDULER_ASSIGN(0, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(1, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(2, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY), \
+  RTEMS_SCHEDULER_ASSIGN(3, RTEMS_SCHEDULER_ASSIGN_PROCESSOR_MANDATORY)
+
+
+#include <rtems/confdefs.h>
+#endif /* SYSTEM_H_ */
